/*
Nuki API

The Nuki Web Api

API version: 4.0.1
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the WebConfigRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebConfigRequest{}

// WebConfigRequest struct for WebConfigRequest
type WebConfigRequest struct {
	SmartlockId *int64 `json:"smartlockId,omitempty"`
	WebConfig *SmartlockWebConfig `json:"webConfig,omitempty"`
}

// NewWebConfigRequest instantiates a new WebConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebConfigRequest() *WebConfigRequest {
	this := WebConfigRequest{}
	return &this
}

// NewWebConfigRequestWithDefaults instantiates a new WebConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebConfigRequestWithDefaults() *WebConfigRequest {
	this := WebConfigRequest{}
	return &this
}

// GetSmartlockId returns the SmartlockId field value if set, zero value otherwise.
func (o *WebConfigRequest) GetSmartlockId() int64 {
	if o == nil || IsNil(o.SmartlockId) {
		var ret int64
		return ret
	}
	return *o.SmartlockId
}

// GetSmartlockIdOk returns a tuple with the SmartlockId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebConfigRequest) GetSmartlockIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SmartlockId) {
		return nil, false
	}
	return o.SmartlockId, true
}

// HasSmartlockId returns a boolean if a field has been set.
func (o *WebConfigRequest) HasSmartlockId() bool {
	if o != nil && !IsNil(o.SmartlockId) {
		return true
	}

	return false
}

// SetSmartlockId gets a reference to the given int64 and assigns it to the SmartlockId field.
func (o *WebConfigRequest) SetSmartlockId(v int64) {
	o.SmartlockId = &v
}

// GetWebConfig returns the WebConfig field value if set, zero value otherwise.
func (o *WebConfigRequest) GetWebConfig() SmartlockWebConfig {
	if o == nil || IsNil(o.WebConfig) {
		var ret SmartlockWebConfig
		return ret
	}
	return *o.WebConfig
}

// GetWebConfigOk returns a tuple with the WebConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebConfigRequest) GetWebConfigOk() (*SmartlockWebConfig, bool) {
	if o == nil || IsNil(o.WebConfig) {
		return nil, false
	}
	return o.WebConfig, true
}

// HasWebConfig returns a boolean if a field has been set.
func (o *WebConfigRequest) HasWebConfig() bool {
	if o != nil && !IsNil(o.WebConfig) {
		return true
	}

	return false
}

// SetWebConfig gets a reference to the given SmartlockWebConfig and assigns it to the WebConfig field.
func (o *WebConfigRequest) SetWebConfig(v SmartlockWebConfig) {
	o.WebConfig = &v
}

func (o WebConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebConfigRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SmartlockId) {
		toSerialize["smartlockId"] = o.SmartlockId
	}
	if !IsNil(o.WebConfig) {
		toSerialize["webConfig"] = o.WebConfig
	}
	return toSerialize, nil
}

type NullableWebConfigRequest struct {
	value *WebConfigRequest
	isSet bool
}

func (v NullableWebConfigRequest) Get() *WebConfigRequest {
	return v.value
}

func (v *NullableWebConfigRequest) Set(val *WebConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWebConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWebConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebConfigRequest(val *WebConfigRequest) *NullableWebConfigRequest {
	return &NullableWebConfigRequest{value: val, isSet: true}
}

func (v NullableWebConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


