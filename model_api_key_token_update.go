/*
Nuki API

The Nuki Web Api

API version: 0.0
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ApiKeyTokenUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiKeyTokenUpdate{}

// ApiKeyTokenUpdate struct for ApiKeyTokenUpdate
type ApiKeyTokenUpdate struct {
	// The description
	Description *string `json:"description,omitempty"`
	// The list of scopes
	Scopes []string `json:"scopes,omitempty"`
}

// NewApiKeyTokenUpdate instantiates a new ApiKeyTokenUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKeyTokenUpdate() *ApiKeyTokenUpdate {
	this := ApiKeyTokenUpdate{}
	return &this
}

// NewApiKeyTokenUpdateWithDefaults instantiates a new ApiKeyTokenUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeyTokenUpdateWithDefaults() *ApiKeyTokenUpdate {
	this := ApiKeyTokenUpdate{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiKeyTokenUpdate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyTokenUpdate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiKeyTokenUpdate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiKeyTokenUpdate) SetDescription(v string) {
	o.Description = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *ApiKeyTokenUpdate) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyTokenUpdate) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *ApiKeyTokenUpdate) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *ApiKeyTokenUpdate) SetScopes(v []string) {
	o.Scopes = v
}

func (o ApiKeyTokenUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiKeyTokenUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	return toSerialize, nil
}

type NullableApiKeyTokenUpdate struct {
	value *ApiKeyTokenUpdate
	isSet bool
}

func (v NullableApiKeyTokenUpdate) Get() *ApiKeyTokenUpdate {
	return v.value
}

func (v *NullableApiKeyTokenUpdate) Set(val *ApiKeyTokenUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKeyTokenUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKeyTokenUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKeyTokenUpdate(val *ApiKeyTokenUpdate) *NullableApiKeyTokenUpdate {
	return &NullableApiKeyTokenUpdate{value: val, isSet: true}
}

func (v NullableApiKeyTokenUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKeyTokenUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


