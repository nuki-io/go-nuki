/*
Nuki API

The Nuki Web Api

API version: 3.10.2
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the PreferenceCharacterSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreferenceCharacterSet{}

// PreferenceCharacterSet struct for PreferenceCharacterSet
type PreferenceCharacterSet struct {
	Metadata *CharacterSet `json:"metadata,omitempty"`
	Parameters []Parameter `json:"parameters,omitempty"`
	Quality *float32 `json:"quality,omitempty"`
}

// NewPreferenceCharacterSet instantiates a new PreferenceCharacterSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreferenceCharacterSet() *PreferenceCharacterSet {
	this := PreferenceCharacterSet{}
	return &this
}

// NewPreferenceCharacterSetWithDefaults instantiates a new PreferenceCharacterSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreferenceCharacterSetWithDefaults() *PreferenceCharacterSet {
	this := PreferenceCharacterSet{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *PreferenceCharacterSet) GetMetadata() CharacterSet {
	if o == nil || IsNil(o.Metadata) {
		var ret CharacterSet
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreferenceCharacterSet) GetMetadataOk() (*CharacterSet, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PreferenceCharacterSet) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given CharacterSet and assigns it to the Metadata field.
func (o *PreferenceCharacterSet) SetMetadata(v CharacterSet) {
	o.Metadata = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *PreferenceCharacterSet) GetParameters() []Parameter {
	if o == nil || IsNil(o.Parameters) {
		var ret []Parameter
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreferenceCharacterSet) GetParametersOk() ([]Parameter, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *PreferenceCharacterSet) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []Parameter and assigns it to the Parameters field.
func (o *PreferenceCharacterSet) SetParameters(v []Parameter) {
	o.Parameters = v
}

// GetQuality returns the Quality field value if set, zero value otherwise.
func (o *PreferenceCharacterSet) GetQuality() float32 {
	if o == nil || IsNil(o.Quality) {
		var ret float32
		return ret
	}
	return *o.Quality
}

// GetQualityOk returns a tuple with the Quality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreferenceCharacterSet) GetQualityOk() (*float32, bool) {
	if o == nil || IsNil(o.Quality) {
		return nil, false
	}
	return o.Quality, true
}

// HasQuality returns a boolean if a field has been set.
func (o *PreferenceCharacterSet) HasQuality() bool {
	if o != nil && !IsNil(o.Quality) {
		return true
	}

	return false
}

// SetQuality gets a reference to the given float32 and assigns it to the Quality field.
func (o *PreferenceCharacterSet) SetQuality(v float32) {
	o.Quality = &v
}

func (o PreferenceCharacterSet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreferenceCharacterSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.Quality) {
		toSerialize["quality"] = o.Quality
	}
	return toSerialize, nil
}

type NullablePreferenceCharacterSet struct {
	value *PreferenceCharacterSet
	isSet bool
}

func (v NullablePreferenceCharacterSet) Get() *PreferenceCharacterSet {
	return v.value
}

func (v *NullablePreferenceCharacterSet) Set(val *PreferenceCharacterSet) {
	v.value = val
	v.isSet = true
}

func (v NullablePreferenceCharacterSet) IsSet() bool {
	return v.isSet
}

func (v *NullablePreferenceCharacterSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreferenceCharacterSet(val *PreferenceCharacterSet) *NullablePreferenceCharacterSet {
	return &NullablePreferenceCharacterSet{value: val, isSet: true}
}

func (v NullablePreferenceCharacterSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreferenceCharacterSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


