/*
Nuki API

The Nuki Web Api

API version: 3.13.0
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AccountProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountProfile{}

// AccountProfile struct for AccountProfile
type AccountProfile struct {
	// The first name
	FirstName string `json:"firstName"`
	// The last name
	LastName string `json:"lastName"`
	// The address
	Address string `json:"address"`
	// The postal code
	Zip string `json:"zip"`
	// The city
	City string `json:"city"`
	// The 2-letter country code
	Country string `json:"country"`
}

type _AccountProfile AccountProfile

// NewAccountProfile instantiates a new AccountProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountProfile(firstName string, lastName string, address string, zip string, city string, country string) *AccountProfile {
	this := AccountProfile{}
	this.FirstName = firstName
	this.LastName = lastName
	this.Address = address
	this.Zip = zip
	this.City = city
	this.Country = country
	return &this
}

// NewAccountProfileWithDefaults instantiates a new AccountProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountProfileWithDefaults() *AccountProfile {
	this := AccountProfile{}
	return &this
}

// GetFirstName returns the FirstName field value
func (o *AccountProfile) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *AccountProfile) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *AccountProfile) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *AccountProfile) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *AccountProfile) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *AccountProfile) SetLastName(v string) {
	o.LastName = v
}

// GetAddress returns the Address field value
func (o *AccountProfile) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *AccountProfile) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *AccountProfile) SetAddress(v string) {
	o.Address = v
}

// GetZip returns the Zip field value
func (o *AccountProfile) GetZip() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Zip
}

// GetZipOk returns a tuple with the Zip field value
// and a boolean to check if the value has been set.
func (o *AccountProfile) GetZipOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Zip, true
}

// SetZip sets field value
func (o *AccountProfile) SetZip(v string) {
	o.Zip = v
}

// GetCity returns the City field value
func (o *AccountProfile) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *AccountProfile) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *AccountProfile) SetCity(v string) {
	o.City = v
}

// GetCountry returns the Country field value
func (o *AccountProfile) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *AccountProfile) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *AccountProfile) SetCountry(v string) {
	o.Country = v
}

func (o AccountProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["firstName"] = o.FirstName
	toSerialize["lastName"] = o.LastName
	toSerialize["address"] = o.Address
	toSerialize["zip"] = o.Zip
	toSerialize["city"] = o.City
	toSerialize["country"] = o.Country
	return toSerialize, nil
}

func (o *AccountProfile) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"firstName",
		"lastName",
		"address",
		"zip",
		"city",
		"country",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountProfile := _AccountProfile{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountProfile)

	if err != nil {
		return err
	}

	*o = AccountProfile(varAccountProfile)

	return err
}

type NullableAccountProfile struct {
	value *AccountProfile
	isSet bool
}

func (v NullableAccountProfile) Get() *AccountProfile {
	return v.value
}

func (v *NullableAccountProfile) Set(val *AccountProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountProfile(val *AccountProfile) *NullableAccountProfile {
	return &NullableAccountProfile{value: val, isSet: true}
}

func (v NullableAccountProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


