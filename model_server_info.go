/*
Nuki API

The Nuki Web Api

API version: 0.0
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ServerInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerInfo{}

// ServerInfo struct for ServerInfo
type ServerInfo struct {
	AcceptingRanges *bool `json:"acceptingRanges,omitempty"`
	Address *string `json:"address,omitempty"`
	Agent *string `json:"agent,omitempty"`
	Port *int32 `json:"port,omitempty"`
}

// NewServerInfo instantiates a new ServerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerInfo() *ServerInfo {
	this := ServerInfo{}
	return &this
}

// NewServerInfoWithDefaults instantiates a new ServerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerInfoWithDefaults() *ServerInfo {
	this := ServerInfo{}
	return &this
}

// GetAcceptingRanges returns the AcceptingRanges field value if set, zero value otherwise.
func (o *ServerInfo) GetAcceptingRanges() bool {
	if o == nil || IsNil(o.AcceptingRanges) {
		var ret bool
		return ret
	}
	return *o.AcceptingRanges
}

// GetAcceptingRangesOk returns a tuple with the AcceptingRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInfo) GetAcceptingRangesOk() (*bool, bool) {
	if o == nil || IsNil(o.AcceptingRanges) {
		return nil, false
	}
	return o.AcceptingRanges, true
}

// HasAcceptingRanges returns a boolean if a field has been set.
func (o *ServerInfo) HasAcceptingRanges() bool {
	if o != nil && !IsNil(o.AcceptingRanges) {
		return true
	}

	return false
}

// SetAcceptingRanges gets a reference to the given bool and assigns it to the AcceptingRanges field.
func (o *ServerInfo) SetAcceptingRanges(v bool) {
	o.AcceptingRanges = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ServerInfo) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInfo) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ServerInfo) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *ServerInfo) SetAddress(v string) {
	o.Address = &v
}

// GetAgent returns the Agent field value if set, zero value otherwise.
func (o *ServerInfo) GetAgent() string {
	if o == nil || IsNil(o.Agent) {
		var ret string
		return ret
	}
	return *o.Agent
}

// GetAgentOk returns a tuple with the Agent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInfo) GetAgentOk() (*string, bool) {
	if o == nil || IsNil(o.Agent) {
		return nil, false
	}
	return o.Agent, true
}

// HasAgent returns a boolean if a field has been set.
func (o *ServerInfo) HasAgent() bool {
	if o != nil && !IsNil(o.Agent) {
		return true
	}

	return false
}

// SetAgent gets a reference to the given string and assigns it to the Agent field.
func (o *ServerInfo) SetAgent(v string) {
	o.Agent = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ServerInfo) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInfo) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ServerInfo) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *ServerInfo) SetPort(v int32) {
	o.Port = &v
}

func (o ServerInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcceptingRanges) {
		toSerialize["acceptingRanges"] = o.AcceptingRanges
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Agent) {
		toSerialize["agent"] = o.Agent
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	return toSerialize, nil
}

type NullableServerInfo struct {
	value *ServerInfo
	isSet bool
}

func (v NullableServerInfo) Get() *ServerInfo {
	return v.value
}

func (v *NullableServerInfo) Set(val *ServerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableServerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableServerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerInfo(val *ServerInfo) *NullableServerInfo {
	return &NullableServerInfo{value: val, isSet: true}
}

func (v NullableServerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


