/*
Nuki API

The Nuki Web Api

API version: 0.0
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AccountSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountSetting{}

// AccountSetting struct for AccountSetting
type AccountSetting struct {
	Web *AccountSettingWeb `json:"web,omitempty"`
}

// NewAccountSetting instantiates a new AccountSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountSetting() *AccountSetting {
	this := AccountSetting{}
	return &this
}

// NewAccountSettingWithDefaults instantiates a new AccountSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountSettingWithDefaults() *AccountSetting {
	this := AccountSetting{}
	return &this
}

// GetWeb returns the Web field value if set, zero value otherwise.
func (o *AccountSetting) GetWeb() AccountSettingWeb {
	if o == nil || IsNil(o.Web) {
		var ret AccountSettingWeb
		return ret
	}
	return *o.Web
}

// GetWebOk returns a tuple with the Web field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSetting) GetWebOk() (*AccountSettingWeb, bool) {
	if o == nil || IsNil(o.Web) {
		return nil, false
	}
	return o.Web, true
}

// HasWeb returns a boolean if a field has been set.
func (o *AccountSetting) HasWeb() bool {
	if o != nil && !IsNil(o.Web) {
		return true
	}

	return false
}

// SetWeb gets a reference to the given AccountSettingWeb and assigns it to the Web field.
func (o *AccountSetting) SetWeb(v AccountSettingWeb) {
	o.Web = &v
}

func (o AccountSetting) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Web) {
		toSerialize["web"] = o.Web
	}
	return toSerialize, nil
}

type NullableAccountSetting struct {
	value *AccountSetting
	isSet bool
}

func (v NullableAccountSetting) Get() *AccountSetting {
	return v.value
}

func (v *NullableAccountSetting) Set(val *AccountSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountSetting(val *AccountSetting) *NullableAccountSetting {
	return &NullableAccountSetting{value: val, isSet: true}
}

func (v NullableAccountSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


