openapi: 3.0.1
info:
  contact:
    email: contact@nuki.io
    name: Nuki
    url: https://nuki.io
  description: The Nuki Web Api
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://nuki.io/en/service/nukis-terms-of-use-apis/
  title: Nuki API
  version: 4.0.1
servers:
- url: /
tags:
- name: Account
- name: AccountUser
- name: Address
- name: AddressReservation
- name: AddressToken
- name: AdvancedApi
- name: ApiKey
- name: Company
- name: Notification
- name: Opener
- name: Service
- name: Smartlock
- name: SmartlockAuth
- name: SmartlockLog
paths:
  /account:
    delete:
      operationId: DeleteAccounts
      responses:
        "204":
          content: {}
          description: Ok
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Delete an account
      tags:
      - Account
    get:
      operationId: GetAccounts
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MyAccount'
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Get an account
      tags:
      - Account
    post:
      operationId: PostAccounts
      parameters:
      - description: If false existing API tokens are not deleted if the password
          is changed
        in: query
        name: deleteApiTokens
        schema:
          default: true
          type: boolean
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AccountUpdate'
        description: Account update representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Invalid E-Mail address or name supplied
        "401":
          content: {}
          description: Not authorized
        "409":
          content: {}
          description: E-Mail address already exists
      security:
      - oauth:
        - account
      summary: Update an account
      tags:
      - Account
      x-codegen-request-body-name: body
  /account/email/change:
    post:
      operationId: PostAccountEmailChange
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AccountEmailChange'
        description: Account email change representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Email not in valid format
        "401":
          content: {}
          description: Not authorized
        "409":
          content: {}
          description: Other account is already using the email
      security:
      - oauth:
        - account
      summary: Triggers the email change verification email
      tags:
      - Account
      x-codegen-request-body-name: body
  /account/email/verify:
    post:
      operationId: PostAccountEmailVerify
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Email not in valid format
        "401":
          content: {}
          description: Not authorized
        "409":
          content: {}
          description: Other account is already using the email
      security:
      - oauth:
        - account
      summary: Triggers the email change verification email
      tags:
      - Account
  /account/integration:
    delete:
      operationId: DeleteAccountIntegrations
      parameters:
      - description: The api key id to delete (this also removes all tokens if no
          specific tokenId is given)
        in: query
        name: apiKeyId
        schema:
          type: integer
      - description: The token id if a specific token has to be deleted but not the
          full api key
        in: query
        name: tokenId
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Ok
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Delete an integration
      tags:
      - Account
    get:
      operationId: GetAccountIntegrations
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/AccountIntegration'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Get all integrations for this account
      tags:
      - Account
  /account/otp:
    delete:
      operationId: DeleteAccountOtp
      responses:
        "204":
          content: {}
          description: Ok
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Disables one time password for an account
      tags:
      - Account
    post:
      operationId: PostAccountOtp
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AccountOtpEnable'
        description: Account one time password enable representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: One time password empty
        "401":
          content: {}
          description: Not authorized or one time password wrong
        "429":
          content: {}
          description: Too many failed attempts
      security:
      - oauth:
        - account
      summary: Enables one time password for an account
      tags:
      - Account
      x-codegen-request-body-name: body
    put:
      operationId: PutAccountOtp
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: Ok
        "405":
          content: {}
          description: One time password is already enabled
      security:
      - oauth:
        - account
      summary: Create an one time password secret
      tags:
      - Account
  /account/password/reset:
    post:
      operationId: PostAccountPasswordReset
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AccountPasswordReset'
        description: Account password reset representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "401":
          content: {}
          description: Not authorized
      security:
      - api_key: []
      summary: Reset account password
      tags:
      - Account
      x-codegen-request-body-name: body
  /account/setting:
    delete:
      operationId: DeleteAccountSetting
      responses:
        "204":
          content: {}
          description: Ok
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
      security:
      - oauth:
        - account
      summary: Delete an account setting
      tags:
      - Account
    get:
      operationId: GetAccountSetting
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountSetting'
          description: successful operation
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      security:
      - oauth:
        - account
      summary: Get account setting
      tags:
      - Account
    put:
      operationId: PutAccountSetting
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AccountSetting'
        description: Account setting representation
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountSetting'
          description: successful operation
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Create or update account setting
      tags:
      - Account
      x-codegen-request-body-name: body
  /account/sub:
    get:
      operationId: GetAccountSubs
      parameters:
      - description: The optional email (regex)
        in: query
        name: email
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Account'
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Get an list of sub accounts
      tags:
      - Account
    put:
      operationId: PutAccountSubs
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AccountSubCreate'
        description: Account sub create representation
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MyAccount'
          description: Ok
        "400":
          content: {}
          description: Invalid parameter supplied
      security:
      - oauth:
        - account
      summary: Create an sub account
      tags:
      - Account
      x-codegen-request-body-name: body
  /account/sub/{accountId}:
    delete:
      operationId: DeleteAccountSub
      parameters:
      - description: The account id
        in: path
        name: accountId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Ok
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Delete an sub account
      tags:
      - Account
    get:
      operationId: GetAccountSub
      parameters:
      - description: The account id
        in: path
        name: accountId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Account'
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Get an sub account
      tags:
      - Account
    post:
      operationId: PostAccountSub
      parameters:
      - description: The account id
        in: path
        name: accountId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AccountSubUpdate'
        description: Account update representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Invalid parameter supplied
        "401":
          content: {}
          description: Not authorized
        "409":
          content: {}
          description: E-Mail address already exists
      security:
      - oauth:
        - account
      summary: Update an sub account
      tags:
      - Account
      x-codegen-request-body-name: body
  /account/user:
    get:
      operationId: GetAccountUsers
      parameters:
      - description: Filter for email
        in: query
        name: email
        schema:
          type: string
      - description: The offset of the first user in the collection to return
        in: query
        name: offset
        schema: {}
      - description: "The maximum number of users to return. If the value exceeds\
          \ the maximum, then the maximum value will be used."
        in: query
        name: limit
        schema: {}
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/AccountUser'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
        - smartlock.auth
      summary: Get an list of account users
      tags:
      - AccountUser
    put:
      operationId: PutAccountUsers
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AccountUserCreate'
        description: Account sub create representation
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountUser'
          description: Ok
        "400":
          content: {}
          description: Invalid E-Mail address or name supplied
      security:
      - oauth:
        - account
        - smartlock.auth
      summary: Create an account user
      tags:
      - AccountUser
      x-codegen-request-body-name: body
  /account/user/{accountUserId}:
    delete:
      operationId: DeleteAccountUser
      parameters:
      - description: The account user id
        in: path
        name: accountUserId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Ok
        "401":
          content: {}
          description: Not authorized
        "423":
          content: {}
          description: Locked
      security:
      - oauth:
        - account
        - smartlock.auth
      summary: Deletes asynchronous an account user
      tags:
      - AccountUser
    get:
      operationId: GetAccountUser
      parameters:
      - description: The account user id
        in: path
        name: accountUserId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountUser'
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
        - smartlock.auth
      summary: Get an account user
      tags:
      - AccountUser
    post:
      operationId: PostAccountUser
      parameters:
      - description: The account user id
        in: path
        name: accountUserId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AccountUserUpdate'
        description: Account update representation
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountUser'
          description: successful operation
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Invalid E-Mail address or name supplied
        "401":
          content: {}
          description: Not authorized
        "409":
          content: {}
          description: E-Mail address already exists
      security:
      - oauth:
        - account
        - smartlock.auth
      summary: Update an account user
      tags:
      - AccountUser
      x-codegen-request-body-name: body
  /address:
    get:
      operationId: GetAddresses
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Address'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Get a list of addresses
      tags:
      - Address
    put:
      operationId: PutAddresses
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddressCreate'
        description: Address create representation
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Address'
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
      summary: Create an address
      tags:
      - Address
      x-codegen-request-body-name: body
  /address/token/{id}:
    get:
      operationId: GetAddressToken
      parameters:
      - description: The token id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AddressTokenInfo'
          description: successful operation
        "401":
          content: {}
          description: Not authorized
        "404":
          content: {}
          description: Token not found
      security:
      - api_key: []
      summary: Gives some info about address token
      tags:
      - AddressToken
  /address/token/{id}/redeem:
    get:
      operationId: GetAddressTokenRedeem
      parameters:
      - description: The token id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AddressToken'
          description: successful operation
        "401":
          content: {}
          description: Not authorized
        "404":
          content: {}
          description: Token not found
      security:
      - oauth:
        - account
      summary: Gives an redeemed address token
      tags:
      - AddressToken
    post:
      operationId: PostAddressTokenRedeem
      parameters:
      - description: The token id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: If false no email will be send
        in: query
        name: email
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Invalid parameter given
        "401":
          content: {}
          description: Not authorized
        "404":
          content: {}
          description: Token not found
      security:
      - oauth:
        - account
      summary: Redeems an address token
      tags:
      - AddressToken
  /address/{addressId}:
    delete:
      operationId: DeleteAddress
      parameters:
      - description: The address id
        in: path
        name: addressId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Ok
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
      summary: Delete an address
      tags:
      - Address
    post:
      operationId: PostAddress
      parameters:
      - description: The address id
        in: path
        name: addressId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddressUpdate'
        description: Address update representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
      security:
      - oauth:
        - account
      summary: Update an address
      tags:
      - Address
      x-codegen-request-body-name: body
  /address/{addressId}/reservation:
    get:
      operationId: GetAddressReservations
      parameters:
      - description: The address id
        in: path
        name: addressId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/AddressReservation'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Get a list of address reservations
      tags:
      - AddressReservation
  /address/{addressId}/reservation/{id}/issue:
    post:
      operationId: PostAddressReservationIssue
      parameters:
      - description: The address id
        in: path
        name: addressId
        required: true
        schema:
          type: integer
      - description: The address reservation id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Issues authorizations for an address reservation
      tags:
      - AddressReservation
  /address/{addressId}/reservation/{id}/revoke:
    post:
      operationId: PostAddressReservationRevoke
      parameters:
      - description: The address id
        in: path
        name: addressId
        required: true
        schema:
          type: integer
      - description: The address reservation id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Revoke authorizations for an address reservation
      tags:
      - AddressReservation
  /address/{addressId}/reservation/{id}/update/accesstimes:
    post:
      operationId: PostReservationAccessTimesUpdate
      parameters:
      - description: The address id
        in: path
        name: addressId
        required: true
        schema:
          type: integer
      - description: The reservation id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ReservationAccessTimesUpdate'
        description: Reservation access times update representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Update access times of a reservation
      tags:
      - AddressReservation
      x-codegen-request-body-name: body
  /address/{addressId}/token:
    get:
      operationId: GetAddressTokens
      parameters:
      - description: The address id
        in: path
        name: addressId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/AddressToken'
                type: array
          description: successful operation
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
      summary: Get a list of address tokens
      tags:
      - AddressToken
  /address/{addressId}/unit:
    delete:
      operationId: DeleteAddressUnits
      parameters:
      - description: The address id
        in: path
        name: addressId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              items:
                type: string
              type: array
        description: Address unit IDs to delete
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvancedConfirmationResponse'
          description: Ok
        "400":
          content: {}
          description: Bad parameter
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
        "423":
          content: {}
          description: Locked
      security:
      - oauth:
        - account
      summary: Deletes address units asynchronously
      tags:
      - Address
      x-codegen-request-body-name: body
    get:
      operationId: GetAddressUnits
      parameters:
      - description: The address id
        in: path
        name: addressId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/AddressUnitResponse'
                type: array
          description: successful operation
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Get a list of address units
      tags:
      - Address
    put:
      operationId: PutAddressUnits
      parameters:
      - description: The address id
        in: path
        name: addressId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddressUnit'
        description: Address unit representation
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AddressUnitResponse'
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
      security:
      - oauth:
        - account
      summary: Create an address unit
      tags:
      - Address
      x-codegen-request-body-name: body
  /address/{addressId}/unit/{id}:
    delete:
      operationId: DeleteAddressUnit
      parameters:
      - description: The address id
        in: path
        name: addressId
        required: true
        schema:
          type: integer
      - description: The address unit id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvancedConfirmationResponse'
          description: Ok
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
        "423":
          content: {}
          description: Locked
      security:
      - oauth:
        - account
      summary: Delete an address unit
      tags:
      - Address
  /api/decentralWebhook:
    get:
      operationId: GetDecentralWebhooks
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/DecentralWebhook'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
      security:
      - oauth:
        - webhook.decentral
      summary: Get all registered decentral webhooks
      tags:
      - AdvancedApi
    put:
      operationId: PutDecentralWebhooks
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DecentralWebhook'
        description: Decentral webhook representation
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DecentralWebhook'
          description: successful operation
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
      security:
      - oauth:
        - webhook.decentral
      summary: Create decentral webhook
      tags:
      - AdvancedApi
      x-codegen-request-body-name: body
  /api/decentralWebhook/{id}:
    delete:
      operationId: DeleteDecentralWebhook
      parameters:
      - description: The ID of the decentral webhook
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Ok
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
      security:
      - oauth:
        - webhook.decentral
      summary: Unregister a decentral webhook
      tags:
      - AdvancedApi
  /api/key:
    get:
      operationId: GetApiKeys
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ApiKey'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Get a list of api keys
      tags:
      - ApiKey
    put:
      operationId: PutApiKeys
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApiKeyCreate'
        description: Api key create representation
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiKey'
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Create an api key
      tags:
      - ApiKey
      x-codegen-request-body-name: body
  /api/key/{apiKeyId}:
    delete:
      operationId: DeleteApiKey
      parameters:
      - description: The api key id
        in: path
        name: apiKeyId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Ok
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Delete an api key
      tags:
      - ApiKey
    post:
      operationId: PostApiKey
      parameters:
      - description: The api key id
        in: path
        name: apiKeyId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApiKeyUpdate'
        description: Api key update representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Invalid parameter given
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Update an api key
      tags:
      - ApiKey
      x-codegen-request-body-name: body
  /api/key/{apiKeyId}/advanced:
    delete:
      operationId: DeleteApiKeyAdvanced
      parameters:
      - description: The api key id
        in: path
        name: apiKeyId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Ok
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Delete an advanced api key
      tags:
      - ApiKey
    get:
      operationId: GetApiKeyAdvanced
      parameters:
      - description: The api key id
        in: path
        name: apiKeyId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvancedApiKey'
          description: successful operation
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      security:
      - oauth:
        - account
      summary: Get an advanced api key
      tags:
      - ApiKey
    post:
      operationId: PostApiKeyAdvanced
      parameters:
      - description: The api key id
        in: path
        name: apiKeyId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AdvancedApiKeyUpdate'
        description: Update for advaced api key representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Update an advanced api key
      tags:
      - ApiKey
      x-codegen-request-body-name: body
    put:
      operationId: PutApiKeyAdvanced
      parameters:
      - description: The api key id
        in: path
        name: apiKeyId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AdvancedApiKeyCreate'
        description: Apply for advaced api key representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Create an advanced api key
      tags:
      - ApiKey
      x-codegen-request-body-name: body
  /api/key/{apiKeyId}/advanced/reactivate:
    post:
      operationId: PostApiKeyAdvancedReactivate
      parameters:
      - description: The api key id
        in: path
        name: apiKeyId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Reactivates a deactivated advanced webhook integration
      tags:
      - ApiKey
  /api/key/{apiKeyId}/token:
    get:
      operationId: GetApiKeyTokens
      parameters:
      - description: The api key id
        in: path
        name: apiKeyId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ApiKeyToken'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Get a list of api key tokens
      tags:
      - ApiKey
    put:
      operationId: PutApiKeyTokens
      parameters:
      - description: The api key id
        in: path
        name: apiKeyId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApiKeyTokenCreate'
        description: Api key token create representation
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiKeyToken'
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Create an api key token
      tags:
      - ApiKey
      x-codegen-request-body-name: body
  /api/key/{apiKeyId}/token/{id}:
    delete:
      operationId: DeleteApiKeyToken
      parameters:
      - description: The api key id
        in: path
        name: apiKeyId
        required: true
        schema:
          type: integer
      - description: The api key token id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Delete an api key token
      tags:
      - ApiKey
    post:
      operationId: PostApiKeyToken
      parameters:
      - description: The api key id
        in: path
        name: apiKeyId
        required: true
        schema:
          type: integer
      - description: The api key token id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApiKeyTokenUpdate'
        description: Api key token update representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Invalid parameter given
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Update an api key token
      tags:
      - ApiKey
      x-codegen-request-body-name: body
  /api/key/{apiKeyId}/webhook/logs:
    get:
      operationId: GetWebhookLogs
      parameters:
      - description: The api key id
        in: path
        name: apiKeyId
        required: true
        schema:
          type: integer
      - description: Optionally filter for older logs
        in: query
        name: id
        schema:
          type: string
      - description: "Amount of logs (max: 100)"
        in: query
        name: limit
        schema:
          default: 50
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/WebhookLog'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Get a list of webhook logs (descending)
      tags:
      - AdvancedApi
  /bulk-web-config:
    post:
      operationId: PostSmartlockBulkWebConfig
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BulkWebConfigRequest'
        description: Smartlocks web config update representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - smartlock.config
      summary: Updates the web config for a group of smartlocks
      tags:
      - Smartlock
      x-codegen-request-body-name: body
  /company:
    get:
      operationId: GetCompanies
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Company'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Not allowed
      security:
      - oauth: []
      summary: Get an list of companies
      tags:
      - Company
  /notification:
    get:
      operationId: GetNotifications
      parameters:
      - description: The reference ID to the third party system
        in: query
        name: referenceId
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Notification'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - smartlock.log
      summary: Get all notifications attached to your account
      tags:
      - Notification
    put:
      operationId: PutNotifications
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Notification'
        description: Notification representation
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Notification'
          description: successful operation
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
      security:
      - oauth:
        - smartlock.log
      summary: Create a notification configuration
      tags:
      - Notification
      x-codegen-request-body-name: body
  /notification/{notificationId}:
    delete:
      operationId: DeleteNotification
      parameters:
      - description: The unique notification ID
        in: path
        name: notificationId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
        "405":
          content: {}
          description: Not allowed
      security:
      - oauth:
        - smartlock.log
      summary: Delete a notification configuration
      tags:
      - Notification
    get:
      operationId: GetNotification
      parameters:
      - description: The unique notification ID
        in: path
        name: notificationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Notification'
          description: successful operation
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      security:
      - oauth:
        - smartlock.log
      summary: Get a notification configuration
      tags:
      - Notification
    post:
      operationId: PostNotification
      parameters:
      - description: The unique notification ID
        in: path
        name: notificationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Notification'
        description: Notification update representation
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Notification'
          description: successful operation
        "400":
          content: {}
          description: Invalid parameter given
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
      security:
      - oauth:
        - smartlock.log
      summary: Update a notification configuration
      tags:
      - Notification
      x-codegen-request-body-name: body
  /opener/brand:
    get:
      operationId: GetOpenerBrands
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/OpenerIntercomBrand'
                type: array
          description: successful operation
      summary: Get all intercom brands
      tags:
      - Opener
  /opener/brand/{brandId}:
    get:
      operationId: GetOpenerBrand
      parameters:
      - description: The brand ID
        in: path
        name: brandId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OpenerIntercomBrand'
          description: successful operation
      summary: Get an intercom brand
      tags:
      - Opener
  /opener/intercom:
    get:
      operationId: GetOpenerIntercoms
      parameters:
      - description: Filter for brandId. Required if 'recentlyChanged' is not set
        in: query
        name: brandId
        schema:
          type: integer
      - description: "If true, return intercoms ignoring their verified value"
        in: query
        name: ignoreVerified
        schema:
          type: boolean
      - description: "If true, return all intercoms which recently were updated"
        in: query
        name: recentlyChanged
        schema:
          type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/OpenerIntercomModel'
                type: array
          description: successful operation
      summary: Get a list of intercom models
      tags:
      - Opener
  /opener/intercom/{intercomId}:
    get:
      operationId: GetOpenerIntercom
      parameters:
      - description: The intercom ID
        in: path
        name: intercomId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OpenerIntercomModel'
          description: successful operation
      summary: Get an intercom model
      tags:
      - Opener
  /service:
    get:
      operationId: GetServices
      parameters:
      - description: "Filter for service IDs (comma-separated eg: airbnb,guesty,smoobu)"
        in: query
        name: serviceIds
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Service'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Get a list of services
      tags:
      - Service
  /service/{serviceId}:
    get:
      operationId: GetService
      parameters:
      - description: The service id
        in: path
        name: serviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Service'
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Get a service
      tags:
      - Service
  /service/{serviceId}/link:
    post:
      operationId: PostServiceLink
      parameters:
      - description: The service id
        in: path
        name: serviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Links a service
      tags:
      - Service
  /service/{serviceId}/sync:
    post:
      operationId: PostServiceSync
      parameters:
      - description: The service id
        in: path
        name: serviceId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Syncs a service
      tags:
      - Service
  /service/{serviceId}/unlink:
    post:
      operationId: PostServiceUnlink
      parameters:
      - description: The service id
        in: path
        name: serviceId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - account
      summary: Unlinks a service
      tags:
      - Service
  /smartlock:
    get:
      operationId: GetSmartlocks
      parameters:
      - description: Filter for authId
        in: query
        name: authId
        schema:
          type: integer
      - description: Filter for type
        in: query
        name: type
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Smartlock'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - smartlock
        - smartlock.readOnly
      summary: Get a list of smartlocks
      tags:
      - Smartlock
  /smartlock/auth:
    delete:
      operationId: DeleteSmartlocksAuths
      requestBody:
        content:
          '*/*':
            schema:
              items:
                type: string
              type: array
        description: Smartlock authorization IDs to delete
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad parameter
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
        "423":
          content: {}
          description: Locked
      security:
      - oauth:
        - smartlock.auth
      summary: Deletes smartlock authorizations asynchronously
      tags:
      - SmartlockAuth
      x-codegen-request-body-name: body
    get:
      operationId: GetSmartlocksAuths
      parameters:
      - description: "Filter for account users:  set to a positive number will filter\
          \ for authorizations with this specific accountUserId, set to a negative\
          \ number will filter without set accountUserId"
        in: query
        name: accountUserId
        schema:
          type: integer
      - description: "Filter for authorization's types (comma-separated eg: 0,2,3)"
        in: query
        name: types
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/SmartlockAuth'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - smartlock.auth
      summary: Get a list of smartlock authorizations for your smartlocks
      tags:
      - SmartlockAuth
    post:
      operationId: PostSmartlocksAuths
      requestBody:
        content:
          '*/*':
            schema:
              items:
                $ref: '#/components/schemas/SmartlockAuthMultiUpdate'
              type: array
        description: Smartlock authorization update representations
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad parameter
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
        "409":
          content: {}
          description: Parameter conflicts
        "423":
          content: {}
          description: Locked
      security:
      - oauth:
        - smartlock.auth
      summary: Updates smartlock authorizations asynchronously
      tags:
      - SmartlockAuth
      x-codegen-request-body-name: body
    put:
      operationId: PutSmartlocksAuths
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SmartlocksAuthCreate'
        description: Smartlock authorization create representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad parameter
        "402":
          content: {}
          description: Account not payed
        "409":
          content: {}
          description: Parameter conflicts
        "426":
          content: {}
          description: Account upgrade required
      security:
      - oauth:
        - smartlock.auth
      summary: Creates asynchronous smartlock authorizations
      tags:
      - SmartlockAuth
      x-codegen-request-body-name: body
  /smartlock/auth/advanced:
    put:
      operationId: PutSmartlockAuthsAdvanced
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SmartlocksAuthAdvancedCreate'
        description: Smartlock authorization create representation
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvancedConfirmationResponse'
          description: Ok
        "400":
          content: {}
          description: Bad parameter
        "402":
          content: {}
          description: Account not payed
        "409":
          content: {}
          description: Parameter conflicts
        "426":
          content: {}
          description: Account upgrade required
      security:
      - oauth:
        - smartlock.auth
      summary: Creates asynchronous smartlock authorizations
      tags:
      - AdvancedApi
      x-codegen-request-body-name: body
  /smartlock/auth/paged:
    get:
      operationId: GetSmartlocksAuthsPaginated
      parameters:
      - description: "The page number, starting from 0"
        in: query
        name: page
        schema:
          default: 0
          type: integer
      - description: The number of items in one page
        in: query
        name: size
        schema:
          default: 100
          type: integer
      - description: "Filter for account users:  set to a positive number will filter\
          \ for authorizations with this specific accountUserId, set to a negative\
          \ number will filter without set accountUserId"
        in: query
        name: accountUserId
        schema:
          type: integer
      - description: "Filter for authorization's types (comma-separated eg: 0,2,3)"
        in: query
        name: types
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginatedResponse'
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - smartlock.auth
      summary: Get a paginated list of smartlock authorizations for your smartlocks
      tags:
      - SmartlockAuth
  /smartlock/log:
    get:
      operationId: GetSmartlocksLogs
      parameters:
      - description: Filter for account users
        in: query
        name: accountUserId
        schema:
          type: integer
      - description: Filter for date (RFC3339)
        in: query
        name: fromDate
        schema:
          type: string
      - description: Filter for date (RFC3339)
        in: query
        name: toDate
        schema:
          type: string
      - description: Filter for action
        in: query
        name: action
        schema:
          type: integer
      - description: Filter for older logs
        in: query
        name: id
        schema:
          type: string
      - description: "Amount of logs (max: 50)"
        in: query
        name: limit
        schema:
          default: 20
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/SmartlockLog'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - smartlock.log
      summary: Get a list of smartlock logs for all of your smartlocks
      tags:
      - SmartlockLog
  /smartlock/{smartlockId}:
    delete:
      operationId: DeleteSmartlock
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad parameter
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
      security:
      - oauth:
        - smartlock
      summary: Delete a smartlock
      tags:
      - Smartlock
    get:
      operationId: GetSmartlock
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Smartlock'
          description: successful operation
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      security:
      - oauth:
        - smartlock
        - smartlock.readOnly
      summary: Get a smartlock
      tags:
      - Smartlock
    post:
      operationId: PostSmartlock
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SmartlockUpdate'
        description: Smartlock update representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Invalid parameter given
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
      security:
      - oauth:
        - smartlock
      summary: Update a smartlock
      tags:
      - Smartlock
      x-codegen-request-body-name: body
  /smartlock/{smartlockId}/action:
    post:
      operationId: PostSmartlockAction
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SmartlockAction'
        description: Smartlock action representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
        "402":
          content: {}
          description: Account not payed
      security:
      - oauth:
        - smartlock.action
      summary: Lock & unlock a smartlock with options
      tags:
      - Smartlock
      x-codegen-request-body-name: body
  /smartlock/{smartlockId}/action/advanced:
    post:
      operationId: ActionSmartlockActionAdvanced
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SmartlockAction'
        description: Smartlock action representation
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvancedConfirmationResponse'
          description: Ok
        "400":
          content: {}
          description: Bad parameter
        "402":
          content: {}
          description: Account not payed
        "409":
          content: {}
          description: Parameter conflicts
        "426":
          content: {}
          description: Account upgrade required
      security:
      - oauth:
        - smartlock.action
      summary: Smartlock Action with Callback
      tags:
      - AdvancedApi
      x-codegen-request-body-name: body
  /smartlock/{smartlockId}/action/lock:
    post:
      operationId: PostLockSmartlockLockAction
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
        "405":
          content: {}
          description: Not allowed
      security:
      - oauth:
        - smartlock.action
      summary: Lock a smartlock
      tags:
      - Smartlock
  /smartlock/{smartlockId}/action/lock/advanced:
    post:
      operationId: PostLockSmartlockLockActionAdvanced
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvancedConfirmationResponse'
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
        "405":
          content: {}
          description: Not allowed
      security:
      - oauth:
        - smartlock.action
      summary: Lock a smartlock
      tags:
      - AdvancedApi
  /smartlock/{smartlockId}/action/unlock:
    post:
      operationId: PostUnlockSmartlockUnlockAction
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
        "405":
          content: {}
          description: Not allowed
      security:
      - oauth:
        - smartlock.action
      summary: Unlock a smartlock
      tags:
      - Smartlock
  /smartlock/{smartlockId}/action/unlock/advanced:
    post:
      operationId: PostLockSmartlockUnlockActionAdvanced
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvancedConfirmationResponse'
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
        "405":
          content: {}
          description: Not allowed
      security:
      - oauth:
        - smartlock.action
      summary: Unlock a smartlock
      tags:
      - AdvancedApi
  /smartlock/{smartlockId}/admin/pin:
    post:
      operationId: PostSmartlockAdminPin
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SmartlockAdminPinUpdate'
        description: Smartlock admin pin update representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - smartlock.config
      summary: Updates a smartlock admin pin
      tags:
      - Smartlock
      x-codegen-request-body-name: body
  /smartlock/{smartlockId}/advanced/config:
    post:
      operationId: PostSmartlockAdvancedConfig
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Smartlock.AdvancedConfig'
        description: Smartlock config update representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - smartlock.config
      summary: Updates a smartlock advanced config
      tags:
      - Smartlock
      x-codegen-request-body-name: body
  /smartlock/{smartlockId}/advanced/openerconfig:
    post:
      operationId: PostSmartlockOpenerAdvancedConfig
      parameters:
      - description: The smartlock (opener) id
        in: path
        name: smartlockId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Smartlock.OpenerAdvancedConfig'
        description: Opener advanced config update representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - smartlock.config
      summary: Updates an opener advanced config
      tags:
      - Smartlock
      x-codegen-request-body-name: body
  /smartlock/{smartlockId}/advanced/smartdoorconfig:
    post:
      operationId: PostSmartdoorAdvancedConfig
      parameters:
      - description: The smartdoor id
        in: path
        name: smartlockId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Smartlock.SmartdoorAdvancedConfig'
        description: Smartdoor advanced config update representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - smartlock.config
      summary: Updates a smartdoor advanced config
      tags:
      - Smartlock
      x-codegen-request-body-name: body
  /smartlock/{smartlockId}/auth:
    get:
      operationId: GetSmartlockAuths
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: integer
      - description: "Filter for smartlock authorization's types (comma-separated\
          \ eg: 0,2,3)"
        in: query
        name: types
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/SmartlockAuth'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
      security:
      - oauth:
        - smartlock.auth
      summary: Get a list of smartlock authorizations
      tags:
      - SmartlockAuth
    put:
      operationId: PutSmartlockAuths
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SmartlockAuthCreate'
        description: Smartlock authorization create representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad parameter
        "402":
          content: {}
          description: Account not payed
        "409":
          content: {}
          description: Parameter conflicts
        "426":
          content: {}
          description: Account upgrade required
      security:
      - oauth:
        - smartlock.auth
      summary: Creates asynchronous a smartlock authorization
      tags:
      - SmartlockAuth
      x-codegen-request-body-name: body
  /smartlock/{smartlockId}/auth/advanced/sharedkey:
    post:
      operationId: PostSmartlockAuthWithSharedKey
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SmartlockAuthWithSharedKeyCreate'
        description: Smartlock auth create with shared key
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/SmartlockAuth'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Id not found
      security:
      - oauth:
        - smartlock.auth
      summary: Generate a new smartlock auth with a shared key
      tags:
      - SmartlockAuth
      x-codegen-request-body-name: body
  /smartlock/{smartlockId}/auth/{id}:
    delete:
      operationId: DeleteSmartlockAuth
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: integer
      - description: The smartlock authorization unique id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
        "423":
          content: {}
          description: Locked
      security:
      - oauth:
        - smartlock.auth
      summary: Deletes asynchronous a smartlock authorization
      tags:
      - SmartlockAuth
    get:
      operationId: GetSmartlockAuth
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: integer
      - description: The smartlock auth unique id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SmartlockAuth'
          description: successful operation
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
      security:
      - oauth:
        - smartlock.auth
      summary: Get a smartlock authorization
      tags:
      - SmartlockAuth
    post:
      operationId: PostSmartlockAuth
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: integer
      - description: The smartlock authorization unique id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SmartlockAuthUpdate'
        description: Smartlock authorization update representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad parameter
        "401":
          content: {}
          description: Not authorized
        "403":
          content: {}
          description: Forbidden
        "409":
          content: {}
          description: Parameter conflicts
        "423":
          content: {}
          description: Locked
      security:
      - oauth:
        - smartlock.auth
      summary: Updates asynchronous a smartlock authorization
      tags:
      - SmartlockAuth
      x-codegen-request-body-name: body
  /smartlock/{smartlockId}/config:
    post:
      operationId: PostSmartlockConfig
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Smartlock.Config'
        description: Smartlock config update representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - smartlock.config
      summary: Updates a smartlock config
      tags:
      - Smartlock
      x-codegen-request-body-name: body
  /smartlock/{smartlockId}/log:
    get:
      operationId: GetSmartlockLogs
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: integer
      - description: Filter for auths
        in: query
        name: authId
        schema:
          type: string
      - description: Filter for account users
        in: query
        name: accountUserId
        schema:
          type: integer
      - description: Filter for date (RFC3339)
        in: query
        name: fromDate
        schema:
          type: string
      - description: Filter for date (RFC3339)
        in: query
        name: toDate
        schema:
          type: string
      - description: Filter for action
        in: query
        name: action
        schema:
          type: integer
      - description: Filter for older logs
        in: query
        name: id
        schema:
          type: string
      - description: "Amount of logs (max: 50)"
        in: query
        name: limit
        schema:
          default: 20
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/SmartlockLog'
                type: array
          description: successful operation
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - smartlock.log
      summary: Get a list of smartlock logs
      tags:
      - SmartlockLog
  /smartlock/{smartlockId}/sync:
    post:
      operationId: PostSmartlockSync
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad Parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - smartlock.action
      summary: Syncs a smartlock
      tags:
      - Smartlock
  /smartlock/{smartlockId}/web/config:
    post:
      operationId: PostSmartlockWebConfig
      parameters:
      - description: The smartlock id
        in: path
        name: smartlockId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Smartlock.WebConfig'
        description: Smartlock web config update representation
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Bad parameter
        "401":
          content: {}
          description: Not authorized
      security:
      - oauth:
        - smartlock.config
      summary: Updates a smartlock web config
      tags:
      - Smartlock
      x-codegen-request-body-name: body
components:
  schemas:
    Account:
      example:
        updateDate: 2000-01-23T04:56:07.000+00:00
        profile:
          zip: zip
          firstName: firstName
          lastName: lastName
          country: country
          address: address
          city: city
        language: de
        type: 1
        creationDate: 2000-01-23T04:56:07.000+00:00
        masterAccountId: 1
        accountId: 0
        emailVerified: true
        descent:
          origin: GOOGLE
        apiTermsOfUse:
          acceptanceDate: 2000-01-23T04:56:07.000+00:00
          publishDate: 2000-01-23T04:56:07.000+00:00
          state: Accepted
        shsSubscriptionType: BUSINESS
        rights: 75
        name: name
        b2bActive: true
        config:
          otpEnabledDate: 2000-01-23T04:56:07.000+00:00
          alexaPin: alexaPin
          gactionsHomePin: gactionsHomePin
        email: email
      properties:
        accountId:
          description: The account id
          format: int32
          type: integer
        type:
          description: "The type: 0 .. user, 1 .. company, 2 .. caretaker"
          format: int32
          maximum: 2
          minimum: 0
          type: integer
        email:
          description: The email address
          type: string
        emailVerified:
          description: "true, if the email is verified"
          type: boolean
        name:
          description: The name
          type: string
        masterAccountId:
          description: The master account id if it's a sub account
          format: int32
          type: integer
        rights:
          description: "The rights bitmask if it's a sub account: 1 .. manage smartlock,\
            \ 2 .. operate smartlock, 4 .. manage smartlock config, 8 .. manage smartlock\
            \ authorizations, 16 .. view smartlock logs, 32 .. manage sub accounts,\
            \ 64 .. create smartlocks"
          format: int32
          maximum: 127
          minimum: 0
          type: integer
        language:
          description: The language code
          example: de
          type: string
        config:
          $ref: '#/components/schemas/Account.Config'
        profile:
          $ref: '#/components/schemas/Account.Profile'
        creationDate:
          description: The creation date
          format: date-time
          type: string
        updateDate:
          description: The update date
          format: date-time
          type: string
        descent:
          $ref: '#/components/schemas/Account.Descent'
        shsSubscriptionType:
          description: subscription type of the account (b2b)
          enum:
          - BUSINESS
          - STANDARD
          - BUSINESS_PLUS
          - API_ONLY
          type: string
        b2bActive:
          type: boolean
        apiTermsOfUse:
          $ref: '#/components/schemas/TermsOfUse'
      required:
      - accountId
      - creationDate
      - email
      - name
      - type
      - updateDate
      type: object
    Account.Config:
      example:
        otpEnabledDate: 2000-01-23T04:56:07.000+00:00
        alexaPin: alexaPin
        gactionsHomePin: gactionsHomePin
      properties:
        alexaPin:
          description: The alexa pin - used by alexa for unlock actions
          type: string
        gactionsHomePin:
          description: The google smart home pin - used for unlock actions
          type: string
        otpEnabledDate:
          description: The opt enabled date
          format: date-time
          type: string
      required:
      - alexaPin
      - gactionsHomePin
      type: object
    Account.Descent:
      example:
        origin: GOOGLE
      properties:
        origin:
          description: The account origin source
          enum:
          - GOOGLE
          - APPLE
          readOnly: true
          type: string
      required:
      - origin
      type: object
    Account.Profile:
      example:
        zip: zip
        firstName: firstName
        lastName: lastName
        country: country
        address: address
        city: city
      properties:
        firstName:
          description: The first name
          type: string
        lastName:
          description: The last name
          type: string
        address:
          description: The address
          type: string
        zip:
          description: The postal code
          type: string
        city:
          description: The city
          type: string
        country:
          description: The 2-letter country code
          type: string
      required:
      - address
      - city
      - country
      - firstName
      - lastName
      - zip
      type: object
    AccountEmailChange:
      example:
        email: email
      properties:
        email:
          description: The new email for the account
          type: string
      required:
      - email
      type: object
    AccountIntegration:
      example:
        clientId: clientId
        tokenId: tokenId
        advancedType: advancedType
        description: description
        advancedState: advancedState
        version: LEGACY
        subAccount: true
        lastActiveAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        vendorKey: vendorKey
        subAccountName: subAccountName
        subAccountId: 0
        sortOrder: 6
        name: name
        warning: true
        scopes:
        - scopes
        - scopes
        device: true
      properties:
        version:
          description: If the integration/device is an legacy or from the new oauth
            implementation
          enum:
          - LEGACY
          - HYDRA
          type: string
        vendorKey:
          description: "Enum key identifying the integration/device, values are e.g.\
            \ ALEXA, IOS, NUKI_WEB, API_TOKEN etc"
          type: string
        subAccountName:
          description: "Name of the sub-account or null if there is none, which is\
            \ associated with this token"
          type: string
        subAccountId:
          description: "Id of the sub-account or null if there is none, which is associated\
            \ with this token"
          format: int32
          type: integer
        subAccount:
          description: True if the integration is done via a sub-account
          type: boolean
        name:
          description: Name of the token
          type: string
        description:
          description: "Description given by the user, usually only set for api tokens"
          type: string
        createdAt:
          description: First creation date of the token
          format: date-time
          type: string
        lastActiveAt:
          description: Last refresh date of the token
          format: date-time
          type: string
        scopes:
          description: The scopes which have been granted to the token
          items:
            type: string
          type: array
        warning:
          description: If this is from a legacy integration this is set to true
          type: boolean
        tokenId:
          description: The tokenId if this a manual generated api token
          type: string
        advancedType:
          description: The enum advanced type (HEALTHCARE e.g.) if this integration
            is a advanced one
          type: string
        advancedState:
          description: The enum advanced state (TESTING e.g.) if this integration
            is a advanced one
          type: string
        clientId:
          description: The clientId of this integration/device used for deleting the
            integration
          type: string
        sortOrder:
          description: "Sort order by which the entry should be sorted, is being set\
            \ by the vendor key enum"
          format: int32
          type: integer
        device:
          description: True this is a device and false this is an integration
          type: boolean
      required:
      - clientId
      - name
      - vendorKey
      - version
      type: object
    AccountOtpEnable:
      example:
        otp: otp
      properties:
        otp:
          description: The one time password (otp)
          type: string
      required:
      - otp
      type: object
    AccountPasswordReset:
      example:
        deleteApiTokens: true
        email: email
      properties:
        email:
          type: string
        deleteApiTokens:
          type: boolean
      required:
      - email
      type: object
    AccountSetting:
      example:
        web:
          removedStaledDevices:
          - smartlockId: 0
            read: true
            name: name
          - smartlockId: 0
            read: true
            name: name
          markedStaledDevices:
          - smartlockId: 0
            read: true
            name: name
          - smartlockId: 0
            read: true
            name: name
          deviceViewType: LIST
          nukiClubDismissed: true
          deviceSortType: FAVOURITES_FIRST
      properties:
        web:
          $ref: '#/components/schemas/AccountSetting.Web'
      type: object
    AccountSetting.Web:
      example:
        removedStaledDevices:
        - smartlockId: 0
          read: true
          name: name
        - smartlockId: 0
          read: true
          name: name
        markedStaledDevices:
        - smartlockId: 0
          read: true
          name: name
        - smartlockId: 0
          read: true
          name: name
        deviceViewType: LIST
        nukiClubDismissed: true
        deviceSortType: FAVOURITES_FIRST
      properties:
        deviceViewType:
          description: The initial view type of the device page
          enum:
          - LIST
          - TILE
          type: string
        deviceSortType:
          description: The initial sort type of the device page
          enum:
          - FAVOURITES_FIRST
          - NAME_ASC
          - NAME_DESC
          - LAST_ADDED_DESC
          type: string
        nukiClubDismissed:
          description: "If true, Nuki Club info is dismissed and no banner is shown"
          type: boolean
        removedStaledDevices:
          description: List of removed staled devices
          items:
            $ref: '#/components/schemas/StaleDevice'
          type: array
        markedStaledDevices:
          description: List of marked staled devices
          items:
            $ref: '#/components/schemas/StaleDevice'
          type: array
      type: object
    AccountSubCreate:
      example:
        password: password
        rights: 2
        profile:
          zip: zip
          firstName: firstName
          lastName: lastName
          country: country
          address: address
          city: city
        name: name
        language: de
        email: test@test.at
      properties:
        email:
          description: The email address
          example: test@test.at
          type: string
        password:
          description: The password (must be at least 7 chars long)
          type: string
        name:
          description: The name of the sub account
          type: string
        rights:
          description: "The right bitmask of the sub account: 1 .. operate smartlock,\
            \ 2 .. change smartlock config, 4 .. manage smartlock users, 8 .. view\
            \ smartlock logs, 16 .. manage sub accounts"
          format: int32
          maximum: 31
          minimum: 0
          type: integer
        language:
          description: The language code
          example: de
          type: string
        profile:
          $ref: '#/components/schemas/Account.Profile'
      required:
      - email
      - language
      - name
      - password
      - rights
      type: object
    AccountSubUpdate:
      example:
        password: password
        rights: 10
        profile:
          zip: zip
          firstName: firstName
          lastName: lastName
          country: country
          address: address
          city: city
        name: name
        language: de
        config:
          otpEnabledDate: 2000-01-23T04:56:07.000+00:00
          alexaPin: alexaPin
          gactionsHomePin: gactionsHomePin
        email: test@test.at
      properties:
        email:
          description: The new email address
          example: test@test.at
          type: string
        password:
          description: The new password (must be at least 7 chars long)
          type: string
        name:
          description: The new name of the sub account
          type: string
        rights:
          description: "The new right bitmask of the sub account: 1 .. operate smartlock,\
            \ 2 .. change smartlock config, 4 .. manage smartlock users, 8 .. view\
            \ smartlock logs, 16 .. manage sub accounts, 32 .. manage sub accounts,\
            \ 64 .. create smartlocks"
          format: int32
          maximum: 127
          minimum: 0
          type: integer
        language:
          description: The language code
          example: de
          type: string
        config:
          $ref: '#/components/schemas/Account.Config'
        profile:
          $ref: '#/components/schemas/Account.Profile'
      required:
      - language
      type: object
    AccountUpdate:
      example:
        password: password
        profile:
          zip: zip
          firstName: firstName
          lastName: lastName
          country: country
          address: address
          city: city
        name: name
        language: de
        config:
          otpEnabledDate: 2000-01-23T04:56:07.000+00:00
          alexaPin: alexaPin
          gactionsHomePin: gactionsHomePin
        email: test@test.at
      properties:
        email:
          description: The new email address
          example: test@test.at
          type: string
        password:
          description: The password (must be at least 7 chars long)
          type: string
        name:
          description: The name of the account
          type: string
        language:
          description: The language code
          example: de
          type: string
        config:
          $ref: '#/components/schemas/Account.Config'
        profile:
          $ref: '#/components/schemas/Account.Profile'
      required:
      - language
      type: object
    AccountUser:
      example:
        accountId: 6
        updateDate: 2000-01-23T04:56:07.000+00:00
        name: name
        operationId: operationId
        language: de
        type: 0
        creationDate: 2000-01-23T04:56:07.000+00:00
        email: email
        accountUserId: 0
      properties:
        accountUserId:
          description: The account user id
          format: int32
          type: integer
        accountId:
          description: The account id
          format: int32
          type: integer
        type:
          description: "The optional type: 0 .. user, 1 .. company"
          format: int32
          maximum: 1
          minimum: 0
          type: integer
        email:
          description: The email address
          type: string
        name:
          description: The name
          type: string
        language:
          description: The language code
          example: de
          type: string
        operationId:
          description: The operation id - if set it's locked for another operation
          readOnly: true
          type: string
        creationDate:
          description: The creation date
          format: date-time
          type: string
        updateDate:
          description: The update date
          format: date-time
          type: string
      required:
      - accountId
      - accountUserId
      - creationDate
      - email
      - name
      - updateDate
      type: object
    AccountUserCreate:
      example:
        name: name
        language: en
        type: 0
        email: email
      properties:
        type:
          description: "The optional type - only allowed for caretakers: 0 .. user,\
            \ 1 .. company"
          format: int32
          maximum: 1
          minimum: 0
          type: integer
        email:
          description: The email address
          type: string
        name:
          description: The name
          type: string
        language:
          description: The language code
          enum:
          - en
          - de
          - es
          - fr
          - it
          - nl
          - cs
          - sk
          type: string
      required:
      - email
      - name
      type: object
    AccountUserUpdate:
      example:
        name: name
        language: en
        email: test@test.at
      properties:
        email:
          description: The new email address
          example: test@test.at
          type: string
        name:
          description: The new name of the sub account
          type: string
        language:
          description: The new language code
          enum:
          - en
          - de
          - es
          - fr
          - it
          - nl
          - cs
          - sk
          type: string
      type: object
    Address:
      example:
        accountId: 6
        settings:
          key: "{}"
        updateDate: 2000-01-23T04:56:07.000+00:00
        checkOutTime: 5
        smartlockIds:
        - 1
        - 1
        checkInTime: 5
        name: name
        timeZone: timeZone
        serviceId: airbnb
        creationDate: 2000-01-23T04:56:07.000+00:00
        addressId: 0
      properties:
        addressId:
          description: The address id
          format: int32
          type: integer
        accountId:
          description: The account id
          format: int32
          type: integer
        name:
          description: The name of the address
          type: string
        smartlockIds:
          description: The smartlocks for this address
          items:
            format: int64
            type: integer
          type: array
        serviceId:
          description: The optional service id if the address is from an partner service
          enum:
          - airbnb
          - bookingsync
          type: string
        timeZone:
          description: The timezone
          type: string
        checkInTime:
          description: The optional check in time (minutes of the day)
          format: int32
          type: integer
        checkOutTime:
          description: The optional check out time (minutes of the day)
          format: int32
          type: integer
        settings:
          additionalProperties:
            properties: {}
            type: object
          description: The optional settings object
          type: object
        creationDate:
          description: The creation date
          format: date-time
          type: string
        updateDate:
          description: The update date
          format: date-time
          type: string
      required:
      - accountId
      - addressId
      - creationDate
      - name
      - smartlockIds
      - updateDate
      type: object
    AddressCreate:
      example:
        smartlockIds:
        - 0
        - 0
        name: name
      properties:
        name:
          description: The name of the address
          type: string
        smartlockIds:
          description: The smartlocks for this address
          items:
            format: int64
            type: integer
          type: array
      required:
      - name
      - smartlockIds
      type: object
    AddressReservation:
      example:
        keypadIssued: true
        updateDate: 2000-01-23T04:56:07.000+00:00
        isCurrentlyIssuingAuth: true
        checkedIn: true
        endDate: 2000-01-23T04:56:07.000+00:00
        hasCustomAccessTimes: true
        guestsIssued: 5
        addressId: 0
        reference: reference
        accountId: 6
        automation: 5
        currentlyIssuingAuth: true
        currentlyRevokingAuth: true
        isCurrentlyRevokingAuth: true
        name: name
        guests: 1
        id: id
        state: canceled
        serviceId: airbnb
        email: email
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: The id
          type: string
        addressId:
          description: The address id
          format: int32
          type: integer
        accountId:
          description: The account id
          format: int32
          type: integer
        email:
          description: The email of the guest
          type: string
        name:
          description: The name of the guest
          type: string
        guests:
          description: The number of guests
          format: int32
          type: integer
        guestsIssued:
          description: The number of guests issued
          format: int32
          type: integer
        keypadIssued:
          description: True if a keypad authorization was issued
          type: boolean
        state:
          description: The state
          enum:
          - canceled
          - accepted
          type: string
        serviceId:
          description: The optional service id if the address is from an partner service
          enum:
          - airbnb
          - bookingsync
          type: string
        reference:
          description: The reference (booking code)
          type: string
        automation:
          description: The automation state
          format: int32
          type: integer
        checkedIn:
          description: "True if the user has checked in, false if the check in is\
            \ pending, null if it isn't monitored"
          type: boolean
        startDate:
          description: The start date
          format: date-time
          type: string
        endDate:
          description: The end date
          format: date-time
          type: string
        updateDate:
          description: The update date
          format: date-time
          type: string
        isCurrentlyIssuingAuth:
          type: boolean
        isCurrentlyRevokingAuth:
          type: boolean
        hasCustomAccessTimes:
          type: boolean
        currentlyIssuingAuth:
          type: boolean
        currentlyRevokingAuth:
          type: boolean
      required:
      - accountId
      - addressId
      - automation
      - email
      - endDate
      - guests
      - guestsIssued
      - hasCustomAccessTimes
      - id
      - isCurrentlyIssuingAuth
      - isCurrentlyRevokingAuth
      - keypadIssued
      - name
      - startDate
      - state
      - updateDate
      type: object
    AddressToken:
      example:
        redeemDate: 2000-01-23T04:56:07.000+00:00
        inviteKeys:
        - inviteKeys
        - inviteKeys
        redeemAccountId: 6
        id: id
        creationDate: 2000-01-23T04:56:07.000+00:00
        addressId: 0
        redeemResult: ok
      properties:
        id:
          description: The id
          type: string
        addressId:
          description: The address id
          format: int32
          type: integer
        creationDate:
          description: The creation date
          format: date-time
          type: string
        redeemDate:
          description: The redeem date
          format: date-time
          type: string
        redeemAccountId:
          description: The redeem account id
          format: int32
          type: integer
        inviteKeys:
          description: The list of invite keys
          items:
            type: string
          type: array
        redeemResult:
          description: The redeem result
          enum:
          - ok
          - failed
          type: string
      required:
      - addressId
      - creationDate
      - id
      - redeemAccountId
      - redeemDate
      type: object
    AddressTokenInfo:
      example:
        smartlockNames:
        - smartlockNames
        - smartlockNames
        addressName: addressName
        id: id
      properties:
        id:
          description: The id
          type: string
        addressName:
          description: The address name
          type: string
        smartlockNames:
          description: The associated smartlock names
          items:
            type: string
          type: array
      required:
      - addressName
      - id
      - smartlockNames
      type: object
    AddressUnit:
      example:
        name: name
        operationId: operationId
        id: id
        addressTokenId: addressTokenId
        addressId: 0
      properties:
        id:
          description: The id
          readOnly: true
          type: string
        name:
          description: The name of the address unit
          type: string
        addressId:
          description: The address id
          format: int32
          readOnly: true
          type: integer
        addressTokenId:
          description: The address token id
          readOnly: true
          type: string
        operationId:
          description: The operation id - if set it's locked for another operation
          readOnly: true
          type: string
      required:
      - name
      type: object
    AddressUnitResponse:
      example:
        redeemDate: 2000-01-23T04:56:07.000+00:00
        name: name
        operationId: operationId
        id: id
        addressTokenId: addressTokenId
        creationDate: 2000-01-23T04:56:07.000+00:00
        addressId: 0
        redeemResult: ok
      properties:
        id:
          description: The id
          readOnly: true
          type: string
        name:
          description: The name of the address unit
          type: string
        addressId:
          description: The address id
          format: int32
          readOnly: true
          type: integer
        addressTokenId:
          description: The address token id
          readOnly: true
          type: string
        operationId:
          description: The operation id - if set it's locked for another operation
          readOnly: true
          type: string
        creationDate:
          description: The creation date
          format: date-time
          type: string
        redeemDate:
          description: The redeem date
          format: date-time
          type: string
        redeemResult:
          description: The redeem result
          enum:
          - ok
          - failed
          type: string
      required:
      - creationDate
      - name
      - redeemDate
      type: object
    AddressUpdate:
      example:
        settings:
          key: "{}"
        smartlockIds:
        - 0
        - 0
        name: name
      properties:
        name:
          description: The name of the address
          type: string
        smartlockIds:
          description: The smartlocks for this address
          items:
            format: int64
            type: integer
          type: array
        settings:
          additionalProperties:
            properties: {}
            type: object
          description: The optional settings
          type: object
      type: object
    AdvancedApiKey:
      example:
        country: country
        webhookFeatures:
        - DEVICE_STATUS
        - DEVICE_STATUS
        updateDate: 2000-01-23T04:56:07.000+00:00
        description: description
        secret: secret
        type: ONLY_SECRET
        creationDate: 2000-01-23T04:56:07.000+00:00
        url: url
        webhookUrl: webhookUrl
        webhookStatus: ACTIVE
        restricted: true
        name: name
        email: email
        status: INACTIVE
      properties:
        name:
          description: The name of the company for which you apply for access
          type: string
        country:
          description: The country of the headquarter or the country where you are
            mainly doing business in
          type: string
        description:
          description: Describe the services and/or products you offer to your customers
            and how your customers would use Nuki devices in their processes
          type: string
        type:
          description: The application type
          enum:
          - ONLY_SECRET
          - SHORT_RENTAL
          - HEALTHCARE
          - SMART_HOME
          - OTHER
          type: string
        webhookStatus:
          description: The status of the webhook posting automation
          enum:
          - ACTIVE
          - DEACTIVATED
          readOnly: true
          type: string
        url:
          description: A website where we can find more information on the company
            and its business model
          type: string
        email:
          description: An email address where we can contact you for checks on your
            application
          type: string
        webhookUrl:
          description: The URL where our webhooks should point to
          type: string
        webhookFeatures:
          description: "The features to trigger webhooks, for all types except 'ONLY_SECRET'"
          items:
            enum:
            - DEVICE_STATUS
            - DEVICE_MASTERDATA
            - DEVICE_CONFIG
            - DEVICE_LOGS
            - DEVICE_AUTHS
            - ACCOUNT_USER
            type: string
          type: array
          uniqueItems: true
        restricted:
          description: Whether the advanced API key is restricted
          type: boolean
        secret:
          description: "The client secret, visible if application is approved (status\
            \ >= 'TESTING')"
          type: string
        status:
          description: The application status
          enum:
          - INACTIVE
          - APPLIED
          - TESTING
          - ACTIVE
          type: string
        creationDate:
          description: The creation date
          format: date-time
          type: string
        updateDate:
          description: The update date
          format: date-time
          type: string
      required:
      - country
      - creationDate
      - description
      - email
      - name
      - restricted
      - secret
      - status
      - type
      - updateDate
      - url
      - webhookFeatures
      - webhookUrl
      type: object
    AdvancedApiKeyCreate:
      example:
        country: country
        webhookFeatures:
        - DEVICE_STATUS
        - DEVICE_STATUS
        webhookStatus: ACTIVE
        restricted: true
        name: name
        description: description
        type: ONLY_SECRET
        url: url
        email: email
        webhookUrl: webhookUrl
      properties:
        name:
          description: The name of the company for which you apply for access
          type: string
        country:
          description: The country of the headquarter or the country where you are
            mainly doing business in
          type: string
        description:
          description: Describe the services and/or products you offer to your customers
            and how your customers would use Nuki devices in their processes
          type: string
        type:
          description: The application type
          enum:
          - ONLY_SECRET
          - SHORT_RENTAL
          - HEALTHCARE
          - SMART_HOME
          - OTHER
          type: string
        webhookStatus:
          description: The status of the webhook posting automation
          enum:
          - ACTIVE
          - DEACTIVATED
          readOnly: true
          type: string
        url:
          description: A website where we can find more information on the company
            and its business model
          type: string
        email:
          description: An email address where we can contact you for checks on your
            application
          type: string
        webhookUrl:
          description: The URL where our webhooks should point to
          type: string
        webhookFeatures:
          description: "The features to trigger webhooks, for all types except 'ONLY_SECRET'"
          items:
            enum:
            - DEVICE_STATUS
            - DEVICE_MASTERDATA
            - DEVICE_CONFIG
            - DEVICE_LOGS
            - DEVICE_AUTHS
            - ACCOUNT_USER
            type: string
          type: array
          uniqueItems: true
        restricted:
          description: Whether the advanced API key is restricted
          type: boolean
      required:
      - country
      - description
      - email
      - name
      - restricted
      - type
      - url
      - webhookFeatures
      - webhookUrl
      type: object
    AdvancedApiKeyUpdate:
      example:
        webhookFeatures:
        - DEVICE_STATUS
        - DEVICE_STATUS
        webhookUrl: webhookUrl
      properties:
        webhookUrl:
          description: The URL where our webhooks should point to
          type: string
        webhookFeatures:
          description: "The features to trigger webhooks, for all types except 'ONLY_SECRET'"
          items:
            enum:
            - DEVICE_STATUS
            - DEVICE_MASTERDATA
            - DEVICE_CONFIG
            - DEVICE_LOGS
            - DEVICE_AUTHS
            - ACCOUNT_USER
            type: string
          type: array
          uniqueItems: true
      required:
      - webhookFeatures
      - webhookUrl
      type: object
    AdvancedConfirmationResponse:
      example:
        requestId: requestId
        error: error
      properties:
        requestId:
          description: A UUID to identify the upcoming asynchronously web hook response
          type: string
        error:
          description: "Contains error message and smartlock IDs, if auths can not\
            \ be created because they need subscription."
          type: string
      required:
      - requestId
      type: object
    ApiKey:
      example:
        accountId: 6
        apiKey: apiKey
        apiKeyId: 0
        description: description
        creationDate: 2000-01-23T04:56:07.000+00:00
        redirectUris:
        - redirectUris
        - redirectUris
      properties:
        apiKeyId:
          description: The id
          format: int32
          type: integer
        accountId:
          description: The account id
          format: int32
          type: integer
        description:
          description: The description
          type: string
        redirectUris:
          description: The redirect uris
          items:
            type: string
          type: array
        creationDate:
          description: The creation date
          format: date-time
          type: string
        apiKey:
          description: The api key
          type: string
      required:
      - accountId
      - apiKeyId
      - creationDate
      type: object
    ApiKey.Advanced:
      properties:
        name:
          type: string
        country:
          type: string
        description:
          type: string
        type:
          enum:
          - ONLY_SECRET
          - SHORT_RENTAL
          - HEALTHCARE
          - SMART_HOME
          - OTHER
          type: string
        url:
          type: string
        email:
          type: string
        webhookFeatures:
          items:
            enum:
            - DEVICE_STATUS
            - DEVICE_MASTERDATA
            - DEVICE_CONFIG
            - DEVICE_LOGS
            - DEVICE_AUTHS
            - ACCOUNT_USER
            type: string
          type: array
          uniqueItems: true
        webhookUrl:
          type: string
        webhookSentSuccessfully:
          format: int32
          type: integer
        webhookSentErroneous:
          format: int32
          type: integer
        lastSuccessfulPost:
          format: date-time
          type: string
        lastPostDuration:
          format: int64
          type: integer
        lastPostSuccesful:
          type: boolean
        status:
          enum:
          - INACTIVE
          - APPLIED
          - TESTING
          - ACTIVE
          type: string
        webhookStatus:
          enum:
          - ACTIVE
          - DEACTIVATED
          type: string
        creationDate:
          format: date-time
          type: string
        updateDate:
          format: date-time
          type: string
        restricted:
          type: boolean
      type: object
    ApiKeyCreate:
      example:
        description: description
        redirectUris:
        - redirectUris
        - redirectUris
      properties:
        description:
          description: The description
          type: string
        redirectUris:
          description: The list of redirect uris
          items:
            type: string
          type: array
      type: object
    ApiKeyService:
      properties:
        byActiveWebhook:
          $ref: '#/components/schemas/CompletableFutureListApiKey'
      type: object
    ApiKeyToken:
      example:
        accountId: 0
        description: description
        id: id
        scopes:
        - scopes
        - scopes
        accessToken: accessToken
        creationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: The id
          type: string
        accountId:
          description: The account id
          format: int32
          type: integer
        description:
          description: The description
          type: string
        accessToken:
          description: The access token
          type: string
        scopes:
          description: The list of scopes
          items:
            type: string
          type: array
        creationDate:
          description: The creation date
          format: date-time
          type: string
      required:
      - accountId
      - creationDate
      - id
      - scopes
      type: object
    ApiKeyTokenCreate:
      example:
        description: description
        scopes:
        - scopes
        - scopes
      properties:
        description:
          description: The description
          type: string
        scopes:
          description: The list of scopes
          items:
            type: string
          type: array
      type: object
    ApiKeyTokenUpdate:
      example:
        description: description
        scopes:
        - scopes
        - scopes
      properties:
        description:
          description: The description
          type: string
        scopes:
          description: The list of scopes
          items:
            type: string
          type: array
      type: object
    ApiKeyUpdate:
      example:
        description: description
        redirectUris:
        - redirectUris
        - redirectUris
      properties:
        description:
          description: The description
          type: string
        redirectUris:
          description: The list of redirect uris
          items:
            type: string
          type: array
      type: object
    Application:
      example:
        owner: owner
        converterService:
          stopped: true
          context: null
          started: true
          enabled: true
        stopped: true
        encoderService:
          acceptedMediaTypes:
          - concrete: true
            parent: null
            name: name
            description: description
            subType: subType
            mainType: mainType
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - concrete: true
            parent: null
            name: name
            description: description
            subType: subType
            mainType: mainType
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          stopped: true
          minimumSize: 5
          context: null
          started: true
          ignoredMediaTypes:
          - concrete: true
            parent: null
            name: name
            description: description
            subType: subType
            mainType: mainType
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - concrete: true
            parent: null
            name: name
            description: description
            subType: subType
            mainType: mainType
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          enabled: true
        author: author
        roles:
        - application: null
          name: name
          description: description
          childRoles:
          - null
          - null
        - application: null
          name: name
          description: description
          childRoles:
          - null
          - null
        logger:
          filter: "{}"
          parent: null
          resourceBundle:
            baseBundleName: baseBundleName
            keys: "{}"
            locale:
              unicodeLocaleKeys:
              - unicodeLocaleKeys
              - unicodeLocaleKeys
              country: country
              displayName: displayName
              iso3Language: iso3Language
              language: language
              displayVariant: displayVariant
              iso3Country: iso3Country
              displayLanguage: displayLanguage
              script: script
              unicodeLocaleAttributes:
              - unicodeLocaleAttributes
              - unicodeLocaleAttributes
              displayCountry: displayCountry
              variant: variant
              extensionKeys:
              - extensionKeys
              - extensionKeys
              displayScript: displayScript
          level:
            localizedName: localizedName
            resourceBundleName: resourceBundleName
            name: name
          resourceBundleName: resourceBundleName
          useParentHandlers: true
          handlers:
          - filter: "{}"
            formatter: "{}"
            errorManager: "{}"
            level:
              localizedName: localizedName
              resourceBundleName: resourceBundleName
              name: name
            encoding: encoding
          - filter: "{}"
            formatter: "{}"
            errorManager: "{}"
            level:
              localizedName: localizedName
              resourceBundleName: resourceBundleName
              name: name
            encoding: encoding
          name: name
        description: description
        started: true
        connectorService:
          stopped: true
          clientProtocols:
          - defaultPort: 6
            name: name
            schemeName: schemeName
            description: description
            technicalName: technicalName
            version: version
            confidential: true
          - defaultPort: 6
            name: name
            schemeName: schemeName
            description: description
            technicalName: technicalName
            version: version
            confidential: true
          context: null
          started: true
          serverProtocols:
          - defaultPort: 6
            name: name
            schemeName: schemeName
            description: description
            technicalName: technicalName
            version: version
            confidential: true
          - defaultPort: 6
            name: name
            schemeName: schemeName
            description: description
            technicalName: technicalName
            version: version
            confidential: true
          enabled: true
        services:
        - null
        - null
        outboundRoot: null
        decoderService:
          stopped: true
          context: null
          started: true
          enabled: true
        metadataService:
          allLanguageExtensionNames:
          - allLanguageExtensionNames
          - allLanguageExtensionNames
          stopped: true
          defaultEncoding:
            parent:
              parent: null
              name: name
              description: description
            name: name
            description: description
          allExtensionNames:
          - allExtensionNames
          - allExtensionNames
          started: true
          allEncodingExtensionNames:
          - allEncodingExtensionNames
          - allEncodingExtensionNames
          enabled: true
          allCharacterSetExtensionNames:
          - allCharacterSetExtensionNames
          - allCharacterSetExtensionNames
          defaultLanguage:
            parent: null
            name: name
            description: description
            subTags:
            - subTags
            - subTags
            primaryTag: primaryTag
          defaultMediaType:
            concrete: true
            parent: null
            name: name
            description: description
            subType: subType
            mainType: mainType
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          defaultCharacterSet:
            parent:
              parent: null
              name: name
              description: description
            name: name
            description: description
          context: null
          allMediaTypeExtensionNames:
          - allMediaTypeExtensionNames
          - allMediaTypeExtensionNames
        tunnelService:
          extensionsTunnel: true
          preferencesTunnel: true
          userAgentTunnel: true
          stopped: true
          languageParameter: languageParameter
          queryTunnel: true
          methodParameter: methodParameter
          started: true
          enabled: true
          characterSetParameter: characterSetParameter
          methodHeader: methodHeader
          encodingParameter: encodingParameter
          methodTunnel: true
          context: null
          headersTunnel: true
          mediaTypeParameter: mediaTypeParameter
        application: null
        rangeService:
          stopped: true
          context: null
          started: true
          enabled: true
        statusService:
          converterService:
            stopped: true
            context: null
            started: true
            enabled: true
          stopped: true
          metadataService:
            allLanguageExtensionNames:
            - allLanguageExtensionNames
            - allLanguageExtensionNames
            stopped: true
            defaultEncoding:
              parent:
                parent: null
                name: name
                description: description
              name: name
              description: description
            allExtensionNames:
            - allExtensionNames
            - allExtensionNames
            started: true
            allEncodingExtensionNames:
            - allEncodingExtensionNames
            - allEncodingExtensionNames
            enabled: true
            allCharacterSetExtensionNames:
            - allCharacterSetExtensionNames
            - allCharacterSetExtensionNames
            defaultLanguage:
              parent: null
              name: name
              description: description
              subTags:
              - subTags
              - subTags
              primaryTag: primaryTag
            defaultMediaType:
              concrete: true
              parent: null
              name: name
              description: description
              subType: subType
              mainType: mainType
              parameters:
              - name: name
                value: value
              - name: name
                value: value
            defaultCharacterSet:
              parent:
                parent: null
                name: name
                description: description
              name: name
              description: description
            context: null
            allMediaTypeExtensionNames:
            - allMediaTypeExtensionNames
            - allMediaTypeExtensionNames
          contactEmail: contactEmail
          homeRef:
            userInfo: userInfo
            schemeProtocol:
              defaultPort: 6
              name: name
              schemeName: schemeName
              description: description
              technicalName: technicalName
              version: version
              confidential: true
            queryAsForm:
            - name: name
              value: value
            - name: name
              value: value
            matrixAsForm:
            - name: name
              value: value
            - name: name
              value: value
            hostIdentifier: hostIdentifier
            scheme: scheme
            extensionsAsArray:
            - extensionsAsArray
            - extensionsAsArray
            relativeRef: null
            matrix: matrix
            lastSegment: lastSegment
            segments:
            - segments
            - segments
            path: path
            hierarchical: true
            hostDomain: hostDomain
            relativePart: relativePart
            hostPort: 0
            identifier: identifier
            targetRef: null
            opaque: true
            remainingPart: remainingPart
            query: query
            schemeSpecificPart: schemeSpecificPart
            hierarchicalPart: hierarchicalPart
            baseRef: null
            parentRef: null
            fragment: fragment
            extensions: extensions
            absolute: true
            authority: authority
            relative: true
          context: null
          started: true
          connegService:
            stopped: true
            context: null
            started: true
            strict: true
            enabled: true
          overwriting: true
          enabled: true
        context: null
        name: name
        debugging: true
        inboundRoot: null
        taskService:
          shutdownAllowed: true
          stopped: true
          context: null
          corePoolSize: 1
          started: true
          enabled: true
          terminated: true
          shutdown: true
          daemon: true
        connegService:
          stopped: true
          context: null
          started: true
          strict: true
          enabled: true
      properties:
        author:
          type: string
        context:
          $ref: '#/components/schemas/Context'
        description:
          type: string
        name:
          type: string
        owner:
          type: string
        started:
          type: boolean
        debugging:
          type: boolean
        inboundRoot:
          $ref: '#/components/schemas/Restlet'
        outboundRoot:
          $ref: '#/components/schemas/Restlet'
        roles:
          items:
            $ref: '#/components/schemas/Role'
          type: array
        services:
          items:
            $ref: '#/components/schemas/Service'
          type: array
        statusService:
          $ref: '#/components/schemas/StatusService'
        connegService:
          $ref: '#/components/schemas/ConnegService'
        metadataService:
          $ref: '#/components/schemas/MetadataService'
        converterService:
          $ref: '#/components/schemas/ConverterService'
        rangeService:
          $ref: '#/components/schemas/RangeService'
        taskService:
          $ref: '#/components/schemas/TaskService'
        tunnelService:
          $ref: '#/components/schemas/TunnelService'
        connectorService:
          $ref: '#/components/schemas/ConnectorService'
        decoderService:
          $ref: '#/components/schemas/DecoderService'
        encoderService:
          $ref: '#/components/schemas/EncoderService'
        logger:
          $ref: '#/components/schemas/Logger'
        stopped:
          type: boolean
        application:
          $ref: '#/components/schemas/Application'
      type: object
    AuthenticationInfo:
      properties:
        nextServerNonce:
          type: string
        nonceCount:
          format: int32
          type: integer
        clientNonce:
          type: string
        quality:
          type: string
        responseDigest:
          type: string
      type: object
    BulkWebConfigRequest:
      example:
        webConfigRequests:
        - smartlockId: 0
          webConfig:
            dismissedLiftUpHandleWarning:
            - 6
            - 6
            batteryWarningPerMailEnabled: true
        - smartlockId: 0
          webConfig:
            dismissedLiftUpHandleWarning:
            - 6
            - 6
            batteryWarningPerMailEnabled: true
      properties:
        webConfigRequests:
          items:
            $ref: '#/components/schemas/WebConfigRequest'
          type: array
      type: object
    CacheDirective:
      properties:
        digit:
          type: boolean
        name:
          type: string
        value:
          type: string
      type: object
    Certificate:
      properties:
        type:
          type: string
        encoded:
          items:
            format: byte
            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            type: string
          type: array
        publicKey:
          $ref: '#/components/schemas/PublicKey'
      type: object
    ChallengeRequest:
      properties:
        rawValue:
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        scheme:
          $ref: '#/components/schemas/ChallengeScheme'
        serverNonce:
          type: string
        realm:
          type: string
        opaque:
          type: string
        digestAlgorithm:
          type: string
        qualityOptions:
          items:
            type: string
          type: array
        domainRefs:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        stale:
          type: boolean
      type: object
    ChallengeResponse:
      properties:
        rawValue:
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        scheme:
          $ref: '#/components/schemas/ChallengeScheme'
        serverNonce:
          type: string
        realm:
          type: string
        opaque:
          type: string
        digestAlgorithm:
          type: string
        clientNonce:
          type: string
        digestRef:
          $ref: '#/components/schemas/Reference'
        identifier:
          type: string
        quality:
          type: string
        secret:
          items:
            type: string
          type: array
        secretAlgorithm:
          type: string
        serverNounceCount:
          format: int32
          type: integer
        timeIssued:
          format: int64
          type: integer
        principal:
          $ref: '#/components/schemas/Principal'
        serverNounceCountAsHex:
          type: string
      type: object
    ChallengeScheme:
      properties:
        description:
          type: string
        name:
          type: string
        technicalName:
          type: string
      type: object
    CharacterSet:
      example:
        parent:
          parent: null
          name: name
          description: description
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
        parent:
          $ref: '#/components/schemas/Metadata'
      type: object
    ClientInfo:
      properties:
        acceptedCharacterSets:
          items:
            $ref: '#/components/schemas/PreferenceCharacterSet'
          type: array
        acceptedEncodings:
          items:
            $ref: '#/components/schemas/PreferenceEncoding'
          type: array
        acceptedLanguages:
          items:
            $ref: '#/components/schemas/PreferenceLanguage'
          type: array
        acceptedMediaTypes:
          items:
            $ref: '#/components/schemas/PreferenceMediaType'
          type: array
        acceptedPatches:
          items:
            $ref: '#/components/schemas/PreferenceMediaType'
          type: array
        address:
          type: string
        agent:
          type: string
        agentAttributes:
          additionalProperties:
            type: string
          type: object
        agentProducts:
          items:
            $ref: '#/components/schemas/Product'
          type: array
        authenticated:
          type: boolean
        certificates:
          items:
            $ref: '#/components/schemas/Certificate'
          type: array
        cipherSuite:
          type: string
        expectations:
          items:
            $ref: '#/components/schemas/Expectation'
          type: array
        forwardedAddresses:
          items:
            type: string
          type: array
        from:
          type: string
        port:
          format: int32
          type: integer
        principals:
          items:
            $ref: '#/components/schemas/Principal'
          type: array
        roles:
          items:
            $ref: '#/components/schemas/Role'
          type: array
        user:
          $ref: '#/components/schemas/User'
        upstreamAddress:
          type: string
        agentName:
          type: string
        agentVersion:
          type: string
        mainAgentProduct:
          $ref: '#/components/schemas/Product'
      type: object
    Company:
      example:
        name: name
        email: email
      properties:
        name:
          type: string
        email:
          type: string
      type: object
    CompletableFuture:
      properties:
        completedExceptionally:
          type: boolean
        numberOfDependents:
          format: int32
          type: integer
        done:
          type: boolean
        cancelled:
          type: boolean
      type: object
    CompletableFutureListApiKey:
      properties:
        completedExceptionally:
          type: boolean
        numberOfDependents:
          format: int32
          type: integer
        done:
          type: boolean
        cancelled:
          type: boolean
      type: object
    Conditions:
      properties:
        match:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        modifiedSince:
          format: date-time
          type: string
        noneMatch:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        rangeDate:
          format: date-time
          type: string
        rangeTag:
          $ref: '#/components/schemas/Tag'
        unmodifiedSince:
          format: date-time
          type: string
      type: object
    ConnectorService:
      example:
        stopped: true
        clientProtocols:
        - defaultPort: 6
          name: name
          schemeName: schemeName
          description: description
          technicalName: technicalName
          version: version
          confidential: true
        - defaultPort: 6
          name: name
          schemeName: schemeName
          description: description
          technicalName: technicalName
          version: version
          confidential: true
        context: null
        started: true
        serverProtocols:
        - defaultPort: 6
          name: name
          schemeName: schemeName
          description: description
          technicalName: technicalName
          version: version
          confidential: true
        - defaultPort: 6
          name: name
          schemeName: schemeName
          description: description
          technicalName: technicalName
          version: version
          confidential: true
        enabled: true
      properties:
        context:
          $ref: '#/components/schemas/Context'
        enabled:
          type: boolean
        started:
          type: boolean
        clientProtocols:
          items:
            $ref: '#/components/schemas/Protocol'
          type: array
        serverProtocols:
          items:
            $ref: '#/components/schemas/Protocol'
          type: array
        stopped:
          type: boolean
      type: object
    ConnegService:
      example:
        stopped: true
        context: null
        started: true
        strict: true
        enabled: true
      properties:
        context:
          $ref: '#/components/schemas/Context'
        enabled:
          type: boolean
        started:
          type: boolean
        strict:
          type: boolean
        stopped:
          type: boolean
      type: object
    Context:
      example:
        serverDispatcher:
          owner: owner
          stopped: true
          application:
            owner: owner
            converterService:
              stopped: true
              context: null
              started: true
              enabled: true
            stopped: true
            encoderService:
              acceptedMediaTypes:
              - concrete: true
                parent: null
                name: name
                description: description
                subType: subType
                mainType: mainType
                parameters:
                - name: name
                  value: value
                - name: name
                  value: value
              - concrete: true
                parent: null
                name: name
                description: description
                subType: subType
                mainType: mainType
                parameters:
                - name: name
                  value: value
                - name: name
                  value: value
              stopped: true
              minimumSize: 5
              context: null
              started: true
              ignoredMediaTypes:
              - concrete: true
                parent: null
                name: name
                description: description
                subType: subType
                mainType: mainType
                parameters:
                - name: name
                  value: value
                - name: name
                  value: value
              - concrete: true
                parent: null
                name: name
                description: description
                subType: subType
                mainType: mainType
                parameters:
                - name: name
                  value: value
                - name: name
                  value: value
              enabled: true
            author: author
            roles:
            - application: null
              name: name
              description: description
              childRoles:
              - null
              - null
            - application: null
              name: name
              description: description
              childRoles:
              - null
              - null
            logger:
              filter: "{}"
              parent: null
              resourceBundle:
                baseBundleName: baseBundleName
                keys: "{}"
                locale:
                  unicodeLocaleKeys:
                  - unicodeLocaleKeys
                  - unicodeLocaleKeys
                  country: country
                  displayName: displayName
                  iso3Language: iso3Language
                  language: language
                  displayVariant: displayVariant
                  iso3Country: iso3Country
                  displayLanguage: displayLanguage
                  script: script
                  unicodeLocaleAttributes:
                  - unicodeLocaleAttributes
                  - unicodeLocaleAttributes
                  displayCountry: displayCountry
                  variant: variant
                  extensionKeys:
                  - extensionKeys
                  - extensionKeys
                  displayScript: displayScript
              level:
                localizedName: localizedName
                resourceBundleName: resourceBundleName
                name: name
              resourceBundleName: resourceBundleName
              useParentHandlers: true
              handlers:
              - filter: "{}"
                formatter: "{}"
                errorManager: "{}"
                level:
                  localizedName: localizedName
                  resourceBundleName: resourceBundleName
                  name: name
                encoding: encoding
              - filter: "{}"
                formatter: "{}"
                errorManager: "{}"
                level:
                  localizedName: localizedName
                  resourceBundleName: resourceBundleName
                  name: name
                encoding: encoding
              name: name
            description: description
            started: true
            connectorService:
              stopped: true
              clientProtocols:
              - defaultPort: 6
                name: name
                schemeName: schemeName
                description: description
                technicalName: technicalName
                version: version
                confidential: true
              - defaultPort: 6
                name: name
                schemeName: schemeName
                description: description
                technicalName: technicalName
                version: version
                confidential: true
              context: null
              started: true
              serverProtocols:
              - defaultPort: 6
                name: name
                schemeName: schemeName
                description: description
                technicalName: technicalName
                version: version
                confidential: true
              - defaultPort: 6
                name: name
                schemeName: schemeName
                description: description
                technicalName: technicalName
                version: version
                confidential: true
              enabled: true
            services:
            - null
            - null
            outboundRoot: null
            decoderService:
              stopped: true
              context: null
              started: true
              enabled: true
            metadataService:
              allLanguageExtensionNames:
              - allLanguageExtensionNames
              - allLanguageExtensionNames
              stopped: true
              defaultEncoding:
                parent:
                  parent: null
                  name: name
                  description: description
                name: name
                description: description
              allExtensionNames:
              - allExtensionNames
              - allExtensionNames
              started: true
              allEncodingExtensionNames:
              - allEncodingExtensionNames
              - allEncodingExtensionNames
              enabled: true
              allCharacterSetExtensionNames:
              - allCharacterSetExtensionNames
              - allCharacterSetExtensionNames
              defaultLanguage:
                parent: null
                name: name
                description: description
                subTags:
                - subTags
                - subTags
                primaryTag: primaryTag
              defaultMediaType:
                concrete: true
                parent: null
                name: name
                description: description
                subType: subType
                mainType: mainType
                parameters:
                - name: name
                  value: value
                - name: name
                  value: value
              defaultCharacterSet:
                parent:
                  parent: null
                  name: name
                  description: description
                name: name
                description: description
              context: null
              allMediaTypeExtensionNames:
              - allMediaTypeExtensionNames
              - allMediaTypeExtensionNames
            tunnelService:
              extensionsTunnel: true
              preferencesTunnel: true
              userAgentTunnel: true
              stopped: true
              languageParameter: languageParameter
              queryTunnel: true
              methodParameter: methodParameter
              started: true
              enabled: true
              characterSetParameter: characterSetParameter
              methodHeader: methodHeader
              encodingParameter: encodingParameter
              methodTunnel: true
              context: null
              headersTunnel: true
              mediaTypeParameter: mediaTypeParameter
            application: null
            rangeService:
              stopped: true
              context: null
              started: true
              enabled: true
            statusService:
              converterService:
                stopped: true
                context: null
                started: true
                enabled: true
              stopped: true
              metadataService:
                allLanguageExtensionNames:
                - allLanguageExtensionNames
                - allLanguageExtensionNames
                stopped: true
                defaultEncoding:
                  parent:
                    parent: null
                    name: name
                    description: description
                  name: name
                  description: description
                allExtensionNames:
                - allExtensionNames
                - allExtensionNames
                started: true
                allEncodingExtensionNames:
                - allEncodingExtensionNames
                - allEncodingExtensionNames
                enabled: true
                allCharacterSetExtensionNames:
                - allCharacterSetExtensionNames
                - allCharacterSetExtensionNames
                defaultLanguage:
                  parent: null
                  name: name
                  description: description
                  subTags:
                  - subTags
                  - subTags
                  primaryTag: primaryTag
                defaultMediaType:
                  concrete: true
                  parent: null
                  name: name
                  description: description
                  subType: subType
                  mainType: mainType
                  parameters:
                  - name: name
                    value: value
                  - name: name
                    value: value
                defaultCharacterSet:
                  parent:
                    parent: null
                    name: name
                    description: description
                  name: name
                  description: description
                context: null
                allMediaTypeExtensionNames:
                - allMediaTypeExtensionNames
                - allMediaTypeExtensionNames
              contactEmail: contactEmail
              homeRef:
                userInfo: userInfo
                schemeProtocol:
                  defaultPort: 6
                  name: name
                  schemeName: schemeName
                  description: description
                  technicalName: technicalName
                  version: version
                  confidential: true
                queryAsForm:
                - name: name
                  value: value
                - name: name
                  value: value
                matrixAsForm:
                - name: name
                  value: value
                - name: name
                  value: value
                hostIdentifier: hostIdentifier
                scheme: scheme
                extensionsAsArray:
                - extensionsAsArray
                - extensionsAsArray
                relativeRef: null
                matrix: matrix
                lastSegment: lastSegment
                segments:
                - segments
                - segments
                path: path
                hierarchical: true
                hostDomain: hostDomain
                relativePart: relativePart
                hostPort: 0
                identifier: identifier
                targetRef: null
                opaque: true
                remainingPart: remainingPart
                query: query
                schemeSpecificPart: schemeSpecificPart
                hierarchicalPart: hierarchicalPart
                baseRef: null
                parentRef: null
                fragment: fragment
                extensions: extensions
                absolute: true
                authority: authority
                relative: true
              context: null
              started: true
              connegService:
                stopped: true
                context: null
                started: true
                strict: true
                enabled: true
              overwriting: true
              enabled: true
            context: null
            name: name
            debugging: true
            inboundRoot: null
            taskService:
              shutdownAllowed: true
              stopped: true
              context: null
              corePoolSize: 1
              started: true
              enabled: true
              terminated: true
              shutdown: true
              daemon: true
            connegService:
              stopped: true
              context: null
              started: true
              strict: true
              enabled: true
          author: author
          logger:
            filter: "{}"
            parent: null
            resourceBundle:
              baseBundleName: baseBundleName
              keys: "{}"
              locale:
                unicodeLocaleKeys:
                - unicodeLocaleKeys
                - unicodeLocaleKeys
                country: country
                displayName: displayName
                iso3Language: iso3Language
                language: language
                displayVariant: displayVariant
                iso3Country: iso3Country
                displayLanguage: displayLanguage
                script: script
                unicodeLocaleAttributes:
                - unicodeLocaleAttributes
                - unicodeLocaleAttributes
                displayCountry: displayCountry
                variant: variant
                extensionKeys:
                - extensionKeys
                - extensionKeys
                displayScript: displayScript
            level:
              localizedName: localizedName
              resourceBundleName: resourceBundleName
              name: name
            resourceBundleName: resourceBundleName
            useParentHandlers: true
            handlers:
            - filter: "{}"
              formatter: "{}"
              errorManager: "{}"
              level:
                localizedName: localizedName
                resourceBundleName: resourceBundleName
                name: name
              encoding: encoding
            - filter: "{}"
              formatter: "{}"
              errorManager: "{}"
              level:
                localizedName: localizedName
                resourceBundleName: resourceBundleName
                name: name
              encoding: encoding
            name: name
          context: null
          name: name
          description: description
          started: true
        executorService:
          terminated: true
          shutdown: true
        clientDispatcher:
          owner: owner
          stopped: true
          application:
            owner: owner
            converterService:
              stopped: true
              context: null
              started: true
              enabled: true
            stopped: true
            encoderService:
              acceptedMediaTypes:
              - concrete: true
                parent: null
                name: name
                description: description
                subType: subType
                mainType: mainType
                parameters:
                - name: name
                  value: value
                - name: name
                  value: value
              - concrete: true
                parent: null
                name: name
                description: description
                subType: subType
                mainType: mainType
                parameters:
                - name: name
                  value: value
                - name: name
                  value: value
              stopped: true
              minimumSize: 5
              context: null
              started: true
              ignoredMediaTypes:
              - concrete: true
                parent: null
                name: name
                description: description
                subType: subType
                mainType: mainType
                parameters:
                - name: name
                  value: value
                - name: name
                  value: value
              - concrete: true
                parent: null
                name: name
                description: description
                subType: subType
                mainType: mainType
                parameters:
                - name: name
                  value: value
                - name: name
                  value: value
              enabled: true
            author: author
            roles:
            - application: null
              name: name
              description: description
              childRoles:
              - null
              - null
            - application: null
              name: name
              description: description
              childRoles:
              - null
              - null
            logger:
              filter: "{}"
              parent: null
              resourceBundle:
                baseBundleName: baseBundleName
                keys: "{}"
                locale:
                  unicodeLocaleKeys:
                  - unicodeLocaleKeys
                  - unicodeLocaleKeys
                  country: country
                  displayName: displayName
                  iso3Language: iso3Language
                  language: language
                  displayVariant: displayVariant
                  iso3Country: iso3Country
                  displayLanguage: displayLanguage
                  script: script
                  unicodeLocaleAttributes:
                  - unicodeLocaleAttributes
                  - unicodeLocaleAttributes
                  displayCountry: displayCountry
                  variant: variant
                  extensionKeys:
                  - extensionKeys
                  - extensionKeys
                  displayScript: displayScript
              level:
                localizedName: localizedName
                resourceBundleName: resourceBundleName
                name: name
              resourceBundleName: resourceBundleName
              useParentHandlers: true
              handlers:
              - filter: "{}"
                formatter: "{}"
                errorManager: "{}"
                level:
                  localizedName: localizedName
                  resourceBundleName: resourceBundleName
                  name: name
                encoding: encoding
              - filter: "{}"
                formatter: "{}"
                errorManager: "{}"
                level:
                  localizedName: localizedName
                  resourceBundleName: resourceBundleName
                  name: name
                encoding: encoding
              name: name
            description: description
            started: true
            connectorService:
              stopped: true
              clientProtocols:
              - defaultPort: 6
                name: name
                schemeName: schemeName
                description: description
                technicalName: technicalName
                version: version
                confidential: true
              - defaultPort: 6
                name: name
                schemeName: schemeName
                description: description
                technicalName: technicalName
                version: version
                confidential: true
              context: null
              started: true
              serverProtocols:
              - defaultPort: 6
                name: name
                schemeName: schemeName
                description: description
                technicalName: technicalName
                version: version
                confidential: true
              - defaultPort: 6
                name: name
                schemeName: schemeName
                description: description
                technicalName: technicalName
                version: version
                confidential: true
              enabled: true
            services:
            - null
            - null
            outboundRoot: null
            decoderService:
              stopped: true
              context: null
              started: true
              enabled: true
            metadataService:
              allLanguageExtensionNames:
              - allLanguageExtensionNames
              - allLanguageExtensionNames
              stopped: true
              defaultEncoding:
                parent:
                  parent: null
                  name: name
                  description: description
                name: name
                description: description
              allExtensionNames:
              - allExtensionNames
              - allExtensionNames
              started: true
              allEncodingExtensionNames:
              - allEncodingExtensionNames
              - allEncodingExtensionNames
              enabled: true
              allCharacterSetExtensionNames:
              - allCharacterSetExtensionNames
              - allCharacterSetExtensionNames
              defaultLanguage:
                parent: null
                name: name
                description: description
                subTags:
                - subTags
                - subTags
                primaryTag: primaryTag
              defaultMediaType:
                concrete: true
                parent: null
                name: name
                description: description
                subType: subType
                mainType: mainType
                parameters:
                - name: name
                  value: value
                - name: name
                  value: value
              defaultCharacterSet:
                parent:
                  parent: null
                  name: name
                  description: description
                name: name
                description: description
              context: null
              allMediaTypeExtensionNames:
              - allMediaTypeExtensionNames
              - allMediaTypeExtensionNames
            tunnelService:
              extensionsTunnel: true
              preferencesTunnel: true
              userAgentTunnel: true
              stopped: true
              languageParameter: languageParameter
              queryTunnel: true
              methodParameter: methodParameter
              started: true
              enabled: true
              characterSetParameter: characterSetParameter
              methodHeader: methodHeader
              encodingParameter: encodingParameter
              methodTunnel: true
              context: null
              headersTunnel: true
              mediaTypeParameter: mediaTypeParameter
            application: null
            rangeService:
              stopped: true
              context: null
              started: true
              enabled: true
            statusService:
              converterService:
                stopped: true
                context: null
                started: true
                enabled: true
              stopped: true
              metadataService:
                allLanguageExtensionNames:
                - allLanguageExtensionNames
                - allLanguageExtensionNames
                stopped: true
                defaultEncoding:
                  parent:
                    parent: null
                    name: name
                    description: description
                  name: name
                  description: description
                allExtensionNames:
                - allExtensionNames
                - allExtensionNames
                started: true
                allEncodingExtensionNames:
                - allEncodingExtensionNames
                - allEncodingExtensionNames
                enabled: true
                allCharacterSetExtensionNames:
                - allCharacterSetExtensionNames
                - allCharacterSetExtensionNames
                defaultLanguage:
                  parent: null
                  name: name
                  description: description
                  subTags:
                  - subTags
                  - subTags
                  primaryTag: primaryTag
                defaultMediaType:
                  concrete: true
                  parent: null
                  name: name
                  description: description
                  subType: subType
                  mainType: mainType
                  parameters:
                  - name: name
                    value: value
                  - name: name
                    value: value
                defaultCharacterSet:
                  parent:
                    parent: null
                    name: name
                    description: description
                  name: name
                  description: description
                context: null
                allMediaTypeExtensionNames:
                - allMediaTypeExtensionNames
                - allMediaTypeExtensionNames
              contactEmail: contactEmail
              homeRef:
                userInfo: userInfo
                schemeProtocol:
                  defaultPort: 6
                  name: name
                  schemeName: schemeName
                  description: description
                  technicalName: technicalName
                  version: version
                  confidential: true
                queryAsForm:
                - name: name
                  value: value
                - name: name
                  value: value
                matrixAsForm:
                - name: name
                  value: value
                - name: name
                  value: value
                hostIdentifier: hostIdentifier
                scheme: scheme
                extensionsAsArray:
                - extensionsAsArray
                - extensionsAsArray
                relativeRef: null
                matrix: matrix
                lastSegment: lastSegment
                segments:
                - segments
                - segments
                path: path
                hierarchical: true
                hostDomain: hostDomain
                relativePart: relativePart
                hostPort: 0
                identifier: identifier
                targetRef: null
                opaque: true
                remainingPart: remainingPart
                query: query
                schemeSpecificPart: schemeSpecificPart
                hierarchicalPart: hierarchicalPart
                baseRef: null
                parentRef: null
                fragment: fragment
                extensions: extensions
                absolute: true
                authority: authority
                relative: true
              context: null
              started: true
              connegService:
                stopped: true
                context: null
                started: true
                strict: true
                enabled: true
              overwriting: true
              enabled: true
            context: null
            name: name
            debugging: true
            inboundRoot: null
            taskService:
              shutdownAllowed: true
              stopped: true
              context: null
              corePoolSize: 1
              started: true
              enabled: true
              terminated: true
              shutdown: true
              daemon: true
            connegService:
              stopped: true
              context: null
              started: true
              strict: true
              enabled: true
          author: author
          logger:
            filter: "{}"
            parent: null
            resourceBundle:
              baseBundleName: baseBundleName
              keys: "{}"
              locale:
                unicodeLocaleKeys:
                - unicodeLocaleKeys
                - unicodeLocaleKeys
                country: country
                displayName: displayName
                iso3Language: iso3Language
                language: language
                displayVariant: displayVariant
                iso3Country: iso3Country
                displayLanguage: displayLanguage
                script: script
                unicodeLocaleAttributes:
                - unicodeLocaleAttributes
                - unicodeLocaleAttributes
                displayCountry: displayCountry
                variant: variant
                extensionKeys:
                - extensionKeys
                - extensionKeys
                displayScript: displayScript
            level:
              localizedName: localizedName
              resourceBundleName: resourceBundleName
              name: name
            resourceBundleName: resourceBundleName
            useParentHandlers: true
            handlers:
            - filter: "{}"
              formatter: "{}"
              errorManager: "{}"
              level:
                localizedName: localizedName
                resourceBundleName: resourceBundleName
                name: name
              encoding: encoding
            - filter: "{}"
              formatter: "{}"
              errorManager: "{}"
              level:
                localizedName: localizedName
                resourceBundleName: resourceBundleName
                name: name
              encoding: encoding
            name: name
          context: null
          name: name
          description: description
          started: true
        logger:
          filter: "{}"
          parent: null
          resourceBundle:
            baseBundleName: baseBundleName
            keys: "{}"
            locale:
              unicodeLocaleKeys:
              - unicodeLocaleKeys
              - unicodeLocaleKeys
              country: country
              displayName: displayName
              iso3Language: iso3Language
              language: language
              displayVariant: displayVariant
              iso3Country: iso3Country
              displayLanguage: displayLanguage
              script: script
              unicodeLocaleAttributes:
              - unicodeLocaleAttributes
              - unicodeLocaleAttributes
              displayCountry: displayCountry
              variant: variant
              extensionKeys:
              - extensionKeys
              - extensionKeys
              displayScript: displayScript
          level:
            localizedName: localizedName
            resourceBundleName: resourceBundleName
            name: name
          resourceBundleName: resourceBundleName
          useParentHandlers: true
          handlers:
          - filter: "{}"
            formatter: "{}"
            errorManager: "{}"
            level:
              localizedName: localizedName
              resourceBundleName: resourceBundleName
              name: name
            encoding: encoding
          - filter: "{}"
            formatter: "{}"
            errorManager: "{}"
            level:
              localizedName: localizedName
              resourceBundleName: resourceBundleName
              name: name
            encoding: encoding
          name: name
        attributes:
          key: "{}"
        defaultEnroler: "{}"
        parameters:
        - name: name
          value: value
        - name: name
          value: value
        defaultVerifier: "{}"
      properties:
        clientDispatcher:
          $ref: '#/components/schemas/Restlet'
        serverDispatcher:
          $ref: '#/components/schemas/Restlet'
        attributes:
          additionalProperties:
            properties: {}
            type: object
          type: object
        logger:
          $ref: '#/components/schemas/Logger'
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        defaultEnroler:
          type: object
        defaultVerifier:
          type: object
        executorService:
          $ref: '#/components/schemas/ScheduledExecutorService'
      type: object
    ConverterService:
      example:
        stopped: true
        context: null
        started: true
        enabled: true
      properties:
        context:
          $ref: '#/components/schemas/Context'
        enabled:
          type: boolean
        started:
          type: boolean
        stopped:
          type: boolean
      type: object
    Cookie:
      properties:
        domain:
          type: string
        name:
          type: string
        path:
          type: string
        value:
          type: string
        version:
          format: int32
          type: integer
      type: object
    CookieSetting:
      properties:
        domain:
          type: string
        name:
          type: string
        path:
          type: string
        value:
          type: string
        version:
          format: int32
          type: integer
        accessRestricted:
          type: boolean
        comment:
          type: string
        maxAge:
          format: int32
          type: integer
        secure:
          type: boolean
        description:
          type: string
      type: object
    DecentralWebhook:
      example:
        webhookFeatures:
        - DEVICE_STATUS
        - DEVICE_STATUS
        id: 0
        secret: secret
        webhookUrl: webhookUrl
      properties:
        id:
          description: The identifier
          format: int32
          readOnly: true
          type: integer
        secret:
          description: The secret to sign the webhook's payload
          readOnly: true
          type: string
        webhookUrl:
          description: The URL where our webhooks (POST requests) should point to
            (needs to be https)
          type: string
        webhookFeatures:
          description: "The features to trigger webhooks, set values: DEVICE_STATUS,\
            \ DEVICE_MASTERDATA, DEVICE_CONFIG, DEVICE_LOGS, DEVICE_AUTHS, ACCOUNT_USER"
          items:
            enum:
            - DEVICE_STATUS
            - DEVICE_MASTERDATA
            - DEVICE_CONFIG
            - DEVICE_LOGS
            - DEVICE_AUTHS
            - ACCOUNT_USER
            type: string
          type: array
          uniqueItems: true
      required:
      - webhookFeatures
      - webhookUrl
      type: object
    DecoderService:
      example:
        stopped: true
        context: null
        started: true
        enabled: true
      properties:
        context:
          $ref: '#/components/schemas/Context'
        enabled:
          type: boolean
        started:
          type: boolean
        stopped:
          type: boolean
      type: object
    Digest:
      properties:
        algorithm:
          type: string
        value:
          items:
            format: byte
            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            type: string
          type: array
      type: object
    Disposition:
      properties:
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        type:
          type: string
        filename:
          type: string
      type: object
    EncoderService:
      example:
        acceptedMediaTypes:
        - concrete: true
          parent: null
          name: name
          description: description
          subType: subType
          mainType: mainType
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - concrete: true
          parent: null
          name: name
          description: description
          subType: subType
          mainType: mainType
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        stopped: true
        minimumSize: 5
        context: null
        started: true
        ignoredMediaTypes:
        - concrete: true
          parent: null
          name: name
          description: description
          subType: subType
          mainType: mainType
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - concrete: true
          parent: null
          name: name
          description: description
          subType: subType
          mainType: mainType
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        enabled: true
      properties:
        context:
          $ref: '#/components/schemas/Context'
        enabled:
          type: boolean
        started:
          type: boolean
        acceptedMediaTypes:
          items:
            $ref: '#/components/schemas/MediaType'
          type: array
        ignoredMediaTypes:
          items:
            $ref: '#/components/schemas/MediaType'
          type: array
        minimumSize:
          format: int64
          type: integer
        stopped:
          type: boolean
      type: object
    Encoding:
      example:
        parent:
          parent: null
          name: name
          description: description
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
        parent:
          $ref: '#/components/schemas/Metadata'
      type: object
    Enroler:
      type: object
    Enumeration:
      type: object
    EnumerationString:
      type: object
    ErrorManager:
      type: object
    Expectation:
      properties:
        name:
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        value:
          type: string
      type: object
    Filter:
      type: object
    Formatter:
      type: object
    Handler:
      example:
        filter: "{}"
        formatter: "{}"
        errorManager: "{}"
        level:
          localizedName: localizedName
          resourceBundleName: resourceBundleName
          name: name
        encoding: encoding
      properties:
        filter:
          type: object
        formatter:
          type: object
        errorManager:
          type: object
        encoding:
          type: string
        level:
          $ref: '#/components/schemas/Level'
      type: object
    Header:
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    InputStream:
      type: object
    Language:
      example:
        parent: null
        name: name
        description: description
        subTags:
        - subTags
        - subTags
        primaryTag: primaryTag
      properties:
        description:
          type: string
        name:
          type: string
        subTags:
          items:
            type: string
          type: array
        parent:
          $ref: '#/components/schemas/Language'
        primaryTag:
          type: string
      type: object
    Level:
      example:
        localizedName: localizedName
        resourceBundleName: resourceBundleName
        name: name
      properties:
        name:
          type: string
        resourceBundleName:
          type: string
        localizedName:
          type: string
      type: object
    Locale:
      example:
        unicodeLocaleKeys:
        - unicodeLocaleKeys
        - unicodeLocaleKeys
        country: country
        displayName: displayName
        iso3Language: iso3Language
        language: language
        displayVariant: displayVariant
        iso3Country: iso3Country
        displayLanguage: displayLanguage
        script: script
        unicodeLocaleAttributes:
        - unicodeLocaleAttributes
        - unicodeLocaleAttributes
        displayCountry: displayCountry
        variant: variant
        extensionKeys:
        - extensionKeys
        - extensionKeys
        displayScript: displayScript
      properties:
        language:
          type: string
        displayName:
          type: string
        country:
          type: string
        variant:
          type: string
        script:
          type: string
        unicodeLocaleAttributes:
          items:
            type: string
          type: array
          uniqueItems: true
        unicodeLocaleKeys:
          items:
            type: string
          type: array
          uniqueItems: true
        displayLanguage:
          type: string
        displayScript:
          type: string
        displayCountry:
          type: string
        displayVariant:
          type: string
        extensionKeys:
          items:
            type: string
          type: array
          uniqueItems: true
        iso3Language:
          type: string
        iso3Country:
          type: string
      type: object
    Logger:
      example:
        filter: "{}"
        parent: null
        resourceBundle:
          baseBundleName: baseBundleName
          keys: "{}"
          locale:
            unicodeLocaleKeys:
            - unicodeLocaleKeys
            - unicodeLocaleKeys
            country: country
            displayName: displayName
            iso3Language: iso3Language
            language: language
            displayVariant: displayVariant
            iso3Country: iso3Country
            displayLanguage: displayLanguage
            script: script
            unicodeLocaleAttributes:
            - unicodeLocaleAttributes
            - unicodeLocaleAttributes
            displayCountry: displayCountry
            variant: variant
            extensionKeys:
            - extensionKeys
            - extensionKeys
            displayScript: displayScript
        level:
          localizedName: localizedName
          resourceBundleName: resourceBundleName
          name: name
        resourceBundleName: resourceBundleName
        useParentHandlers: true
        handlers:
        - filter: "{}"
          formatter: "{}"
          errorManager: "{}"
          level:
            localizedName: localizedName
            resourceBundleName: resourceBundleName
            name: name
          encoding: encoding
        - filter: "{}"
          formatter: "{}"
          errorManager: "{}"
          level:
            localizedName: localizedName
            resourceBundleName: resourceBundleName
            name: name
          encoding: encoding
        name: name
      properties:
        name:
          type: string
        parent:
          $ref: '#/components/schemas/Logger'
        filter:
          type: object
        level:
          $ref: '#/components/schemas/Level'
        resourceBundleName:
          type: string
        handlers:
          items:
            $ref: '#/components/schemas/Handler'
          type: array
        useParentHandlers:
          type: boolean
        resourceBundle:
          $ref: '#/components/schemas/ResourceBundle'
      type: object
    MediaType:
      example:
        concrete: true
        parent: null
        name: name
        description: description
        subType: subType
        mainType: mainType
        parameters:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        description:
          type: string
        name:
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        parent:
          $ref: '#/components/schemas/MediaType'
        mainType:
          type: string
        concrete:
          type: boolean
        subType:
          type: string
      type: object
    Metadata:
      example:
        parent: null
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
        parent:
          $ref: '#/components/schemas/Metadata'
      type: object
    MetadataService:
      example:
        allLanguageExtensionNames:
        - allLanguageExtensionNames
        - allLanguageExtensionNames
        stopped: true
        defaultEncoding:
          parent:
            parent: null
            name: name
            description: description
          name: name
          description: description
        allExtensionNames:
        - allExtensionNames
        - allExtensionNames
        started: true
        allEncodingExtensionNames:
        - allEncodingExtensionNames
        - allEncodingExtensionNames
        enabled: true
        allCharacterSetExtensionNames:
        - allCharacterSetExtensionNames
        - allCharacterSetExtensionNames
        defaultLanguage:
          parent: null
          name: name
          description: description
          subTags:
          - subTags
          - subTags
          primaryTag: primaryTag
        defaultMediaType:
          concrete: true
          parent: null
          name: name
          description: description
          subType: subType
          mainType: mainType
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        defaultCharacterSet:
          parent:
            parent: null
            name: name
            description: description
          name: name
          description: description
        context: null
        allMediaTypeExtensionNames:
        - allMediaTypeExtensionNames
        - allMediaTypeExtensionNames
      properties:
        context:
          $ref: '#/components/schemas/Context'
        enabled:
          type: boolean
        started:
          type: boolean
        defaultCharacterSet:
          $ref: '#/components/schemas/CharacterSet'
        defaultEncoding:
          $ref: '#/components/schemas/Encoding'
        defaultLanguage:
          $ref: '#/components/schemas/Language'
        defaultMediaType:
          $ref: '#/components/schemas/MediaType'
        allExtensionNames:
          items:
            type: string
          type: array
        allLanguageExtensionNames:
          items:
            type: string
          type: array
        allMediaTypeExtensionNames:
          items:
            type: string
          type: array
        allCharacterSetExtensionNames:
          items:
            type: string
          type: array
        allEncodingExtensionNames:
          items:
            type: string
          type: array
        stopped:
          type: boolean
      type: object
    Method:
      properties:
        description:
          type: string
        idempotent:
          type: boolean
        name:
          type: string
        replying:
          type: boolean
        safe:
          type: boolean
        uri:
          type: string
      type: object
    MyAccount:
      example:
        updateDate: 2000-01-23T04:56:07.000+00:00
        profile:
          zip: zip
          firstName: firstName
          lastName: lastName
          country: country
          address: address
          city: city
        language: de
        secret:
        - secret
        - secret
        type: 1
        creationDate: 2000-01-23T04:56:07.000+00:00
        masterAccountId: 1
        accountId: 0
        emailVerified: true
        descent:
          origin: GOOGLE
        apiTermsOfUse:
          acceptanceDate: 2000-01-23T04:56:07.000+00:00
          publishDate: 2000-01-23T04:56:07.000+00:00
          state: Accepted
        shsSubscriptionType: BUSINESS
        rights: 75
        name: name
        b2bActive: true
        config:
          otpEnabledDate: 2000-01-23T04:56:07.000+00:00
          alexaPin: alexaPin
          gactionsHomePin: gactionsHomePin
        email: email
      properties:
        accountId:
          description: The account id
          format: int32
          type: integer
        type:
          description: "The type: 0 .. user, 1 .. company, 2 .. caretaker"
          format: int32
          maximum: 2
          minimum: 0
          type: integer
        email:
          description: The email address
          type: string
        emailVerified:
          description: "true, if the email is verified"
          type: boolean
        name:
          description: The name
          type: string
        masterAccountId:
          description: The master account id if it's a sub account
          format: int32
          type: integer
        rights:
          description: "The rights bitmask if it's a sub account: 1 .. manage smartlock,\
            \ 2 .. operate smartlock, 4 .. manage smartlock config, 8 .. manage smartlock\
            \ authorizations, 16 .. view smartlock logs, 32 .. manage sub accounts,\
            \ 64 .. create smartlocks"
          format: int32
          maximum: 127
          minimum: 0
          type: integer
        language:
          description: The language code
          example: de
          type: string
        config:
          $ref: '#/components/schemas/Account.Config'
        profile:
          $ref: '#/components/schemas/Account.Profile'
        secret:
          description: The secret base64 encoded
          items:
            format: byte
            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            type: string
          type: array
        creationDate:
          description: The creation date
          format: date-time
          type: string
        updateDate:
          description: The update date
          format: date-time
          type: string
        descent:
          $ref: '#/components/schemas/Account.Descent'
        shsSubscriptionType:
          description: subscription type of the account (b2b)
          enum:
          - BUSINESS
          - STANDARD
          - BUSINESS_PLUS
          - API_ONLY
          type: string
        b2bActive:
          type: boolean
        apiTermsOfUse:
          $ref: '#/components/schemas/TermsOfUse'
      required:
      - accountId
      - creationDate
      - email
      - name
      - type
      - updateDate
      type: object
    NamedValue:
      properties:
        name:
          type: string
        value:
          properties: {}
          type: object
      type: object
    NamedValueString:
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    Notification:
      example:
        pushId: pushId
        settings:
        - smartlockId: 1
          authIds:
          - authIds
          - authIds
          triggerEvents:
          - triggerEvents
          - triggerEvents
        - smartlockId: 1
          authIds:
          - authIds
          - authIds
          triggerEvents:
          - triggerEvents
          - triggerEvents
        os: 0
        lastActiveDate: 2000-01-23T04:56:07.000+00:00
        notificationId: notificationId
        language: language
        secret: 8d41a187c3954f886f9de3a88c2ef22df0eac190
        referenceId: referenceId
        status: 6
      properties:
        notificationId:
          description: The unique notificationId for the notification
          type: string
        referenceId:
          description: "The reference ID, an ID to identify a foreign system"
          type: string
        pushId:
          description: The push ID or the POST URL for a webhook
          type: string
        secret:
          description: The 40 byte hex string to sign the checksumof the POST payload
            if the notification is webhook (os=2)
          example: 8d41a187c3954f886f9de3a88c2ef22df0eac190
          type: string
        os:
          description: "The operating system: 0 .. Android, 1 .. iOS, 2 .. web hook"
          format: int32
          type: integer
        language:
          description: "The language of push messages: cs, de, en (default), es, fr,\
            \ it, nl, sk"
          type: string
        status:
          description: "Current state: 0 .. init, 1 .. active, 2 .. failed"
          format: int32
          type: integer
        lastActiveDate:
          description: The last active date
          format: date-time
          type: string
        settings:
          description: Settings per Smart Lock
          items:
            $ref: '#/components/schemas/Notification.Setting'
          type: array
      required:
      - os
      - pushId
      - settings
      type: object
    Notification.Setting:
      example:
        smartlockId: 1
        authIds:
        - authIds
        - authIds
        triggerEvents:
        - triggerEvents
        - triggerEvents
      properties:
        smartlockId:
          description: "The smartlock ID, if not set all Smart Locks of the account\
            \  are enabled for push notifications"
          format: int64
          type: integer
        triggerEvents:
          description: "A set on which push notifications should be triggered: lock,\
            \ unlock, unlatch, lockngo, open, ring, doorsensor, warnings, smartlock"
          items:
            type: string
          type: array
          uniqueItems: true
        authIds:
          description: A set of auth IDs to filter push notifications to certain  users
            or keypads. If no entry push notifications are triggered for all users
            and keypads
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - triggerEvents
      type: object
    ObjectId:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        machineIdentifier: 1
        counter: 4
        time: 7
        processIdentifier: 1
        timestamp: 2
        timeSecond: 1
      properties:
        timestamp:
          format: int32
          type: integer
        counter:
          format: int32
          type: integer
        time:
          format: int64
          type: integer
        date:
          format: date-time
          type: string
        machineIdentifier:
          format: int32
          type: integer
        processIdentifier:
          format: int32
          type: integer
        timeSecond:
          format: int32
          type: integer
      type: object
    OpenerIntercomBrand:
      example:
        brandId: 0
        brand: brand
      properties:
        brandId:
          description: The brand ID
          format: int32
          type: integer
        brand:
          description: The brand name
          type: string
      required:
      - brand
      - brandId
      type: object
    OpenerIntercomModel:
      example:
        updateDate: 2000-01-23T04:56:07.000+00:00
        conOpendoor: conOpendoor
        conDoorbellPlus: conDoorbellPlus
        conBusAudio: conBusAudio
        verified: 5
        busModeSwitchShortCircuitDuration: 2
        type: 1
        conAudioout: conAudioout
        creationDate: 2000-01-23T04:56:07.000+00:00
        conGndBus: conGndBus
        conDoorbellMinus: conDoorbellMinus
        busModeSwitch: 5
        intercomId: 0
        brandId: 6
        model: model
        conGndAnalogue: conGndAnalogue
      properties:
        intercomId:
          description: The intercom ID
          format: int32
          type: integer
        brandId:
          description: The related brand ID
          format: int32
          type: integer
        type:
          description: The type of the model
          format: int32
          type: integer
        model:
          description: The model name
          type: string
        verified:
          description: "Verified Nuki intercom: 1 .. verified to work, 2 .. may be\
            \ compatible, but not verified, 3 .. not compatible"
          format: int32
          type: integer
        conGndBus:
          description: Connection for ground BUS
          type: string
        conBusAudio:
          description: Connection for audio BUS
          type: string
        conAudioout:
          description: Connection for audio out
          type: string
        conDoorbellPlus:
          description: Connection for doorbell plus
          type: string
        conDoorbellMinus:
          description: Connection for doorbell minus
          type: string
        conOpendoor:
          description: Connection for open the door
          type: string
        conGndAnalogue:
          description: Connection for ground analogue
          type: string
        busModeSwitch:
          description: Settings value for BUS mode switch
          format: int32
          type: integer
        busModeSwitchShortCircuitDuration:
          description: Settings value for BUS mode switch short cicuit duration
          format: int32
          type: integer
        creationDate:
          description: The creation date
          format: date-time
          type: string
        updateDate:
          description: The update date
          format: date-time
          type: string
      required:
      - brandId
      - busModeSwitch
      - busModeSwitchShortCircuitDuration
      - conAudioout
      - conBusAudio
      - conDoorbellMinus
      - conDoorbellPlus
      - conGndAnalogue
      - conGndBus
      - conOpendoor
      - intercomId
      - model
      - type
      - verified
      type: object
    PaginatedResponse:
      example:
        pagination:
          totalItems: 0
          nextPage: nextPage
          totalPages: 6
          pageSize: 5
          prevPage: prevPage
          currentPage: 1
        results:
        - "{}"
        - "{}"
      properties:
        results:
          items:
            properties: {}
            type: object
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      type: object
    Pagination:
      example:
        totalItems: 0
        nextPage: nextPage
        totalPages: 6
        pageSize: 5
        prevPage: prevPage
        currentPage: 1
      properties:
        totalItems:
          format: int64
          type: integer
        totalPages:
          format: int32
          type: integer
        currentPage:
          format: int32
          type: integer
        nextPage:
          type: string
        prevPage:
          type: string
        pageSize:
          format: int32
          type: integer
      type: object
    Parameter:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    Preference:
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        quality:
          format: float
          type: number
      type: object
    PreferenceCharacterSet:
      properties:
        metadata:
          $ref: '#/components/schemas/CharacterSet'
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        quality:
          format: float
          type: number
      type: object
    PreferenceEncoding:
      properties:
        metadata:
          $ref: '#/components/schemas/Encoding'
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        quality:
          format: float
          type: number
      type: object
    PreferenceLanguage:
      properties:
        metadata:
          $ref: '#/components/schemas/Language'
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        quality:
          format: float
          type: number
      type: object
    PreferenceMediaType:
      properties:
        metadata:
          $ref: '#/components/schemas/MediaType'
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        quality:
          format: float
          type: number
      type: object
    Principal:
      properties:
        name:
          type: string
      type: object
    Product:
      properties:
        comment:
          type: string
        name:
          type: string
        version:
          type: string
      type: object
    Protocol:
      example:
        defaultPort: 6
        name: name
        schemeName: schemeName
        description: description
        technicalName: technicalName
        version: version
        confidential: true
      properties:
        confidential:
          type: boolean
        defaultPort:
          format: int32
          type: integer
        description:
          type: string
        name:
          type: string
        schemeName:
          type: string
        technicalName:
          type: string
        version:
          type: string
      type: object
    PublicKey:
      properties:
        encoded:
          items:
            format: byte
            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            type: string
          type: array
        format:
          type: string
        algorithm:
          type: string
      type: object
    Range:
      properties:
        index:
          format: int64
          type: integer
        instanceSize:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
        unitName:
          type: string
      type: object
    RangeService:
      example:
        stopped: true
        context: null
        started: true
        enabled: true
      properties:
        context:
          $ref: '#/components/schemas/Context'
        enabled:
          type: boolean
        started:
          type: boolean
        stopped:
          type: boolean
      type: object
    ReadableByteChannel:
      properties:
        open:
          type: boolean
      type: object
    Reader:
      type: object
    RecipientInfo:
      properties:
        protocol:
          $ref: '#/components/schemas/Protocol'
        comment:
          type: string
        name:
          type: string
      type: object
    Reference:
      example:
        userInfo: userInfo
        schemeProtocol:
          defaultPort: 6
          name: name
          schemeName: schemeName
          description: description
          technicalName: technicalName
          version: version
          confidential: true
        queryAsForm:
        - name: name
          value: value
        - name: name
          value: value
        matrixAsForm:
        - name: name
          value: value
        - name: name
          value: value
        hostIdentifier: hostIdentifier
        scheme: scheme
        extensionsAsArray:
        - extensionsAsArray
        - extensionsAsArray
        relativeRef: null
        matrix: matrix
        lastSegment: lastSegment
        segments:
        - segments
        - segments
        path: path
        hierarchical: true
        hostDomain: hostDomain
        relativePart: relativePart
        hostPort: 0
        identifier: identifier
        targetRef: null
        opaque: true
        remainingPart: remainingPart
        query: query
        schemeSpecificPart: schemeSpecificPart
        hierarchicalPart: hierarchicalPart
        baseRef: null
        parentRef: null
        fragment: fragment
        extensions: extensions
        absolute: true
        authority: authority
        relative: true
      properties:
        baseRef:
          $ref: '#/components/schemas/Reference'
        scheme:
          type: string
        fragment:
          type: string
        userInfo:
          type: string
        path:
          type: string
        query:
          type: string
        absolute:
          type: boolean
        opaque:
          type: boolean
        authority:
          type: string
        relative:
          type: boolean
        schemeSpecificPart:
          type: string
        extensions:
          type: string
        identifier:
          type: string
        matrix:
          type: string
        matrixAsForm:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        queryAsForm:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        extensionsAsArray:
          items:
            type: string
          type: array
        hierarchicalPart:
          type: string
        hostDomain:
          type: string
        hostIdentifier:
          type: string
        hostPort:
          format: int32
          type: integer
        lastSegment:
          type: string
        parentRef:
          $ref: '#/components/schemas/Reference'
        relativePart:
          type: string
        relativeRef:
          $ref: '#/components/schemas/Reference'
        remainingPart:
          type: string
        schemeProtocol:
          $ref: '#/components/schemas/Protocol'
        segments:
          items:
            type: string
          type: array
        targetRef:
          $ref: '#/components/schemas/Reference'
        hierarchical:
          type: boolean
      type: object
    Representation:
      properties:
        characterSet:
          $ref: '#/components/schemas/CharacterSet'
        encodings:
          items:
            $ref: '#/components/schemas/Encoding'
          type: array
        locationRef:
          $ref: '#/components/schemas/Reference'
        languages:
          items:
            $ref: '#/components/schemas/Language'
          type: array
        mediaType:
          $ref: '#/components/schemas/MediaType'
        modificationDate:
          format: date-time
          type: string
        tag:
          $ref: '#/components/schemas/Tag'
        available:
          type: boolean
        digest:
          $ref: '#/components/schemas/Digest'
        disposition:
          $ref: '#/components/schemas/Disposition'
        expirationDate:
          format: date-time
          type: string
        range:
          $ref: '#/components/schemas/Range'
        size:
          format: int64
          type: integer
        empty:
          type: boolean
        channel:
          $ref: '#/components/schemas/ReadableByteChannel'
        transient:
          type: boolean
        text:
          type: string
        reader:
          type: object
        availableSize:
          format: int64
          type: integer
        registration:
          $ref: '#/components/schemas/SelectionRegistration'
        stream:
          type: object
        selectable:
          type: boolean
      type: object
    Request:
      properties:
        attributes:
          additionalProperties:
            properties: {}
            type: object
          type: object
        cacheDirectives:
          items:
            $ref: '#/components/schemas/CacheDirective'
          type: array
        date:
          format: date-time
          type: string
        entity:
          $ref: '#/components/schemas/Representation'
        onError:
          type: object
        onSent:
          type: object
        recipientsInfo:
          items:
            $ref: '#/components/schemas/RecipientInfo'
          type: array
        warnings:
          items:
            $ref: '#/components/schemas/Warning'
          type: array
        accessControlRequestHeaders:
          items:
            type: string
          type: array
          uniqueItems: true
        accessControlRequestMethod:
          $ref: '#/components/schemas/Method'
        challengeResponse:
          $ref: '#/components/schemas/ChallengeResponse'
        clientInfo:
          $ref: '#/components/schemas/ClientInfo'
        conditions:
          $ref: '#/components/schemas/Conditions'
        cookies:
          items:
            $ref: '#/components/schemas/Cookie'
          type: array
        hostRef:
          $ref: '#/components/schemas/Reference'
        loggable:
          type: boolean
        maxForwards:
          format: int32
          type: integer
        method:
          $ref: '#/components/schemas/Method'
        onResponse:
          type: object
        originalRef:
          $ref: '#/components/schemas/Reference'
        protocol:
          $ref: '#/components/schemas/Protocol'
        proxyChallengeResponse:
          $ref: '#/components/schemas/ChallengeResponse'
        ranges:
          items:
            $ref: '#/components/schemas/Range'
          type: array
        referrerRef:
          $ref: '#/components/schemas/Reference'
        resourceRef:
          $ref: '#/components/schemas/Reference'
        rootRef:
          $ref: '#/components/schemas/Reference'
        confidential:
          type: boolean
        entityAvailable:
          type: boolean
        asynchronous:
          type: boolean
        expectingResponse:
          type: boolean
        synchronous:
          type: boolean
        headers:
          items:
            $ref: '#/components/schemas/Header'
          type: array
        entityAsText:
          type: string
      type: object
    ReservationAccessTimesUpdate:
      example:
        checkOutTime: 6
        checkInTime: 0
      properties:
        checkInTime:
          description: Custom check in time in minutes from midnight
          format: int32
          type: integer
        checkOutTime:
          description: Custom check out time in minutes from midnight
          format: int32
          type: integer
      type: object
    ResourceBundle:
      example:
        baseBundleName: baseBundleName
        keys: "{}"
        locale:
          unicodeLocaleKeys:
          - unicodeLocaleKeys
          - unicodeLocaleKeys
          country: country
          displayName: displayName
          iso3Language: iso3Language
          language: language
          displayVariant: displayVariant
          iso3Country: iso3Country
          displayLanguage: displayLanguage
          script: script
          unicodeLocaleAttributes:
          - unicodeLocaleAttributes
          - unicodeLocaleAttributes
          displayCountry: displayCountry
          variant: variant
          extensionKeys:
          - extensionKeys
          - extensionKeys
          displayScript: displayScript
      properties:
        locale:
          $ref: '#/components/schemas/Locale'
        keys:
          type: object
        baseBundleName:
          type: string
      type: object
    Response:
      properties:
        attributes:
          additionalProperties:
            properties: {}
            type: object
          type: object
        cacheDirectives:
          items:
            $ref: '#/components/schemas/CacheDirective'
          type: array
        date:
          format: date-time
          type: string
        entity:
          $ref: '#/components/schemas/Representation'
        onError:
          type: object
        onSent:
          type: object
        recipientsInfo:
          items:
            $ref: '#/components/schemas/RecipientInfo'
          type: array
        warnings:
          items:
            $ref: '#/components/schemas/Warning'
          type: array
        accessControlAllowCredentials:
          type: boolean
        accessControlAllowHeaders:
          items:
            type: string
          type: array
          uniqueItems: true
        accessControlAllowMethods:
          items:
            $ref: '#/components/schemas/Method'
          type: array
          uniqueItems: true
        accessControlAllowOrigin:
          type: string
        accessControlExposeHeaders:
          items:
            type: string
          type: array
          uniqueItems: true
        accessControlMaxAge:
          format: int32
          type: integer
        age:
          format: int32
          type: integer
        allowedMethods:
          items:
            $ref: '#/components/schemas/Method'
          type: array
          uniqueItems: true
        authenticationInfo:
          $ref: '#/components/schemas/AuthenticationInfo'
        autoCommitting:
          type: boolean
        challengeRequests:
          items:
            $ref: '#/components/schemas/ChallengeRequest'
          type: array
        committed:
          type: boolean
        cookieSettings:
          items:
            $ref: '#/components/schemas/CookieSetting'
          type: array
        dimensions:
          items:
            enum:
            - AUTHORIZATION
            - CHARACTER_SET
            - CLIENT_ADDRESS
            - CLIENT_AGENT
            - UNSPECIFIED
            - ENCODING
            - LANGUAGE
            - MEDIA_TYPE
            - TIME
            - ORIGIN
            type: string
          type: array
          uniqueItems: true
        locationRef:
          $ref: '#/components/schemas/Reference'
        proxyChallengeRequests:
          items:
            $ref: '#/components/schemas/ChallengeRequest'
          type: array
        request:
          $ref: '#/components/schemas/Request'
        retryAfter:
          format: date-time
          type: string
        serverInfo:
          $ref: '#/components/schemas/ServerInfo'
        status:
          $ref: '#/components/schemas/Status'
        final:
          type: boolean
        confidential:
          type: boolean
        provisional:
          type: boolean
        headers:
          items:
            $ref: '#/components/schemas/Header'
          type: array
        entityAsText:
          type: string
        entityAvailable:
          type: boolean
      type: object
    Restlet:
      example:
        owner: owner
        stopped: true
        application:
          owner: owner
          converterService:
            stopped: true
            context: null
            started: true
            enabled: true
          stopped: true
          encoderService:
            acceptedMediaTypes:
            - concrete: true
              parent: null
              name: name
              description: description
              subType: subType
              mainType: mainType
              parameters:
              - name: name
                value: value
              - name: name
                value: value
            - concrete: true
              parent: null
              name: name
              description: description
              subType: subType
              mainType: mainType
              parameters:
              - name: name
                value: value
              - name: name
                value: value
            stopped: true
            minimumSize: 5
            context: null
            started: true
            ignoredMediaTypes:
            - concrete: true
              parent: null
              name: name
              description: description
              subType: subType
              mainType: mainType
              parameters:
              - name: name
                value: value
              - name: name
                value: value
            - concrete: true
              parent: null
              name: name
              description: description
              subType: subType
              mainType: mainType
              parameters:
              - name: name
                value: value
              - name: name
                value: value
            enabled: true
          author: author
          roles:
          - application: null
            name: name
            description: description
            childRoles:
            - null
            - null
          - application: null
            name: name
            description: description
            childRoles:
            - null
            - null
          logger:
            filter: "{}"
            parent: null
            resourceBundle:
              baseBundleName: baseBundleName
              keys: "{}"
              locale:
                unicodeLocaleKeys:
                - unicodeLocaleKeys
                - unicodeLocaleKeys
                country: country
                displayName: displayName
                iso3Language: iso3Language
                language: language
                displayVariant: displayVariant
                iso3Country: iso3Country
                displayLanguage: displayLanguage
                script: script
                unicodeLocaleAttributes:
                - unicodeLocaleAttributes
                - unicodeLocaleAttributes
                displayCountry: displayCountry
                variant: variant
                extensionKeys:
                - extensionKeys
                - extensionKeys
                displayScript: displayScript
            level:
              localizedName: localizedName
              resourceBundleName: resourceBundleName
              name: name
            resourceBundleName: resourceBundleName
            useParentHandlers: true
            handlers:
            - filter: "{}"
              formatter: "{}"
              errorManager: "{}"
              level:
                localizedName: localizedName
                resourceBundleName: resourceBundleName
                name: name
              encoding: encoding
            - filter: "{}"
              formatter: "{}"
              errorManager: "{}"
              level:
                localizedName: localizedName
                resourceBundleName: resourceBundleName
                name: name
              encoding: encoding
            name: name
          description: description
          started: true
          connectorService:
            stopped: true
            clientProtocols:
            - defaultPort: 6
              name: name
              schemeName: schemeName
              description: description
              technicalName: technicalName
              version: version
              confidential: true
            - defaultPort: 6
              name: name
              schemeName: schemeName
              description: description
              technicalName: technicalName
              version: version
              confidential: true
            context: null
            started: true
            serverProtocols:
            - defaultPort: 6
              name: name
              schemeName: schemeName
              description: description
              technicalName: technicalName
              version: version
              confidential: true
            - defaultPort: 6
              name: name
              schemeName: schemeName
              description: description
              technicalName: technicalName
              version: version
              confidential: true
            enabled: true
          services:
          - null
          - null
          outboundRoot: null
          decoderService:
            stopped: true
            context: null
            started: true
            enabled: true
          metadataService:
            allLanguageExtensionNames:
            - allLanguageExtensionNames
            - allLanguageExtensionNames
            stopped: true
            defaultEncoding:
              parent:
                parent: null
                name: name
                description: description
              name: name
              description: description
            allExtensionNames:
            - allExtensionNames
            - allExtensionNames
            started: true
            allEncodingExtensionNames:
            - allEncodingExtensionNames
            - allEncodingExtensionNames
            enabled: true
            allCharacterSetExtensionNames:
            - allCharacterSetExtensionNames
            - allCharacterSetExtensionNames
            defaultLanguage:
              parent: null
              name: name
              description: description
              subTags:
              - subTags
              - subTags
              primaryTag: primaryTag
            defaultMediaType:
              concrete: true
              parent: null
              name: name
              description: description
              subType: subType
              mainType: mainType
              parameters:
              - name: name
                value: value
              - name: name
                value: value
            defaultCharacterSet:
              parent:
                parent: null
                name: name
                description: description
              name: name
              description: description
            context: null
            allMediaTypeExtensionNames:
            - allMediaTypeExtensionNames
            - allMediaTypeExtensionNames
          tunnelService:
            extensionsTunnel: true
            preferencesTunnel: true
            userAgentTunnel: true
            stopped: true
            languageParameter: languageParameter
            queryTunnel: true
            methodParameter: methodParameter
            started: true
            enabled: true
            characterSetParameter: characterSetParameter
            methodHeader: methodHeader
            encodingParameter: encodingParameter
            methodTunnel: true
            context: null
            headersTunnel: true
            mediaTypeParameter: mediaTypeParameter
          application: null
          rangeService:
            stopped: true
            context: null
            started: true
            enabled: true
          statusService:
            converterService:
              stopped: true
              context: null
              started: true
              enabled: true
            stopped: true
            metadataService:
              allLanguageExtensionNames:
              - allLanguageExtensionNames
              - allLanguageExtensionNames
              stopped: true
              defaultEncoding:
                parent:
                  parent: null
                  name: name
                  description: description
                name: name
                description: description
              allExtensionNames:
              - allExtensionNames
              - allExtensionNames
              started: true
              allEncodingExtensionNames:
              - allEncodingExtensionNames
              - allEncodingExtensionNames
              enabled: true
              allCharacterSetExtensionNames:
              - allCharacterSetExtensionNames
              - allCharacterSetExtensionNames
              defaultLanguage:
                parent: null
                name: name
                description: description
                subTags:
                - subTags
                - subTags
                primaryTag: primaryTag
              defaultMediaType:
                concrete: true
                parent: null
                name: name
                description: description
                subType: subType
                mainType: mainType
                parameters:
                - name: name
                  value: value
                - name: name
                  value: value
              defaultCharacterSet:
                parent:
                  parent: null
                  name: name
                  description: description
                name: name
                description: description
              context: null
              allMediaTypeExtensionNames:
              - allMediaTypeExtensionNames
              - allMediaTypeExtensionNames
            contactEmail: contactEmail
            homeRef:
              userInfo: userInfo
              schemeProtocol:
                defaultPort: 6
                name: name
                schemeName: schemeName
                description: description
                technicalName: technicalName
                version: version
                confidential: true
              queryAsForm:
              - name: name
                value: value
              - name: name
                value: value
              matrixAsForm:
              - name: name
                value: value
              - name: name
                value: value
              hostIdentifier: hostIdentifier
              scheme: scheme
              extensionsAsArray:
              - extensionsAsArray
              - extensionsAsArray
              relativeRef: null
              matrix: matrix
              lastSegment: lastSegment
              segments:
              - segments
              - segments
              path: path
              hierarchical: true
              hostDomain: hostDomain
              relativePart: relativePart
              hostPort: 0
              identifier: identifier
              targetRef: null
              opaque: true
              remainingPart: remainingPart
              query: query
              schemeSpecificPart: schemeSpecificPart
              hierarchicalPart: hierarchicalPart
              baseRef: null
              parentRef: null
              fragment: fragment
              extensions: extensions
              absolute: true
              authority: authority
              relative: true
            context: null
            started: true
            connegService:
              stopped: true
              context: null
              started: true
              strict: true
              enabled: true
            overwriting: true
            enabled: true
          context: null
          name: name
          debugging: true
          inboundRoot: null
          taskService:
            shutdownAllowed: true
            stopped: true
            context: null
            corePoolSize: 1
            started: true
            enabled: true
            terminated: true
            shutdown: true
            daemon: true
          connegService:
            stopped: true
            context: null
            started: true
            strict: true
            enabled: true
        author: author
        logger:
          filter: "{}"
          parent: null
          resourceBundle:
            baseBundleName: baseBundleName
            keys: "{}"
            locale:
              unicodeLocaleKeys:
              - unicodeLocaleKeys
              - unicodeLocaleKeys
              country: country
              displayName: displayName
              iso3Language: iso3Language
              language: language
              displayVariant: displayVariant
              iso3Country: iso3Country
              displayLanguage: displayLanguage
              script: script
              unicodeLocaleAttributes:
              - unicodeLocaleAttributes
              - unicodeLocaleAttributes
              displayCountry: displayCountry
              variant: variant
              extensionKeys:
              - extensionKeys
              - extensionKeys
              displayScript: displayScript
          level:
            localizedName: localizedName
            resourceBundleName: resourceBundleName
            name: name
          resourceBundleName: resourceBundleName
          useParentHandlers: true
          handlers:
          - filter: "{}"
            formatter: "{}"
            errorManager: "{}"
            level:
              localizedName: localizedName
              resourceBundleName: resourceBundleName
              name: name
            encoding: encoding
          - filter: "{}"
            formatter: "{}"
            errorManager: "{}"
            level:
              localizedName: localizedName
              resourceBundleName: resourceBundleName
              name: name
            encoding: encoding
          name: name
        context: null
        name: name
        description: description
        started: true
      properties:
        author:
          type: string
        context:
          $ref: '#/components/schemas/Context'
        description:
          type: string
        name:
          type: string
        owner:
          type: string
        started:
          type: boolean
        logger:
          $ref: '#/components/schemas/Logger'
        stopped:
          type: boolean
        application:
          $ref: '#/components/schemas/Application'
      type: object
    Role:
      example:
        application: null
        name: name
        description: description
        childRoles:
        - null
        - null
      properties:
        application:
          $ref: '#/components/schemas/Application'
        childRoles:
          items:
            $ref: '#/components/schemas/Role'
          type: array
        description:
          type: string
        name:
          type: string
      type: object
    ScheduledExecutorService:
      example:
        terminated: true
        shutdown: true
      properties:
        terminated:
          type: boolean
        shutdown:
          type: boolean
      type: object
    SelectableChannel:
      properties:
        registered:
          type: boolean
        blocking:
          type: boolean
        open:
          type: boolean
      type: object
    SelectionListener:
      type: object
    SelectionRegistration:
      properties:
        canceling:
          type: boolean
        interestOperations:
          format: int32
          type: integer
        selectionListener:
          type: object
        readyOperations:
          format: int32
          type: integer
        selectableChannel:
          $ref: '#/components/schemas/SelectableChannel'
        wakeupListener:
          type: object
        readable:
          type: boolean
        writable:
          type: boolean
        connectable:
          type: boolean
        interestReady:
          type: boolean
      type: object
    ServerInfo:
      properties:
        acceptingRanges:
          type: boolean
        address:
          type: string
        agent:
          type: string
        port:
          format: int32
          type: integer
      type: object
    Service:
      example:
        stopped: true
        context:
          serverDispatcher:
            owner: owner
            stopped: true
            application:
              owner: owner
              converterService:
                stopped: true
                context: null
                started: true
                enabled: true
              stopped: true
              encoderService:
                acceptedMediaTypes:
                - concrete: true
                  parent: null
                  name: name
                  description: description
                  subType: subType
                  mainType: mainType
                  parameters:
                  - name: name
                    value: value
                  - name: name
                    value: value
                - concrete: true
                  parent: null
                  name: name
                  description: description
                  subType: subType
                  mainType: mainType
                  parameters:
                  - name: name
                    value: value
                  - name: name
                    value: value
                stopped: true
                minimumSize: 5
                context: null
                started: true
                ignoredMediaTypes:
                - concrete: true
                  parent: null
                  name: name
                  description: description
                  subType: subType
                  mainType: mainType
                  parameters:
                  - name: name
                    value: value
                  - name: name
                    value: value
                - concrete: true
                  parent: null
                  name: name
                  description: description
                  subType: subType
                  mainType: mainType
                  parameters:
                  - name: name
                    value: value
                  - name: name
                    value: value
                enabled: true
              author: author
              roles:
              - application: null
                name: name
                description: description
                childRoles:
                - null
                - null
              - application: null
                name: name
                description: description
                childRoles:
                - null
                - null
              logger:
                filter: "{}"
                parent: null
                resourceBundle:
                  baseBundleName: baseBundleName
                  keys: "{}"
                  locale:
                    unicodeLocaleKeys:
                    - unicodeLocaleKeys
                    - unicodeLocaleKeys
                    country: country
                    displayName: displayName
                    iso3Language: iso3Language
                    language: language
                    displayVariant: displayVariant
                    iso3Country: iso3Country
                    displayLanguage: displayLanguage
                    script: script
                    unicodeLocaleAttributes:
                    - unicodeLocaleAttributes
                    - unicodeLocaleAttributes
                    displayCountry: displayCountry
                    variant: variant
                    extensionKeys:
                    - extensionKeys
                    - extensionKeys
                    displayScript: displayScript
                level:
                  localizedName: localizedName
                  resourceBundleName: resourceBundleName
                  name: name
                resourceBundleName: resourceBundleName
                useParentHandlers: true
                handlers:
                - filter: "{}"
                  formatter: "{}"
                  errorManager: "{}"
                  level:
                    localizedName: localizedName
                    resourceBundleName: resourceBundleName
                    name: name
                  encoding: encoding
                - filter: "{}"
                  formatter: "{}"
                  errorManager: "{}"
                  level:
                    localizedName: localizedName
                    resourceBundleName: resourceBundleName
                    name: name
                  encoding: encoding
                name: name
              description: description
              started: true
              connectorService:
                stopped: true
                clientProtocols:
                - defaultPort: 6
                  name: name
                  schemeName: schemeName
                  description: description
                  technicalName: technicalName
                  version: version
                  confidential: true
                - defaultPort: 6
                  name: name
                  schemeName: schemeName
                  description: description
                  technicalName: technicalName
                  version: version
                  confidential: true
                context: null
                started: true
                serverProtocols:
                - defaultPort: 6
                  name: name
                  schemeName: schemeName
                  description: description
                  technicalName: technicalName
                  version: version
                  confidential: true
                - defaultPort: 6
                  name: name
                  schemeName: schemeName
                  description: description
                  technicalName: technicalName
                  version: version
                  confidential: true
                enabled: true
              services:
              - null
              - null
              outboundRoot: null
              decoderService:
                stopped: true
                context: null
                started: true
                enabled: true
              metadataService:
                allLanguageExtensionNames:
                - allLanguageExtensionNames
                - allLanguageExtensionNames
                stopped: true
                defaultEncoding:
                  parent:
                    parent: null
                    name: name
                    description: description
                  name: name
                  description: description
                allExtensionNames:
                - allExtensionNames
                - allExtensionNames
                started: true
                allEncodingExtensionNames:
                - allEncodingExtensionNames
                - allEncodingExtensionNames
                enabled: true
                allCharacterSetExtensionNames:
                - allCharacterSetExtensionNames
                - allCharacterSetExtensionNames
                defaultLanguage:
                  parent: null
                  name: name
                  description: description
                  subTags:
                  - subTags
                  - subTags
                  primaryTag: primaryTag
                defaultMediaType:
                  concrete: true
                  parent: null
                  name: name
                  description: description
                  subType: subType
                  mainType: mainType
                  parameters:
                  - name: name
                    value: value
                  - name: name
                    value: value
                defaultCharacterSet:
                  parent:
                    parent: null
                    name: name
                    description: description
                  name: name
                  description: description
                context: null
                allMediaTypeExtensionNames:
                - allMediaTypeExtensionNames
                - allMediaTypeExtensionNames
              tunnelService:
                extensionsTunnel: true
                preferencesTunnel: true
                userAgentTunnel: true
                stopped: true
                languageParameter: languageParameter
                queryTunnel: true
                methodParameter: methodParameter
                started: true
                enabled: true
                characterSetParameter: characterSetParameter
                methodHeader: methodHeader
                encodingParameter: encodingParameter
                methodTunnel: true
                context: null
                headersTunnel: true
                mediaTypeParameter: mediaTypeParameter
              application: null
              rangeService:
                stopped: true
                context: null
                started: true
                enabled: true
              statusService:
                converterService:
                  stopped: true
                  context: null
                  started: true
                  enabled: true
                stopped: true
                metadataService:
                  allLanguageExtensionNames:
                  - allLanguageExtensionNames
                  - allLanguageExtensionNames
                  stopped: true
                  defaultEncoding:
                    parent:
                      parent: null
                      name: name
                      description: description
                    name: name
                    description: description
                  allExtensionNames:
                  - allExtensionNames
                  - allExtensionNames
                  started: true
                  allEncodingExtensionNames:
                  - allEncodingExtensionNames
                  - allEncodingExtensionNames
                  enabled: true
                  allCharacterSetExtensionNames:
                  - allCharacterSetExtensionNames
                  - allCharacterSetExtensionNames
                  defaultLanguage:
                    parent: null
                    name: name
                    description: description
                    subTags:
                    - subTags
                    - subTags
                    primaryTag: primaryTag
                  defaultMediaType:
                    concrete: true
                    parent: null
                    name: name
                    description: description
                    subType: subType
                    mainType: mainType
                    parameters:
                    - name: name
                      value: value
                    - name: name
                      value: value
                  defaultCharacterSet:
                    parent:
                      parent: null
                      name: name
                      description: description
                    name: name
                    description: description
                  context: null
                  allMediaTypeExtensionNames:
                  - allMediaTypeExtensionNames
                  - allMediaTypeExtensionNames
                contactEmail: contactEmail
                homeRef:
                  userInfo: userInfo
                  schemeProtocol:
                    defaultPort: 6
                    name: name
                    schemeName: schemeName
                    description: description
                    technicalName: technicalName
                    version: version
                    confidential: true
                  queryAsForm:
                  - name: name
                    value: value
                  - name: name
                    value: value
                  matrixAsForm:
                  - name: name
                    value: value
                  - name: name
                    value: value
                  hostIdentifier: hostIdentifier
                  scheme: scheme
                  extensionsAsArray:
                  - extensionsAsArray
                  - extensionsAsArray
                  relativeRef: null
                  matrix: matrix
                  lastSegment: lastSegment
                  segments:
                  - segments
                  - segments
                  path: path
                  hierarchical: true
                  hostDomain: hostDomain
                  relativePart: relativePart
                  hostPort: 0
                  identifier: identifier
                  targetRef: null
                  opaque: true
                  remainingPart: remainingPart
                  query: query
                  schemeSpecificPart: schemeSpecificPart
                  hierarchicalPart: hierarchicalPart
                  baseRef: null
                  parentRef: null
                  fragment: fragment
                  extensions: extensions
                  absolute: true
                  authority: authority
                  relative: true
                context: null
                started: true
                connegService:
                  stopped: true
                  context: null
                  started: true
                  strict: true
                  enabled: true
                overwriting: true
                enabled: true
              context: null
              name: name
              debugging: true
              inboundRoot: null
              taskService:
                shutdownAllowed: true
                stopped: true
                context: null
                corePoolSize: 1
                started: true
                enabled: true
                terminated: true
                shutdown: true
                daemon: true
              connegService:
                stopped: true
                context: null
                started: true
                strict: true
                enabled: true
            author: author
            logger:
              filter: "{}"
              parent: null
              resourceBundle:
                baseBundleName: baseBundleName
                keys: "{}"
                locale:
                  unicodeLocaleKeys:
                  - unicodeLocaleKeys
                  - unicodeLocaleKeys
                  country: country
                  displayName: displayName
                  iso3Language: iso3Language
                  language: language
                  displayVariant: displayVariant
                  iso3Country: iso3Country
                  displayLanguage: displayLanguage
                  script: script
                  unicodeLocaleAttributes:
                  - unicodeLocaleAttributes
                  - unicodeLocaleAttributes
                  displayCountry: displayCountry
                  variant: variant
                  extensionKeys:
                  - extensionKeys
                  - extensionKeys
                  displayScript: displayScript
              level:
                localizedName: localizedName
                resourceBundleName: resourceBundleName
                name: name
              resourceBundleName: resourceBundleName
              useParentHandlers: true
              handlers:
              - filter: "{}"
                formatter: "{}"
                errorManager: "{}"
                level:
                  localizedName: localizedName
                  resourceBundleName: resourceBundleName
                  name: name
                encoding: encoding
              - filter: "{}"
                formatter: "{}"
                errorManager: "{}"
                level:
                  localizedName: localizedName
                  resourceBundleName: resourceBundleName
                  name: name
                encoding: encoding
              name: name
            context: null
            name: name
            description: description
            started: true
          executorService:
            terminated: true
            shutdown: true
          clientDispatcher:
            owner: owner
            stopped: true
            application:
              owner: owner
              converterService:
                stopped: true
                context: null
                started: true
                enabled: true
              stopped: true
              encoderService:
                acceptedMediaTypes:
                - concrete: true
                  parent: null
                  name: name
                  description: description
                  subType: subType
                  mainType: mainType
                  parameters:
                  - name: name
                    value: value
                  - name: name
                    value: value
                - concrete: true
                  parent: null
                  name: name
                  description: description
                  subType: subType
                  mainType: mainType
                  parameters:
                  - name: name
                    value: value
                  - name: name
                    value: value
                stopped: true
                minimumSize: 5
                context: null
                started: true
                ignoredMediaTypes:
                - concrete: true
                  parent: null
                  name: name
                  description: description
                  subType: subType
                  mainType: mainType
                  parameters:
                  - name: name
                    value: value
                  - name: name
                    value: value
                - concrete: true
                  parent: null
                  name: name
                  description: description
                  subType: subType
                  mainType: mainType
                  parameters:
                  - name: name
                    value: value
                  - name: name
                    value: value
                enabled: true
              author: author
              roles:
              - application: null
                name: name
                description: description
                childRoles:
                - null
                - null
              - application: null
                name: name
                description: description
                childRoles:
                - null
                - null
              logger:
                filter: "{}"
                parent: null
                resourceBundle:
                  baseBundleName: baseBundleName
                  keys: "{}"
                  locale:
                    unicodeLocaleKeys:
                    - unicodeLocaleKeys
                    - unicodeLocaleKeys
                    country: country
                    displayName: displayName
                    iso3Language: iso3Language
                    language: language
                    displayVariant: displayVariant
                    iso3Country: iso3Country
                    displayLanguage: displayLanguage
                    script: script
                    unicodeLocaleAttributes:
                    - unicodeLocaleAttributes
                    - unicodeLocaleAttributes
                    displayCountry: displayCountry
                    variant: variant
                    extensionKeys:
                    - extensionKeys
                    - extensionKeys
                    displayScript: displayScript
                level:
                  localizedName: localizedName
                  resourceBundleName: resourceBundleName
                  name: name
                resourceBundleName: resourceBundleName
                useParentHandlers: true
                handlers:
                - filter: "{}"
                  formatter: "{}"
                  errorManager: "{}"
                  level:
                    localizedName: localizedName
                    resourceBundleName: resourceBundleName
                    name: name
                  encoding: encoding
                - filter: "{}"
                  formatter: "{}"
                  errorManager: "{}"
                  level:
                    localizedName: localizedName
                    resourceBundleName: resourceBundleName
                    name: name
                  encoding: encoding
                name: name
              description: description
              started: true
              connectorService:
                stopped: true
                clientProtocols:
                - defaultPort: 6
                  name: name
                  schemeName: schemeName
                  description: description
                  technicalName: technicalName
                  version: version
                  confidential: true
                - defaultPort: 6
                  name: name
                  schemeName: schemeName
                  description: description
                  technicalName: technicalName
                  version: version
                  confidential: true
                context: null
                started: true
                serverProtocols:
                - defaultPort: 6
                  name: name
                  schemeName: schemeName
                  description: description
                  technicalName: technicalName
                  version: version
                  confidential: true
                - defaultPort: 6
                  name: name
                  schemeName: schemeName
                  description: description
                  technicalName: technicalName
                  version: version
                  confidential: true
                enabled: true
              services:
              - null
              - null
              outboundRoot: null
              decoderService:
                stopped: true
                context: null
                started: true
                enabled: true
              metadataService:
                allLanguageExtensionNames:
                - allLanguageExtensionNames
                - allLanguageExtensionNames
                stopped: true
                defaultEncoding:
                  parent:
                    parent: null
                    name: name
                    description: description
                  name: name
                  description: description
                allExtensionNames:
                - allExtensionNames
                - allExtensionNames
                started: true
                allEncodingExtensionNames:
                - allEncodingExtensionNames
                - allEncodingExtensionNames
                enabled: true
                allCharacterSetExtensionNames:
                - allCharacterSetExtensionNames
                - allCharacterSetExtensionNames
                defaultLanguage:
                  parent: null
                  name: name
                  description: description
                  subTags:
                  - subTags
                  - subTags
                  primaryTag: primaryTag
                defaultMediaType:
                  concrete: true
                  parent: null
                  name: name
                  description: description
                  subType: subType
                  mainType: mainType
                  parameters:
                  - name: name
                    value: value
                  - name: name
                    value: value
                defaultCharacterSet:
                  parent:
                    parent: null
                    name: name
                    description: description
                  name: name
                  description: description
                context: null
                allMediaTypeExtensionNames:
                - allMediaTypeExtensionNames
                - allMediaTypeExtensionNames
              tunnelService:
                extensionsTunnel: true
                preferencesTunnel: true
                userAgentTunnel: true
                stopped: true
                languageParameter: languageParameter
                queryTunnel: true
                methodParameter: methodParameter
                started: true
                enabled: true
                characterSetParameter: characterSetParameter
                methodHeader: methodHeader
                encodingParameter: encodingParameter
                methodTunnel: true
                context: null
                headersTunnel: true
                mediaTypeParameter: mediaTypeParameter
              application: null
              rangeService:
                stopped: true
                context: null
                started: true
                enabled: true
              statusService:
                converterService:
                  stopped: true
                  context: null
                  started: true
                  enabled: true
                stopped: true
                metadataService:
                  allLanguageExtensionNames:
                  - allLanguageExtensionNames
                  - allLanguageExtensionNames
                  stopped: true
                  defaultEncoding:
                    parent:
                      parent: null
                      name: name
                      description: description
                    name: name
                    description: description
                  allExtensionNames:
                  - allExtensionNames
                  - allExtensionNames
                  started: true
                  allEncodingExtensionNames:
                  - allEncodingExtensionNames
                  - allEncodingExtensionNames
                  enabled: true
                  allCharacterSetExtensionNames:
                  - allCharacterSetExtensionNames
                  - allCharacterSetExtensionNames
                  defaultLanguage:
                    parent: null
                    name: name
                    description: description
                    subTags:
                    - subTags
                    - subTags
                    primaryTag: primaryTag
                  defaultMediaType:
                    concrete: true
                    parent: null
                    name: name
                    description: description
                    subType: subType
                    mainType: mainType
                    parameters:
                    - name: name
                      value: value
                    - name: name
                      value: value
                  defaultCharacterSet:
                    parent:
                      parent: null
                      name: name
                      description: description
                    name: name
                    description: description
                  context: null
                  allMediaTypeExtensionNames:
                  - allMediaTypeExtensionNames
                  - allMediaTypeExtensionNames
                contactEmail: contactEmail
                homeRef:
                  userInfo: userInfo
                  schemeProtocol:
                    defaultPort: 6
                    name: name
                    schemeName: schemeName
                    description: description
                    technicalName: technicalName
                    version: version
                    confidential: true
                  queryAsForm:
                  - name: name
                    value: value
                  - name: name
                    value: value
                  matrixAsForm:
                  - name: name
                    value: value
                  - name: name
                    value: value
                  hostIdentifier: hostIdentifier
                  scheme: scheme
                  extensionsAsArray:
                  - extensionsAsArray
                  - extensionsAsArray
                  relativeRef: null
                  matrix: matrix
                  lastSegment: lastSegment
                  segments:
                  - segments
                  - segments
                  path: path
                  hierarchical: true
                  hostDomain: hostDomain
                  relativePart: relativePart
                  hostPort: 0
                  identifier: identifier
                  targetRef: null
                  opaque: true
                  remainingPart: remainingPart
                  query: query
                  schemeSpecificPart: schemeSpecificPart
                  hierarchicalPart: hierarchicalPart
                  baseRef: null
                  parentRef: null
                  fragment: fragment
                  extensions: extensions
                  absolute: true
                  authority: authority
                  relative: true
                context: null
                started: true
                connegService:
                  stopped: true
                  context: null
                  started: true
                  strict: true
                  enabled: true
                overwriting: true
                enabled: true
              context: null
              name: name
              debugging: true
              inboundRoot: null
              taskService:
                shutdownAllowed: true
                stopped: true
                context: null
                corePoolSize: 1
                started: true
                enabled: true
                terminated: true
                shutdown: true
                daemon: true
              connegService:
                stopped: true
                context: null
                started: true
                strict: true
                enabled: true
            author: author
            logger:
              filter: "{}"
              parent: null
              resourceBundle:
                baseBundleName: baseBundleName
                keys: "{}"
                locale:
                  unicodeLocaleKeys:
                  - unicodeLocaleKeys
                  - unicodeLocaleKeys
                  country: country
                  displayName: displayName
                  iso3Language: iso3Language
                  language: language
                  displayVariant: displayVariant
                  iso3Country: iso3Country
                  displayLanguage: displayLanguage
                  script: script
                  unicodeLocaleAttributes:
                  - unicodeLocaleAttributes
                  - unicodeLocaleAttributes
                  displayCountry: displayCountry
                  variant: variant
                  extensionKeys:
                  - extensionKeys
                  - extensionKeys
                  displayScript: displayScript
              level:
                localizedName: localizedName
                resourceBundleName: resourceBundleName
                name: name
              resourceBundleName: resourceBundleName
              useParentHandlers: true
              handlers:
              - filter: "{}"
                formatter: "{}"
                errorManager: "{}"
                level:
                  localizedName: localizedName
                  resourceBundleName: resourceBundleName
                  name: name
                encoding: encoding
              - filter: "{}"
                formatter: "{}"
                errorManager: "{}"
                level:
                  localizedName: localizedName
                  resourceBundleName: resourceBundleName
                  name: name
                encoding: encoding
              name: name
            context: null
            name: name
            description: description
            started: true
          logger:
            filter: "{}"
            parent: null
            resourceBundle:
              baseBundleName: baseBundleName
              keys: "{}"
              locale:
                unicodeLocaleKeys:
                - unicodeLocaleKeys
                - unicodeLocaleKeys
                country: country
                displayName: displayName
                iso3Language: iso3Language
                language: language
                displayVariant: displayVariant
                iso3Country: iso3Country
                displayLanguage: displayLanguage
                script: script
                unicodeLocaleAttributes:
                - unicodeLocaleAttributes
                - unicodeLocaleAttributes
                displayCountry: displayCountry
                variant: variant
                extensionKeys:
                - extensionKeys
                - extensionKeys
                displayScript: displayScript
            level:
              localizedName: localizedName
              resourceBundleName: resourceBundleName
              name: name
            resourceBundleName: resourceBundleName
            useParentHandlers: true
            handlers:
            - filter: "{}"
              formatter: "{}"
              errorManager: "{}"
              level:
                localizedName: localizedName
                resourceBundleName: resourceBundleName
                name: name
              encoding: encoding
            - filter: "{}"
              formatter: "{}"
              errorManager: "{}"
              level:
                localizedName: localizedName
                resourceBundleName: resourceBundleName
                name: name
              encoding: encoding
            name: name
          attributes:
            key: "{}"
          defaultEnroler: "{}"
          parameters:
          - name: name
            value: value
          - name: name
            value: value
          defaultVerifier: "{}"
        started: true
        enabled: true
      properties:
        context:
          $ref: '#/components/schemas/Context'
        enabled:
          type: boolean
        started:
          type: boolean
        stopped:
          type: boolean
      type: object
    ShsSubscription:
      example:
        updateDate: 2000-01-23T04:56:07.000+00:00
        shsSubscriptionType: BUSINESS
        gracePeriodWarningEmailSent: true
        state: ACTIVE
        type: B2C
        creationDate: 2000-01-23T04:56:07.000+00:00
        isGracePeriodWarningDismissed: true
        isInGracePeriod: true
        expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        type:
          enum:
          - B2C
          - B2B
          type: string
        state:
          enum:
          - ACTIVE
          - INACTIVE
          - CANCELLED
          - EXPIRED
          - ON_HOLD
          - PENDING
          - PENDING_CANCEL
          type: string
        shsSubscriptionType:
          enum:
          - BUSINESS
          - STANDARD
          - BUSINESS_PLUS
          - API_ONLY
          type: string
        updateDate:
          format: date-time
          type: string
        creationDate:
          format: date-time
          type: string
        expirationDate:
          format: date-time
          type: string
        isInGracePeriod:
          type: boolean
        isGracePeriodWarningDismissed:
          type: boolean
        gracePeriodWarningEmailSent:
          type: boolean
      type: object
    Smartlock:
      example:
        updateDate: 2000-01-23T04:56:07.000+00:00
        box: true
        type: 1
        error: error
        authId: 5
        serverState: 0
        adminPinState: 0
        keyturner: true
        smartdoorAdvancedConfig:
          unlatchDuration: 1
          doubleButtonPressAction: 4
          automaticBatteryTypeDetection: true
          autoLock: true
          lngTimeout: 0
          autoLockTimeout: 0
          operationId: operationId
          buzzerVolume: 4
          supportedBatteryTypes:
          - 7
          - 7
          singleButtonPressAction: 6
          batteryType: 9
        operationId: operationId
        hardwareVersion: 3
        webConfig:
          dismissedLiftUpHandleWarning:
          - 6
          - 6
          batteryWarningPerMailEnabled: true
        state:
          doorState: 154
          ringToOpenTimer: 54077
          keypadBatteryCritical: true
          trigger: 4
          ringToOpenEnd: 2000-01-23T04:56:07.000+00:00
          batteryCritical: true
          mode: 3
          lastAction: 2
          batteryCharge: 48
          operationId: operationId
          state: 13
          doorsensorBatteryCritical: true
          batteryCharging: true
          nightMode: true
        firmwareVersion: 4
        previousSubscriptions:
        - updateDate: 2000-01-23T04:56:07.000+00:00
          shsSubscriptionType: BUSINESS
          gracePeriodWarningEmailSent: true
          state: ACTIVE
          type: B2C
          creationDate: 2000-01-23T04:56:07.000+00:00
          isGracePeriodWarningDismissed: true
          isInGracePeriod: true
          expirationDate: 2000-01-23T04:56:07.000+00:00
        - updateDate: 2000-01-23T04:56:07.000+00:00
          shsSubscriptionType: BUSINESS
          gracePeriodWarningEmailSent: true
          state: ACTIVE
          type: B2C
          creationDate: 2000-01-23T04:56:07.000+00:00
          isGracePeriodWarningDismissed: true
          isInGracePeriod: true
          expirationDate: 2000-01-23T04:56:07.000+00:00
        openerAdvancedConfig:
          soundRto: 7
          electricStrikeDelay: 7
          soundCm: 3
          automaticBatteryTypeDetection: true
          soundRing: 4
          autoUpdateEnabled: true
          soundOpen: 8
          disableRtoAfterRing: true
          soundLevel: 7
          busModeSwitch: 3
          intercomId: 6
          electricStrikeDuration: 0
          rtoTimeout: 7
          doubleButtonPressAction: 3
          operationId: operationId
          doorbellSuppression: 6
          doorbellSuppressionDuration: 0
          randomElectricStrikeDelay: true
          shortCircuitDuration: 3
          soundConfirmation: 3
          singleButtonPressAction: 5
          batteryType: 4
        lmType: 5
        virtualDevice: true
        creationDate: 2000-01-23T04:56:07.000+00:00
        smartlockId: 0
        accountId: 6
        currentSubscription:
          updateDate: 2000-01-23T04:56:07.000+00:00
          shsSubscriptionType: BUSINESS
          gracePeriodWarningEmailSent: true
          state: ACTIVE
          type: B2C
          creationDate: 2000-01-23T04:56:07.000+00:00
          isGracePeriodWarningDismissed: true
          isInGracePeriod: true
          expirationDate: 2000-01-23T04:56:07.000+00:00
        smartDoor: true
        opener: true
        advancedConfig:
          detachedCylinder: true
          unlatchDuration: 9
          unlockedToLockedTransitionOffsetDegrees: 6
          lockedPositionOffsetDegrees: 2
          enableSlowSpeedDuringNightmode: true
          automaticBatteryTypeDetection: true
          autoLock: true
          motorSpeed: 5
          autoUpdateEnabled: true
          unlockedPositionOffsetDegrees: 1
          doubleButtonPressAction: 8
          lngTimeout: 9
          autoLockTimeout: 6
          operationId: operationId
          singleLockedPositionOffsetDegrees: 3
          totalDegrees: 6
          singleButtonPressAction: 6
          batteryType: 6
        name: name
        mountingVariant: 8
        region: 1
        favorite: true
        config:
          keypadPaired: true
          daylightSavingMode: 4
          latitude: 2.302136
          fobPaired: true
          keypad2Paired: true
          ledEnabled: true
          pairingEnabled: true
          timezoneOffset: 2
          fobAction2: 0
          buttonEnabled: true
          fobAction1: 5
          operationId: operationId
          ledBrightness: 3
          longitude: 7.0614014
          fobAction3: 0
          deviceType: 5
          singleLock: true
          capabilities: 1
          operatingMode: 1
          homekitState: 2
          liftUpHandle: true
          advertisingMode: 2
          matterState: 0
          productVariant: 2
          name: name
          timezoneId: 22
          wifiEnabled: true
          autoUnlatch: true
      properties:
        smartlockId:
          description: The smartlock id
          format: int64
          type: integer
        accountId:
          description: The account id
          format: int32
          type: integer
        type:
          description: "The type: 0 .. keyturner, 1 .. box, 2 .. opener, 3 .. smartdoor,\
            \ 4 .. smartlock 3.0/4. Gen"
          format: int32
          type: integer
        lmType:
          description: "The lock mechanism used in the smart door lock: 1 .. MyEVO,\
            \ 2 .. KFV Genius (only for type = 3)"
          format: int32
          type: integer
        authId:
          description: The authorization id
          format: int32
          type: integer
        name:
          description: The name of the smartlock
          type: string
        favorite:
          description: The favorite flag
          type: boolean
        config:
          $ref: '#/components/schemas/Smartlock.Config'
        advancedConfig:
          $ref: '#/components/schemas/Smartlock.AdvancedConfig'
        openerAdvancedConfig:
          $ref: '#/components/schemas/Smartlock.OpenerAdvancedConfig'
        smartdoorAdvancedConfig:
          $ref: '#/components/schemas/Smartlock.SmartdoorAdvancedConfig'
        webConfig:
          $ref: '#/components/schemas/Smartlock.WebConfig'
        state:
          $ref: '#/components/schemas/Smartlock.State'
        firmwareVersion:
          description: The firmware version
          format: int32
          readOnly: true
          type: integer
        hardwareVersion:
          description: The hardware version
          format: int32
          readOnly: true
          type: integer
        operationId:
          description: The operation id - if set it's locked for another operation
          readOnly: true
          type: string
        serverState:
          description: "The server state: 0 .. ok, 1 .. unregistered, 2 .. auth uuid\
            \ invalid, 3 .. auth invalid, 4 .. offline"
          format: int32
          maximum: 4
          minimum: 0
          type: integer
        adminPinState:
          description: "The admin pin state: 0 .. ok, 1 .. missing, 2 .. invalid"
          format: int32
          maximum: 2
          minimum: 0
          type: integer
        virtualDevice:
          description: The flag indicating a virtual Smart Lock
          readOnly: true
          type: boolean
        creationDate:
          description: The creation date
          format: date-time
          type: string
        updateDate:
          description: The update date
          format: date-time
          type: string
        error:
          description: "In case of any error, it contains the error message"
          type: string
        previousSubscriptions:
          description: Previous Subscriptions
          items:
            $ref: '#/components/schemas/ShsSubscription'
          readOnly: true
          type: array
        currentSubscription:
          $ref: '#/components/schemas/ShsSubscription'
        region:
          description: The region
          format: int32
          type: integer
        mountingVariant:
          description: The mounting variant
          format: int32
          type: integer
        opener:
          type: boolean
        box:
          type: boolean
        smartDoor:
          type: boolean
        keyturner:
          type: boolean
      required:
      - accountId
      - adminPinState
      - authId
      - favorite
      - name
      - serverState
      - smartlockId
      - type
      type: object
    Smartlock.AdvancedConfig:
      example:
        detachedCylinder: true
        unlatchDuration: 9
        unlockedToLockedTransitionOffsetDegrees: 6
        lockedPositionOffsetDegrees: 2
        enableSlowSpeedDuringNightmode: true
        automaticBatteryTypeDetection: true
        autoLock: true
        motorSpeed: 5
        autoUpdateEnabled: true
        unlockedPositionOffsetDegrees: 1
        doubleButtonPressAction: 8
        lngTimeout: 9
        autoLockTimeout: 6
        operationId: operationId
        singleLockedPositionOffsetDegrees: 3
        totalDegrees: 6
        singleButtonPressAction: 6
        batteryType: 6
      properties:
        lngTimeout:
          description: Timeout in seconds for lock ‘n’ go
          enum:
          - 5
          - 10
          - 15
          - 20
          - 30
          - 45
          - 60
          format: int32
          type: integer
        singleButtonPressAction:
          description: "The desired action, if the button is pressed once: 0 .. no\
            \ action, 1 .. intelligent, 2 .. unlock, 3 .. lock, 4 .. unlatch, 5 ..\
            \ lock 'n' go, 6 .. show status"
          format: int32
          type: integer
        doubleButtonPressAction:
          description: "The desired action, if the button is pressed twice: 0 .. no\
            \ action, 1 .. intelligent, 2 .. unlock, 3 .. lock, 4 .. unlatch, 5 ..\
            \ lock 'n' go, 6 .. show status"
          format: int32
          type: integer
        automaticBatteryTypeDetection:
          description: Flag that indicates if the automatic detection of the battery
            type is enabled
          type: boolean
        unlatchDuration:
          description: Duration in seconds for holding the latch in unlatched position
          enum:
          - 1
          - 3
          - 5
          - 7
          - 10
          - 15
          - 20
          - 30
          format: int32
          type: integer
        operationId:
          description: The operation id - if set it's locked for another operation
          readOnly: true
          type: string
        totalDegrees:
          description: The absolute total position in degrees that has been reached
            during calibration
          format: int32
          readOnly: true
          type: integer
        singleLockedPositionOffsetDegrees:
          description: Offset that alters the single locked position
          format: int32
          type: integer
        unlockedToLockedTransitionOffsetDegrees:
          description: Offset that alters the position where transition from unlocked
            to locked happens
          format: int32
          type: integer
        unlockedPositionOffsetDegrees:
          description: Offset that alters the unlocked position
          format: int32
          type: integer
        lockedPositionOffsetDegrees:
          description: Offset that alters the locked position
          format: int32
          type: integer
        detachedCylinder:
          description: Flag that indicates that the inner side of the used cylinder
            is detached from the outer side
          type: boolean
        batteryType:
          description: "The type of the batteries present in the smart lock: 0 ..\
            \ alkali, 1 .. accumulator, 2 .. lithium"
          format: int32
          type: integer
        autoLock:
          description: "New separate flag with FW >= 2.7.8/1.9.1: The Auto Lock feature\
            \ automatically locks your door when it has been unlocked for a certain\
            \ period of time"
          type: boolean
        autoLockTimeout:
          description: "Seconds until the smart lock relocks itself after it has been\
            \ unlocked. FW < 2.7.8/1.9.1: No auto relock if value is 0, FW >= 2.7.8/1.9.1:\
            \ has to be >=2 (defaults to 2 for values <2 if autoLock is set to true)"
          format: int32
          type: integer
        autoUpdateEnabled:
          description: Flag that indicates if available firmware updates for the deviceshould
            be installed automatically
          type: boolean
        motorSpeed:
          description: "Field used for setting the motor speed. 0x00 ... standard,\
            \ 0x01 ... fast, 0x02 ... slow"
          format: int32
          type: integer
        enableSlowSpeedDuringNightmode:
          description: Flag indicating if the slow speed shall be applied during NightMode
          type: boolean
      required:
      - batteryType
      - lockedPositionOffsetDegrees
      - singleLockedPositionOffsetDegrees
      - totalDegrees
      - unlockedPositionOffsetDegrees
      type: object
    Smartlock.Config:
      example:
        keypadPaired: true
        daylightSavingMode: 4
        latitude: 2.302136
        fobPaired: true
        keypad2Paired: true
        ledEnabled: true
        pairingEnabled: true
        timezoneOffset: 2
        fobAction2: 0
        buttonEnabled: true
        fobAction1: 5
        operationId: operationId
        ledBrightness: 3
        longitude: 7.0614014
        fobAction3: 0
        deviceType: 5
        singleLock: true
        capabilities: 1
        operatingMode: 1
        homekitState: 2
        liftUpHandle: true
        advertisingMode: 2
        matterState: 0
        productVariant: 2
        name: name
        timezoneId: 22
        wifiEnabled: true
        autoUnlatch: true
      properties:
        name:
          description: The name of the smartlock for new users
          type: string
        latitude:
          description: The latitude of the smartlock position
          format: float
          type: number
        longitude:
          description: The longitude of the smartlock position
          format: float
          type: number
        capabilities:
          description: "The capabilities indicate whether door opening via app is\
            \ possible, RTO is possible or both: 0 .. only door opening possible,\
            \ 1 .. both possible, 2 .. only RTO possible (only for type=2)"
          format: int32
          maximum: 2
          minimum: 0
          readOnly: true
          type: integer
        autoUnlatch:
          description: True if the door should be unlatched on unlocking (knob) (only
            for type=1 and type=3)
          type: boolean
        liftUpHandle:
          description: "True if the door has a lift up handle, which is required to\
            \ be lifted up to lock the door"
          type: boolean
        pairingEnabled:
          description: True if the pairing is allowed via the smartlock button
          type: boolean
        buttonEnabled:
          description: True if the button on the smartlock is enabled
          type: boolean
        ledEnabled:
          description: True if the LED on the smartlock is enabled
          type: boolean
        ledBrightness:
          description: "The brightness of the LED: 0 .. off, 5 .. max (only for type=1\
            \ and type=3)"
          format: int32
          type: integer
        timezoneOffset:
          description: "[deprecated] The timezone offset (in minutes)"
          format: int32
          type: integer
        daylightSavingMode:
          description: "[deprecated] The daylight saving mode: 0 .. off, 1 .. european"
          format: int32
          type: integer
        fobPaired:
          description: True if a fob is paired with the smartlock
          readOnly: true
          type: boolean
        fobAction1:
          description: "The fob action if button is pressed once: type=0/3/4: 0 ..\
            \ none, 1 .. unlock, 2 .. lock, 3 .. lock 'n' go, 4 .. intelligent (lock/unlocked\
            \ based on the current state); type=2: 0 .. none, 1 .. toggle ring to\
            \ open, 2 .. activate ring to open, 3 .. deactivate ring to open, 7 ..\
            \ open (electric strike actuation), 8 .. ring"
          format: int32
          maximum: 8
          minimum: 0
          readOnly: true
          type: integer
        fobAction2:
          description: "The fob action if button is pressed twice: type=0/3/4: 0 ..\
            \ none, 1 .. unlock, 2 .. lock, 3 .. lock 'n' go, 4 .. intelligent (lock/unlocked\
            \ based on the current state); type=2: 0 .. none, 1 .. toggle ring to\
            \ open, 2 .. activate ring to open, 3 .. deactivate ring to open, 7 ..\
            \ open (electric strike actuation), 8 .. ring"
          format: int32
          maximum: 8
          minimum: 0
          readOnly: true
          type: integer
        fobAction3:
          description: "The fob action if button is pressed 3 times: type=0/3/4: 0\
            \ .. none, 1 .. unlock, 2 .. lock, 3 .. lock 'n' go, 4 .. intelligent\
            \ (lock/unlocked based on the current state); type=2: 0 .. none, 1 ..\
            \ toggle ring to open, 2 .. activate ring to open, 3 .. deactivate ring\
            \ to open, 7 .. open (electric strike actuation), 8 .. ring"
          format: int32
          maximum: 8
          minimum: 0
          readOnly: true
          type: integer
        singleLock:
          description: True if the smartlock should only lock once (instead of twice)
            (only for type=1)
          type: boolean
        operatingMode:
          description: "The operating mode of the opener (only for type=2): 0x00 ..\
            \ generic door opener, 0x01 .. analogue intercom, 0x02 .. digital intercom,\
            \ 0x03 .. digital intercom Siedle, 0x04 .. digital intercom TCS, 0x05\
            \ .. digital intercom Bticino, 0x06 .. analog intercom Siedle HTS, 0x07\
            \ .. digital intercom STR, 0x08 .. digital intercom Ritto, 0x09 .. digital\
            \ intercom Fermax, 0x0A .. digital intercom Comelit, 0x0B .. digital intercom\
            \ Urmet BiBus, 0x0C .. digital intercom Urmet 2Voice, 0x0D .. digital\
            \ intercom Golmar, 0x0E .. digital intercom SKS, 0x0F .. digital intercom\
            \ Spare"
          format: int32
          readOnly: true
          type: integer
        advertisingMode:
          description: "The advertising mode (battery saving): 0 .. automatic, 1 ..\
            \ normal, 2 .. slow, 3 .. slowest"
          format: int32
          maximum: 3
          minimum: 0
          type: integer
        keypadPaired:
          description: True if a keypad is paired with the smartlock
          readOnly: true
          type: boolean
        keypad2Paired:
          description: True if a keypad 2 is paired with the smartlock
          readOnly: true
          type: boolean
        homekitState:
          description: "The homekit state: 0 .. unavailable, 1 .. disabled, 2 .. enabled,\
            \ 3 .. enabled & paired"
          format: int32
          maximum: 3
          minimum: 0
          readOnly: true
          type: integer
        matterState:
          description: "The matter state: 0 .. not available, 1 .. disabled and no\
            \ certificate available, 2 .. disabled, 3 .. enabled, 4 .. enabled & paired"
          format: int32
          maximum: 4
          minimum: 0
          readOnly: true
          type: integer
        timezoneId:
          description: The timezone id (check https://developer.nuki.io for ids)
          format: int32
          maximum: 45
          minimum: 0
          type: integer
        deviceType:
          description: The device type of a Nuki device
          format: int32
          readOnly: true
          type: integer
        wifiEnabled:
          description: Flag that indicates if the devices internal WIFI module can
            be used
          readOnly: true
          type: boolean
        operationId:
          description: The operation id - if set it's locked for another operation
          readOnly: true
          type: string
        productVariant:
          description: "The product variant for Smartlock 5: 1 .. Go, 2 .. Pro, 3\
            \ .. Ultra"
          format: int32
          maximum: 3
          minimum: 1
          readOnly: true
          type: integer
      required:
      - advertisingMode
      - latitude
      - longitude
      - name
      - singleLock
      - timezoneId
      - timezoneOffset
      type: object
    Smartlock.OpenerAdvancedConfig:
      example:
        soundRto: 7
        electricStrikeDelay: 7
        soundCm: 3
        automaticBatteryTypeDetection: true
        soundRing: 4
        autoUpdateEnabled: true
        soundOpen: 8
        disableRtoAfterRing: true
        soundLevel: 7
        busModeSwitch: 3
        intercomId: 6
        electricStrikeDuration: 0
        rtoTimeout: 7
        doubleButtonPressAction: 3
        operationId: operationId
        doorbellSuppression: 6
        doorbellSuppressionDuration: 0
        randomElectricStrikeDelay: true
        shortCircuitDuration: 3
        soundConfirmation: 3
        singleButtonPressAction: 5
        batteryType: 4
      properties:
        intercomId:
          description: The database ID of the connected intercom
          format: int32
          readOnly: true
          type: integer
        busModeSwitch:
          description: Method to switch between data and analogue mode
          enum:
          - 0
          - 1
          format: int32
          readOnly: true
          type: integer
        shortCircuitDuration:
          description: Duration of the short circuit for BUS mode switching in ms
          format: int32
          type: integer
        electricStrikeDelay:
          description: Delay of electric strike activation in ms after lock action
            3 'electric strike actuation'
          format: int32
          type: integer
        randomElectricStrikeDelay:
          description: Random electricStrikeDelay (range 3000 - 7000 ms) in order
            to simulate a person inside actuating the electric strike
          type: boolean
        electricStrikeDuration:
          description: Duration in ms of electric strike actuation lock action 3 'electric
            strike actuation'
          format: int32
          type: integer
        disableRtoAfterRing:
          description: Flag to disable RTO after ring
          type: boolean
        rtoTimeout:
          description: "After this period of time in minutes, RTO gets deactivated\
            \ automatically"
          format: int32
          type: integer
        doorbellSuppression:
          description: "The doorbell supression bitmask: first bit (least significant)\
            \ .. whenever the doorbell rings and CM and RTO are inactive, second bit\
            \ .. RTO is active, third bit .. CM is active"
          format: int32
          type: integer
        doorbellSuppressionDuration:
          description: Duration in ms of doorbell suppression (only in Operating mode
            2 'digital Intercom')
          format: int32
          type: integer
        soundRing:
          description: "The sound for ring: 0 .. no sound, 1 .. Sound1, 2 .. Sound2,\
            \ 3 .. Sound3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        soundOpen:
          description: "The sound for open: 0 .. no sound, 1 .. Sound1, 2 .. Sound2,\
            \ 3 .. Sound3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        soundRto:
          description: "The sound for RTO: 0 .. no sound, 1 .. Sound1, 2 .. Sound2,\
            \ 3 .. Sound3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        soundCm:
          description: "The sound for CM: 0 .. no sound, 1 .. Sound1, 2 .. Sound2,\
            \ 3 .. Sound3"
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        soundConfirmation:
          description: "The sound confirmation: 0 .. no sound, 1 .. sound"
          enum:
          - 0
          - 1
          format: int32
          type: integer
        soundLevel:
          description: The sound level
          format: int32
          type: integer
        singleButtonPressAction:
          description: "The desired action, if the button is pressed once: 0 .. no\
            \ action, 1 .. toggle RTO, 2 .. activate RTO, 3 .. deactivate RTO, 4 ..\
            \ toggle CM, 5 .. activate CM, 6 .. deactivate CM, 7 .. open"
          format: int32
          type: integer
        doubleButtonPressAction:
          description: "The desired action, if the button is pressed twice: 0 .. no\
            \ action, 1 .. toggle RTO, 2 .. activate RTO, 3 .. deactivate RTO, 4 ..\
            \ toggle CM, 5 .. activate CM, 6 .. deactivate CM, 7 .. open"
          format: int32
          type: integer
        batteryType:
          description: "The type of the batteries present in the smart lock: 0 ..\
            \ alkali, 1 .. accumulator, 2 .. lithium, 3 .. fixed"
          format: int32
          type: integer
        automaticBatteryTypeDetection:
          description: Flag that indicates if the automatic detection of the battery
            type is enabled
          type: boolean
        autoUpdateEnabled:
          description: Flag that indicates if available firmware updates for the deviceshould
            be installed automatically
          type: boolean
        operationId:
          description: The operation id - if set it's locked for another operation
          readOnly: true
          type: string
      required:
      - batteryType
      - busModeSwitch
      - disableRtoAfterRing
      - doorbellSuppression
      - doorbellSuppressionDuration
      - doubleButtonPressAction
      - electricStrikeDelay
      - electricStrikeDuration
      - intercomId
      - randomElectricStrikeDelay
      - rtoTimeout
      - shortCircuitDuration
      - singleButtonPressAction
      - soundCm
      - soundConfirmation
      - soundLevel
      - soundOpen
      - soundRing
      - soundRto
      type: object
    Smartlock.SmartdoorAdvancedConfig:
      example:
        unlatchDuration: 1
        doubleButtonPressAction: 4
        automaticBatteryTypeDetection: true
        autoLock: true
        lngTimeout: 0
        autoLockTimeout: 0
        operationId: operationId
        buzzerVolume: 4
        supportedBatteryTypes:
        - 7
        - 7
        singleButtonPressAction: 6
        batteryType: 9
      properties:
        lngTimeout:
          description: Timeout in seconds for lock ‘n’ go
          enum:
          - 5
          - 10
          - 15
          - 20
          - 30
          - 45
          - 60
          format: int32
          type: integer
        singleButtonPressAction:
          description: "The desired action, if the button is pressed once: 0 .. no\
            \ action, 1 .. intelligent, 2 .. unlock, 3 .. lock, 4 .. unlatch, 5 ..\
            \ lock 'n' go, 6 .. show status"
          format: int32
          type: integer
        doubleButtonPressAction:
          description: "The desired action, if the button is pressed twice: 0 .. no\
            \ action, 1 .. intelligent, 2 .. unlock, 3 .. lock, 4 .. unlatch, 5 ..\
            \ lock 'n' go, 6 .. show status"
          format: int32
          type: integer
        automaticBatteryTypeDetection:
          description: Flag that indicates if the automatic detection of the battery
            type is enabled
          type: boolean
        unlatchDuration:
          description: Duration in seconds for holding the latch in unlatched position
          enum:
          - 1
          - 3
          - 5
          - 7
          - 10
          - 15
          - 20
          - 30
          format: int32
          type: integer
        operationId:
          description: The operation id - if set it's locked for another operation
          readOnly: true
          type: string
        buzzerVolume:
          description: "The volume of the buzzer: 0 .. off, 1 .. low, 2 .. normal"
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        supportedBatteryTypes:
          description: "Set of supported battery types: 0 .. alkali, 1 .. accumulator,\
            \ 2 .. lithium, 3 .. fixed, 254 .. automatic, 255 .. unknown"
          items:
            format: int32
            type: integer
          readOnly: true
          type: array
          uniqueItems: true
        batteryType:
          description: "The type of the batteries present in the smart lock: 0 ..\
            \ alkali, 1 .. accumulator, 2 .. lithium, 3 .. fixed, 255 .. unknown"
          format: int32
          type: integer
        autoLockTimeout:
          description: Seconds until the smart lock relocks itself after it has been
            unlocked. No auto relock if value is 0
          format: int32
          type: integer
        autoLock:
          description: The Auto Lock feature automatically locks your door when it
            has been unlocked for a certain period of time
          type: boolean
      required:
      - autoLock
      - batteryType
      type: object
    Smartlock.State:
      example:
        doorState: 154
        ringToOpenTimer: 54077
        keypadBatteryCritical: true
        trigger: 4
        ringToOpenEnd: 2000-01-23T04:56:07.000+00:00
        batteryCritical: true
        mode: 3
        lastAction: 2
        batteryCharge: 48
        operationId: operationId
        state: 13
        doorsensorBatteryCritical: true
        batteryCharging: true
        nightMode: true
      properties:
        mode:
          description: "The smartlock mode: 0 .. uninitialized, 1 .. pairing, 2 ..\
            \ door (default), 3 .. continuous (type=2 only), 4 .. maintenance, 5 ..\
            \ off-door charging"
          format: int32
          maximum: 4
          minimum: 0
          type: integer
        state:
          description: "The smartlock state: type=0/3/4: 0 .. uncalibrated, 1 .. locked,\
            \ 2 .. unlocking, 3 .. unlocked, 4 .. locking, 5 .. unlatched, 6 .. unlocked\
            \ (lock 'n' go), 7 .. unlatching, 224 .. Error wrong entry code, 225 ..\
            \ Error wrong Fingerprint, 254 .. motor blocked, 255 .. undefined; type=2:\
            \ 0 .. untrained, 1 .. online, 3 .. ring to open active, 5 .. open, 7\
            \ .. opening, 253 .. boot run, 255 .. undefined"
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        trigger:
          description: " The state trigger: 0 .. system, 1 .. manual, 2 .. button,\
            \ 3 .. automatic, 4 .. web (type=1 only), 5 .. app (type=1 only), 6 ..\
            \ continuous mode (type=2 only), 7 .. accessory (type=3 only)"
          format: int32
          maximum: 6
          minimum: 0
          type: integer
        lastAction:
          description: "The action: type=0/3/4: 1 .. unlock, 2 .. lock, 3 .. unlatch,\
            \ 4 .. lock 'n' go, 5 .. lock 'n' go with unlatch; type=1: 1 .. unlock;\
            \ type=2: 1 .. activate ring to open, 2 .. deactivate ring to open, 3\
            \ .. open (electric strike actuation)"
          format: int32
          maximum: 5
          minimum: 0
          type: integer
        batteryCritical:
          description: True if the battery state of the device is critical
          type: boolean
        batteryCharging:
          description: True if a Nuki battery pack in a Smart Lock is currently charging
          type: boolean
        batteryCharge:
          description: Remaining capacity of a Nuki battery pack in %
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        keypadBatteryCritical:
          description: True if the battery of a paired Keypad is critical (only available
            for supported devices)
          type: boolean
        doorsensorBatteryCritical:
          description: True if the battery of a paired doorsensor is critical (only
            available for supported devices)
          type: boolean
        doorState:
          description: "The door state: 0 .. unavailable/not paired, 1 .. deactivated,\
            \ 2 .. door closed, 3 .. door opened, 4 .. door state unknown, 5 .. calibrating,\
            \ 16 .. uncalibrated, 240 .. removed, 255 .. unknown"
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        ringToOpenTimer:
          description: "[deprecated] Remaining ring to open time; 0 if ring to open\
            \ is not active (type=2 only)"
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        ringToOpenEnd:
          description: End date of ring to open timeout; null if ring to open is not
            active (type=2 only)
          format: date-time
          type: string
        nightMode:
          description: True if night mode currently active
          type: boolean
        operationId:
          description: The operation id - if set it's locked for another operation
          readOnly: true
          type: string
      required:
      - batteryCritical
      - doorState
      - lastAction
      - mode
      - nightMode
      - ringToOpenTimer
      - state
      - trigger
      type: object
    Smartlock.WebConfig:
      example:
        dismissedLiftUpHandleWarning:
        - 6
        - 6
        batteryWarningPerMailEnabled: true
      properties:
        batteryWarningPerMailEnabled:
          description: "True if a battery warning is send via email, if null/not send,\
            \ the value is not being updated"
          type: boolean
        dismissedLiftUpHandleWarning:
          description: "Contains the account ids which have dismissed the lift up\
            \ handle warning, if null/not send, the value is not being updated. To\
            \ clear send a empty array []"
          items:
            format: int32
            type: integer
          type: array
      type: object
    SmartlockAction:
      example:
        action: 0
        option: 4
      properties:
        action:
          description: "The action: type=0/3/4: 1 .. unlock, 2 .. lock, 3 .. unlatch,\
            \ 4 .. lock 'n' go, 5 .. lock 'n' go with unlatch; type=1: 1 .. unlock;\
            \ type=2: 1 activate ring to open, 2 .. deactivate ring to open, 3 ..\
            \ open (electric strike actuation), 6 ... activate continuous mode, 7\
            \ ... deactivate continuous mode"
          format: int32
          maximum: 7
          minimum: 0
          type: integer
        option:
          description: "The option mask: 0 .. none, 2 .. force, 4 .. full lock"
          format: int32
          maximum: 7
          minimum: 0
          type: integer
      required:
      - action
      type: object
    SmartlockAdminPinUpdate:
      example:
        adminPin: 800
      properties:
        adminPin:
          description: The admin pin
          format: int32
          maximum: 9999
          minimum: 0
          type: integer
      required:
      - adminPin
      type: object
    SmartlockAuth:
      example:
        lockCount: 2
        updateDate: 2000-01-23T04:56:07.000+00:00
        code: 5
        remoteAllowed: true
        allowedUntilDate: 2000-01-23T04:56:07.000+00:00
        allowedFromDate: 2000-01-23T04:56:07.000+00:00
        lastActiveDate: 2000-01-23T04:56:07.000+00:00
        allowedUntilTime: 3
        type: 1
        allowedWeekDays: 89
        creationDate: 2000-01-23T04:56:07.000+00:00
        error: error
        authId: 1
        enabled: true
        fingerprints:
          key: fingerprints
        allowedFromTime: 9
        smartlockId: 0
        appId: 6
        name: name
        authTypeAsString: authTypeAsString
        operationId:
          date: 2000-01-23T04:56:07.000+00:00
          machineIdentifier: 1
          counter: 4
          time: 7
          processIdentifier: 1
          timestamp: 2
          timeSecond: 1
        id: id
        accountUserId: 6
      properties:
        id:
          description: The unique id for the smartlock authorization
          type: string
        smartlockId:
          description: The smartlock id
          format: int64
          type: integer
        accountUserId:
          description: The id of the linked account user
          format: int32
          type: integer
        authId:
          description: The smartlock authorization id
          format: int32
          type: integer
        code:
          description: The keypad code (only for type keypad)
          format: int32
          type: integer
        fingerprints:
          additionalProperties:
            type: string
          type: object
        type:
          description: "The type of the authorization: 0 .. app, 1 .. bridge, 2 ..\
            \ fob, 3 .. keypad, 13 .. keypad code, 14 .. z-key, 15 .. virtual"
          format: int32
          maximum: 2
          minimum: 0
          readOnly: true
          type: integer
        name:
          description: The name of the authorization (max 32 chars)
          type: string
        enabled:
          description: True if the auth is enabled
          type: boolean
        remoteAllowed:
          description: True if the auth has remote access
          type: boolean
        lockCount:
          description: The lock count
          format: int32
          type: integer
        allowedFromDate:
          description: The allowed from date
          format: date-time
          type: string
        allowedUntilDate:
          description: The allowed until date
          format: date-time
          type: string
        allowedWeekDays:
          description: "The allowed weekdays bitmask: 64 .. monday, 32 .. tuesday,\
            \ 16 .. wednesday, 8 .. thursday, 4 .. friday, 2 .. saturday, 1 .. sunday"
          format: int32
          maximum: 127
          minimum: 0
          type: integer
        allowedFromTime:
          description: The allowed from time (in minutes from midnight)
          format: int32
          type: integer
        allowedUntilTime:
          description: The allowed until time (in minutes from midnight)
          format: int32
          type: integer
        lastActiveDate:
          description: The last active date
          format: date-time
          type: string
        creationDate:
          description: The creation date
          format: date-time
          type: string
        updateDate:
          description: The update date
          format: date-time
          type: string
        operationId:
          $ref: '#/components/schemas/ObjectId'
        error:
          description: "In case of any error, it contains the error message"
          type: string
        appId:
          description: The ID of the Nuki App
          format: int32
          type: integer
        authTypeAsString:
          type: string
      required:
      - enabled
      - id
      - lockCount
      - name
      - remoteAllowed
      - smartlockId
      - type
      type: object
    SmartlockAuthCreate:
      example:
        smartActionsEnabled: true
        code: 2
        remoteAllowed: true
        allowedUntilDate: 2000-01-23T04:56:07.000+00:00
        name: name
        allowedFromDate: 2000-01-23T04:56:07.000+00:00
        allowedUntilTime: 1
        allowedWeekDays: 10
        type: 5
        allowedFromTime: 6
        accountUserId: 5
      properties:
        name:
          description: The name of the authorization (max 32 chars)
          type: string
        allowedFromDate:
          description: The allowed from date
          format: date-time
          type: string
        allowedUntilDate:
          description: The allowed until date
          format: date-time
          type: string
        allowedWeekDays:
          description: "The allowed weekdays bitmask: 64 .. monday, 32 .. tuesday,\
            \ 16 .. wednesday, 8 .. thursday, 4 .. friday, 2 .. saturday, 1 .. sunday"
          format: int32
          maximum: 127
          minimum: 0
          type: integer
        allowedFromTime:
          description: The allowed from time (in minutes from midnight)
          format: int32
          type: integer
        allowedUntilTime:
          description: The allowed until time (in minutes from midnight)
          format: int32
          type: integer
        accountUserId:
          description: The id of the linked account user (required if type is NOT
            13 .. keypad)
          format: int32
          type: integer
        remoteAllowed:
          description: True if the auth has remote access
          type: boolean
        smartActionsEnabled:
          description: The smart actions enabled flag
          type: boolean
        type:
          description: "The optional type of the auth 0 .. app (default), 2 .. fob,\
            \ 13 .. keypad"
          format: int32
          type: integer
        code:
          description: The code of the keypad authorization (only for keypad)
          format: int32
          type: integer
      required:
      - name
      - remoteAllowed
      type: object
    SmartlockAuthMultiUpdate:
      example:
        code: 5
        remoteAllowed: true
        allowedUntilDate: 2000-01-23T04:56:07.000+00:00
        name: name
        allowedFromDate: 2000-01-23T04:56:07.000+00:00
        allowedUntilTime: 1
        id: id
        allowedWeekDays: 10
        enabled: true
        allowedFromTime: 6
        accountUserId: 5
      properties:
        name:
          description: The name of the authorization (max 32 chars)
          type: string
        allowedFromDate:
          description: The allowed from date
          format: date-time
          type: string
        allowedUntilDate:
          description: The allowed until date
          format: date-time
          type: string
        allowedWeekDays:
          description: "The allowed weekdays bitmask: 64 .. monday, 32 .. tuesday,\
            \ 16 .. wednesday, 8 .. thursday, 4 .. friday, 2 .. saturday, 1 .. sunday"
          format: int32
          maximum: 127
          minimum: 0
          type: integer
        allowedFromTime:
          description: The allowed from time (in minutes from midnight)
          format: int32
          type: integer
        allowedUntilTime:
          description: The allowed until time (in minutes from midnight)
          format: int32
          type: integer
        accountUserId:
          description: The id of the linked account user
          format: int32
          type: integer
        enabled:
          description: True if the auth is enabled
          type: boolean
        remoteAllowed:
          description: True if the auth has remote access
          type: boolean
        code:
          description: The code of the keypad authorization (only for keypad)
          format: int32
          type: integer
        id:
          description: The unique id for the smartlock authorization
          type: string
      required:
      - id
      - name
      type: object
    SmartlockAuthUpdate:
      example:
        code: 5
        remoteAllowed: true
        allowedUntilDate: 2000-01-23T04:56:07.000+00:00
        name: name
        allowedFromDate: 2000-01-23T04:56:07.000+00:00
        allowedUntilTime: 1
        allowedWeekDays: 10
        enabled: true
        allowedFromTime: 6
        accountUserId: 5
      properties:
        name:
          description: The name of the authorization (max 32 chars)
          type: string
        allowedFromDate:
          description: The allowed from date
          format: date-time
          type: string
        allowedUntilDate:
          description: The allowed until date
          format: date-time
          type: string
        allowedWeekDays:
          description: "The allowed weekdays bitmask: 64 .. monday, 32 .. tuesday,\
            \ 16 .. wednesday, 8 .. thursday, 4 .. friday, 2 .. saturday, 1 .. sunday"
          format: int32
          maximum: 127
          minimum: 0
          type: integer
        allowedFromTime:
          description: The allowed from time (in minutes from midnight)
          format: int32
          type: integer
        allowedUntilTime:
          description: The allowed until time (in minutes from midnight)
          format: int32
          type: integer
        accountUserId:
          description: The id of the linked account user
          format: int32
          type: integer
        enabled:
          description: True if the auth is enabled
          type: boolean
        remoteAllowed:
          description: True if the auth has remote access
          type: boolean
        code:
          description: The code of the keypad authorization (only for keypad)
          format: int32
          type: integer
      required:
      - name
      type: object
    SmartlockAuthWithSharedKeyCreate:
      example:
        allowedUntilDate: 2000-01-23T04:56:07.000+00:00
        name: name
        allowedFromDate: 2000-01-23T04:56:07.000+00:00
        allowedUntilTime: 1
        allowedWeekDays: 10
        allowedFromTime: 6
        accountUserId: 5
      properties:
        name:
          description: The name of the authorization (max 32 chars)
          type: string
        allowedFromDate:
          description: The allowed from date
          format: date-time
          type: string
        allowedUntilDate:
          description: The allowed until date
          format: date-time
          type: string
        allowedWeekDays:
          description: "The allowed weekdays bitmask: 64 .. monday, 32 .. tuesday,\
            \ 16 .. wednesday, 8 .. thursday, 4 .. friday, 2 .. saturday, 1 .. sunday"
          format: int32
          maximum: 127
          minimum: 0
          type: integer
        allowedFromTime:
          description: The allowed from time (in minutes from midnight)
          format: int32
          type: integer
        allowedUntilTime:
          description: The allowed until time (in minutes from midnight)
          format: int32
          type: integer
        accountUserId:
          description: The id of the linked account user
          format: int32
          type: integer
      required:
      - name
      type: object
    SmartlockLog:
      example:
        deviceType: 6
        date: 2000-01-23T04:56:07.000+00:00
        trigger: 143
        ajarTimeout: 9
        source: 3
        error: error
        authId: authId
        autoUnlock: true
        smartlockId: 0
        openerLog:
          flagGeoFence: true
          activeRto: true
          activeCm: true
          source: 4
          flagDoorbellSuppression: true
          flagForce: true
        name: name
        action: 152
        id: id
        state: 59
        accountUserId: 1
      properties:
        id:
          description: The unique id for the smartlock log
          type: string
        smartlockId:
          description: The smartlock id
          format: int64
          type: integer
        deviceType:
          description: "The device type: 0 .. smartlock and box, 2 .. opener, 3 ..\
            \ smartdoor"
          enum:
          - 0
          - 2
          - 3
          format: int32
          type: integer
        accountUserId:
          description: The id of the linked account user
          format: int32
          type: integer
        authId:
          description: The id of the linked smartlock auth
          type: string
        name:
          description: The name
          type: string
        action:
          description: "The action: 1 .. unlock, 2 .. lock, 3 .. unlatch, 4 .. lock'n'go,\
            \ 5 .. lock'n'go with unlatch, 11 .. Restore reset to default setting,\
            \ 208 .. door warning ajar, 209 door warning status mismatch, 224 .. doorbell\
            \ recognition (only Opener), 240 .. door opened, 241 .. door closed, 242\
            \ .. door sensor jammed, 243 .. firmware update, 250 .. door log enabled,\
            \ 251 .. door log disabled, 252 .. initialization, 253 .. calibration,\
            \ 254 .. log enabled, 255 .. log disabled"
          format: int32
          maximum: 255
          minimum: 1
          type: integer
        trigger:
          description: "The trigger: 0 .. system, 1 .. manual, 2 .. button, 3 .. automatic,\
            \ 4 .. web, 5 .. app, 6 .. auto lock, 7 .. accessory, 255 .. keypad"
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        state:
          description: "The completion state: 0 .. Success, 1 .. Motor blocked, 2\
            \ .. Canceled, 3 .. Too recent, 4 .. Busy, 5 .. Low motor voltage, 6 ..\
            \ Clutch failure, 7 .. Motor power failure, 8 .. Incomplete, 9 .. Rejected,\
            \ 10 .. Rejected night mode, 224 .. Invalid Code, 225 .. Invalid Fingerprint,\
            \ 226 .. Invalid NFC Tag, 254 .. Other error, 255 .. Unknown error"
          format: int32
          maximum: 255
          minimum: 1
          type: integer
        autoUnlock:
          description: True if it was an auto unlock
          type: boolean
        date:
          description: The log date
          format: date-time
          type: string
        openerLog:
          $ref: '#/components/schemas/SmartlockLog.OpenerLog'
        ajarTimeout:
          description: "The door sensor warning ajar timeout (in minutes, only for\
            \ action = 208)"
          format: int32
          type: integer
        source:
          description: "The source of action: 1 .. Keypad code, 2 .. Fingerprint,\
            \ 3 .. Tap to Unlock, 0 .. Default"
          format: int32
          type: integer
        error:
          description: "In case of any error, it contains the error message"
          type: string
      required:
      - action
      - autoUnlock
      - date
      - deviceType
      - id
      - name
      - smartlockId
      - state
      - trigger
      type: object
    SmartlockLog.OpenerLog:
      example:
        flagGeoFence: true
        activeRto: true
        activeCm: true
        source: 4
        flagDoorbellSuppression: true
        flagForce: true
      properties:
        activeCm:
          description: Flag indicating if continuous mode was active
          type: boolean
        activeRto:
          description: Flag indicating if ring to open was active
          type: boolean
        source:
          description: "The cause of the activation of ring to open or continuous\
            \ mode: 0 .. doorbell, 1 .. timecontrol, 2 .. app, 3 .. button, 4 .. fob,\
            \ 5 .. bridge, 6 .. keypad"
          format: int32
          maximum: 6
          minimum: 0
          type: integer
        flagGeoFence:
          description: Flag indicating a geo fence induced action
          type: boolean
        flagForce:
          description: Flag indicating a force induced action
          type: boolean
        flagDoorbellSuppression:
          description: Flag indicating if doorbell suppression was active
          type: boolean
      required:
      - activeCm
      - activeRto
      - flagDoorbellSuppression
      - flagForce
      - flagGeoFence
      - source
      type: object
    SmartlockUpdate:
      example:
        name: name
        favorite: true
      properties:
        name:
          description: The new name of the smartlock
          type: string
        favorite:
          description: True if the smartlock is favorite
          type: boolean
      type: object
    SmartlocksAuthAdvancedCreate:
      example:
        smartActionsEnabled: true
        remoteAllowed: true
        allowedUntilDate: 2000-01-23T04:56:07.000+00:00
        smartlockIds:
        - 5
        - 5
        name: name
        allowedFromDate: 2000-01-23T04:56:07.000+00:00
        allowedUntilTime: 1
        allowedWeekDays: 10
        allowedFromTime: 6
        accountUserId: 5
      properties:
        name:
          description: The name of the authorization (max 32 chars)
          type: string
        allowedFromDate:
          description: The allowed from date
          format: date-time
          type: string
        allowedUntilDate:
          description: The allowed until date
          format: date-time
          type: string
        allowedWeekDays:
          description: "The allowed weekdays bitmask: 64 .. monday, 32 .. tuesday,\
            \ 16 .. wednesday, 8 .. thursday, 4 .. friday, 2 .. saturday, 1 .. sunday"
          format: int32
          maximum: 127
          minimum: 0
          type: integer
        allowedFromTime:
          description: The allowed from time (in minutes from midnight)
          format: int32
          type: integer
        allowedUntilTime:
          description: The allowed until time (in minutes from midnight)
          format: int32
          type: integer
        accountUserId:
          description: The id of the linked account user
          format: int32
          type: integer
        smartlockIds:
          description: The list of smartlock ids
          items:
            format: int64
            type: integer
          type: array
        remoteAllowed:
          description: True if the auth has remote access
          type: boolean
        smartActionsEnabled:
          description: The smart actions enabled flag
          type: boolean
      required:
      - accountUserId
      - name
      - remoteAllowed
      - smartlockIds
      type: object
    SmartlocksAuthCreate:
      example:
        smartActionsEnabled: true
        code: 7
        remoteAllowed: true
        allowedUntilDate: 2000-01-23T04:56:07.000+00:00
        smartlockIds:
        - 5
        - 5
        name: name
        allowedFromDate: 2000-01-23T04:56:07.000+00:00
        allowedUntilTime: 1
        allowedWeekDays: 10
        type: 2
        allowedFromTime: 6
        accountUserId: 5
      properties:
        name:
          description: The name of the authorization (max 32 chars)
          type: string
        allowedFromDate:
          description: The allowed from date
          format: date-time
          type: string
        allowedUntilDate:
          description: The allowed until date
          format: date-time
          type: string
        allowedWeekDays:
          description: "The allowed weekdays bitmask: 64 .. monday, 32 .. tuesday,\
            \ 16 .. wednesday, 8 .. thursday, 4 .. friday, 2 .. saturday, 1 .. sunday"
          format: int32
          maximum: 127
          minimum: 0
          type: integer
        allowedFromTime:
          description: The allowed from time (in minutes from midnight)
          format: int32
          type: integer
        allowedUntilTime:
          description: The allowed until time (in minutes from midnight)
          format: int32
          type: integer
        accountUserId:
          description: The id of the linked account user (required if type is NOT
            13 .. keypad)
          format: int32
          type: integer
        smartlockIds:
          description: The list of smartlock ids
          items:
            format: int64
            type: integer
          type: array
        remoteAllowed:
          description: True if the auth has remote access
          type: boolean
        smartActionsEnabled:
          description: The smart actions enabled flag
          type: boolean
        type:
          description: "The optional type of the auth 0 .. app (default), 2 .. fob,\
            \ 13 .. keypad"
          format: int32
          type: integer
        code:
          description: The code of the keypad authorization (only for keypad)
          format: int32
          type: integer
      required:
      - name
      - remoteAllowed
      type: object
    StackTraceElement:
      properties:
        classLoaderName:
          type: string
        moduleName:
          type: string
        moduleVersion:
          type: string
        methodName:
          type: string
        fileName:
          type: string
        lineNumber:
          format: int32
          type: integer
        className:
          type: string
        nativeMethod:
          type: boolean
      type: object
    StaleDevice:
      example:
        smartlockId: 0
        read: true
        name: name
      properties:
        smartlockId:
          format: int64
          type: integer
        name:
          type: string
        read:
          type: boolean
      type: object
    Status:
      properties:
        code:
          format: int32
          type: integer
        description:
          type: string
        reasonPhrase:
          type: string
        throwable:
          $ref: '#/components/schemas/Throwable'
        uri:
          type: string
        error:
          type: boolean
        success:
          type: boolean
        serverError:
          type: boolean
        connectorError:
          type: boolean
        clientError:
          type: boolean
        globalError:
          type: boolean
        informational:
          type: boolean
        redirection:
          type: boolean
        recoverableError:
          type: boolean
      type: object
    StatusService:
      example:
        converterService:
          stopped: true
          context: null
          started: true
          enabled: true
        stopped: true
        metadataService:
          allLanguageExtensionNames:
          - allLanguageExtensionNames
          - allLanguageExtensionNames
          stopped: true
          defaultEncoding:
            parent:
              parent: null
              name: name
              description: description
            name: name
            description: description
          allExtensionNames:
          - allExtensionNames
          - allExtensionNames
          started: true
          allEncodingExtensionNames:
          - allEncodingExtensionNames
          - allEncodingExtensionNames
          enabled: true
          allCharacterSetExtensionNames:
          - allCharacterSetExtensionNames
          - allCharacterSetExtensionNames
          defaultLanguage:
            parent: null
            name: name
            description: description
            subTags:
            - subTags
            - subTags
            primaryTag: primaryTag
          defaultMediaType:
            concrete: true
            parent: null
            name: name
            description: description
            subType: subType
            mainType: mainType
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          defaultCharacterSet:
            parent:
              parent: null
              name: name
              description: description
            name: name
            description: description
          context: null
          allMediaTypeExtensionNames:
          - allMediaTypeExtensionNames
          - allMediaTypeExtensionNames
        contactEmail: contactEmail
        homeRef:
          userInfo: userInfo
          schemeProtocol:
            defaultPort: 6
            name: name
            schemeName: schemeName
            description: description
            technicalName: technicalName
            version: version
            confidential: true
          queryAsForm:
          - name: name
            value: value
          - name: name
            value: value
          matrixAsForm:
          - name: name
            value: value
          - name: name
            value: value
          hostIdentifier: hostIdentifier
          scheme: scheme
          extensionsAsArray:
          - extensionsAsArray
          - extensionsAsArray
          relativeRef: null
          matrix: matrix
          lastSegment: lastSegment
          segments:
          - segments
          - segments
          path: path
          hierarchical: true
          hostDomain: hostDomain
          relativePart: relativePart
          hostPort: 0
          identifier: identifier
          targetRef: null
          opaque: true
          remainingPart: remainingPart
          query: query
          schemeSpecificPart: schemeSpecificPart
          hierarchicalPart: hierarchicalPart
          baseRef: null
          parentRef: null
          fragment: fragment
          extensions: extensions
          absolute: true
          authority: authority
          relative: true
        context: null
        started: true
        connegService:
          stopped: true
          context: null
          started: true
          strict: true
          enabled: true
        overwriting: true
        enabled: true
      properties:
        context:
          $ref: '#/components/schemas/Context'
        enabled:
          type: boolean
        started:
          type: boolean
        connegService:
          $ref: '#/components/schemas/ConnegService'
        contactEmail:
          type: string
        converterService:
          $ref: '#/components/schemas/ConverterService'
        homeRef:
          $ref: '#/components/schemas/Reference'
        metadataService:
          $ref: '#/components/schemas/MetadataService'
        overwriting:
          type: boolean
        stopped:
          type: boolean
      type: object
    Tag:
      properties:
        name:
          type: string
        weak:
          type: boolean
      type: object
    TaskService:
      example:
        shutdownAllowed: true
        stopped: true
        context: null
        corePoolSize: 1
        started: true
        enabled: true
        terminated: true
        shutdown: true
        daemon: true
      properties:
        context:
          $ref: '#/components/schemas/Context'
        enabled:
          type: boolean
        started:
          type: boolean
        corePoolSize:
          format: int32
          type: integer
        daemon:
          type: boolean
        shutdownAllowed:
          type: boolean
        terminated:
          type: boolean
        shutdown:
          type: boolean
        stopped:
          type: boolean
      type: object
    TermsOfUse:
      example:
        acceptanceDate: 2000-01-23T04:56:07.000+00:00
        publishDate: 2000-01-23T04:56:07.000+00:00
        state: Accepted
      properties:
        state:
          enum:
          - Accepted
          - Inactive
          type: string
        publishDate:
          format: date-time
          type: string
        acceptanceDate:
          format: date-time
          type: string
      type: object
    Throwable:
      properties:
        cause:
          $ref: '#/components/schemas/Throwable'
        stackTrace:
          items:
            $ref: '#/components/schemas/StackTraceElement'
          type: array
        message:
          type: string
        suppressed:
          items:
            $ref: '#/components/schemas/Throwable'
          type: array
        localizedMessage:
          type: string
      type: object
    TunnelService:
      example:
        extensionsTunnel: true
        preferencesTunnel: true
        userAgentTunnel: true
        stopped: true
        languageParameter: languageParameter
        queryTunnel: true
        methodParameter: methodParameter
        started: true
        enabled: true
        characterSetParameter: characterSetParameter
        methodHeader: methodHeader
        encodingParameter: encodingParameter
        methodTunnel: true
        context: null
        headersTunnel: true
        mediaTypeParameter: mediaTypeParameter
      properties:
        context:
          $ref: '#/components/schemas/Context'
        enabled:
          type: boolean
        started:
          type: boolean
        characterSetParameter:
          type: string
        encodingParameter:
          type: string
        extensionsTunnel:
          type: boolean
        headersTunnel:
          type: boolean
        languageParameter:
          type: string
        mediaTypeParameter:
          type: string
        methodHeader:
          type: string
        methodParameter:
          type: string
        methodTunnel:
          type: boolean
        preferencesTunnel:
          type: boolean
        queryTunnel:
          type: boolean
        userAgentTunnel:
          type: boolean
        stopped:
          type: boolean
      type: object
    Uniform:
      type: object
    User:
      properties:
        email:
          type: string
        firstName:
          type: string
        identifier:
          type: string
        lastName:
          type: string
        secret:
          items:
            type: string
          type: array
        name:
          type: string
      type: object
    Variant:
      properties:
        characterSet:
          $ref: '#/components/schemas/CharacterSet'
        encodings:
          items:
            $ref: '#/components/schemas/Encoding'
          type: array
        locationRef:
          $ref: '#/components/schemas/Reference'
        languages:
          items:
            $ref: '#/components/schemas/Language'
          type: array
        mediaType:
          $ref: '#/components/schemas/MediaType'
      type: object
    Verifier:
      type: object
    WakeupListener:
      type: object
    Warning:
      properties:
        agent:
          type: string
        date:
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/Status'
        text:
          type: string
      type: object
    WebConfigRequest:
      example:
        smartlockId: 0
        webConfig:
          dismissedLiftUpHandleWarning:
          - 6
          - 6
          batteryWarningPerMailEnabled: true
      properties:
        smartlockId:
          format: int64
          type: integer
        webConfig:
          $ref: '#/components/schemas/Smartlock.WebConfig'
      type: object
    WebhookLog:
      example:
        duration: 6
        accountId: 1
        request:
          headers:
            key: headers
          path: path
          body:
            key: "{}"
          timestamp: 2000-01-23T04:56:07.000+00:00
        requestId: requestId
        response:
          headers:
            key: headers
          path: path
          body:
            key: "{}"
          timestamp: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        apiKeyId: 5
        id: id
        responseStatus: 0
        updated: 2000-01-23T04:56:07.000+00:00
        succeeded: true
      properties:
        id:
          description: The WebhookLog id
          type: string
        requestId:
          description: "Request id, set when api-triggered request otherwise empty"
          type: string
        succeeded:
          description: If the webhooks sends the data successfully
          type: boolean
        responseStatus:
          description: Http Status code of the webhook response
          format: int32
          type: integer
        duration:
          description: The duration of the webhook in milli seconds
          format: int64
          type: integer
        accountId:
          description: The account id
          format: int32
          type: integer
        request:
          $ref: '#/components/schemas/WebhookMessage'
        response:
          $ref: '#/components/schemas/WebhookMessage'
        apiKeyId:
          description: Used Api Key for the webhook
          format: int32
          type: integer
        updated:
          description: last updated time
          format: date-time
          type: string
        created:
          description: Creation Date
          format: date-time
          type: string
      required:
      - accountId
      - apiKeyId
      - created
      - id
      - updated
      type: object
    WebhookMessage:
      example:
        headers:
          key: headers
        path: path
        body:
          key: "{}"
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        headers:
          additionalProperties:
            type: string
          description: Http Headers as key value pairs
          type: object
        body:
          additionalProperties:
            properties: {}
            type: object
          description: Http Body as Json
          type: object
        timestamp:
          description: The timestamp when the message was created
          format: date-time
          type: string
        path:
          description: Path of the message
          type: string
      required:
      - headers
      - path
      type: object
  securitySchemes:
    oauth:
      flows:
        implicit:
          authorizationUrl: /oauth/authorize
          scopes:
            account: View and manage your account
            notification: View and manage your notifications
            smartlock: View and manage your smartlocks
            smartlock.readOnly: View your smartlocks
            smartlock.action: Operate your smartlocks
            smartlock.auth: View and manage your smartlock authorizations
            smartlock.config: Manage your smartlock config
            smartlock.log: View your activity logs and get log notifications
            smartlock.create: Create smartlocks
      type: oauth2
x-original-swagger-version: "2.0"
