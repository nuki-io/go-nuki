/*
Nuki API

The Nuki Web Api

API version: 3.10.2
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ClientInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientInfo{}

// ClientInfo struct for ClientInfo
type ClientInfo struct {
	AcceptedCharacterSets []PreferenceCharacterSet `json:"acceptedCharacterSets,omitempty"`
	AcceptedEncodings []PreferenceEncoding `json:"acceptedEncodings,omitempty"`
	AcceptedLanguages []PreferenceLanguage `json:"acceptedLanguages,omitempty"`
	AcceptedMediaTypes []PreferenceMediaType `json:"acceptedMediaTypes,omitempty"`
	AcceptedPatches []PreferenceMediaType `json:"acceptedPatches,omitempty"`
	Address *string `json:"address,omitempty"`
	Agent *string `json:"agent,omitempty"`
	AgentAttributes *map[string]string `json:"agentAttributes,omitempty"`
	AgentProducts []Product `json:"agentProducts,omitempty"`
	Authenticated *bool `json:"authenticated,omitempty"`
	Certificates []Certificate `json:"certificates,omitempty"`
	CipherSuite *string `json:"cipherSuite,omitempty"`
	Expectations []Expectation `json:"expectations,omitempty"`
	ForwardedAddresses []string `json:"forwardedAddresses,omitempty"`
	From *string `json:"from,omitempty"`
	Port *int32 `json:"port,omitempty"`
	Principals []Principal `json:"principals,omitempty"`
	Roles []Role `json:"roles,omitempty"`
	User *User `json:"user,omitempty"`
	UpstreamAddress *string `json:"upstreamAddress,omitempty"`
	AgentName *string `json:"agentName,omitempty"`
	AgentVersion *string `json:"agentVersion,omitempty"`
	MainAgentProduct *Product `json:"mainAgentProduct,omitempty"`
}

// NewClientInfo instantiates a new ClientInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientInfo() *ClientInfo {
	this := ClientInfo{}
	return &this
}

// NewClientInfoWithDefaults instantiates a new ClientInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientInfoWithDefaults() *ClientInfo {
	this := ClientInfo{}
	return &this
}

// GetAcceptedCharacterSets returns the AcceptedCharacterSets field value if set, zero value otherwise.
func (o *ClientInfo) GetAcceptedCharacterSets() []PreferenceCharacterSet {
	if o == nil || IsNil(o.AcceptedCharacterSets) {
		var ret []PreferenceCharacterSet
		return ret
	}
	return o.AcceptedCharacterSets
}

// GetAcceptedCharacterSetsOk returns a tuple with the AcceptedCharacterSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetAcceptedCharacterSetsOk() ([]PreferenceCharacterSet, bool) {
	if o == nil || IsNil(o.AcceptedCharacterSets) {
		return nil, false
	}
	return o.AcceptedCharacterSets, true
}

// HasAcceptedCharacterSets returns a boolean if a field has been set.
func (o *ClientInfo) HasAcceptedCharacterSets() bool {
	if o != nil && !IsNil(o.AcceptedCharacterSets) {
		return true
	}

	return false
}

// SetAcceptedCharacterSets gets a reference to the given []PreferenceCharacterSet and assigns it to the AcceptedCharacterSets field.
func (o *ClientInfo) SetAcceptedCharacterSets(v []PreferenceCharacterSet) {
	o.AcceptedCharacterSets = v
}

// GetAcceptedEncodings returns the AcceptedEncodings field value if set, zero value otherwise.
func (o *ClientInfo) GetAcceptedEncodings() []PreferenceEncoding {
	if o == nil || IsNil(o.AcceptedEncodings) {
		var ret []PreferenceEncoding
		return ret
	}
	return o.AcceptedEncodings
}

// GetAcceptedEncodingsOk returns a tuple with the AcceptedEncodings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetAcceptedEncodingsOk() ([]PreferenceEncoding, bool) {
	if o == nil || IsNil(o.AcceptedEncodings) {
		return nil, false
	}
	return o.AcceptedEncodings, true
}

// HasAcceptedEncodings returns a boolean if a field has been set.
func (o *ClientInfo) HasAcceptedEncodings() bool {
	if o != nil && !IsNil(o.AcceptedEncodings) {
		return true
	}

	return false
}

// SetAcceptedEncodings gets a reference to the given []PreferenceEncoding and assigns it to the AcceptedEncodings field.
func (o *ClientInfo) SetAcceptedEncodings(v []PreferenceEncoding) {
	o.AcceptedEncodings = v
}

// GetAcceptedLanguages returns the AcceptedLanguages field value if set, zero value otherwise.
func (o *ClientInfo) GetAcceptedLanguages() []PreferenceLanguage {
	if o == nil || IsNil(o.AcceptedLanguages) {
		var ret []PreferenceLanguage
		return ret
	}
	return o.AcceptedLanguages
}

// GetAcceptedLanguagesOk returns a tuple with the AcceptedLanguages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetAcceptedLanguagesOk() ([]PreferenceLanguage, bool) {
	if o == nil || IsNil(o.AcceptedLanguages) {
		return nil, false
	}
	return o.AcceptedLanguages, true
}

// HasAcceptedLanguages returns a boolean if a field has been set.
func (o *ClientInfo) HasAcceptedLanguages() bool {
	if o != nil && !IsNil(o.AcceptedLanguages) {
		return true
	}

	return false
}

// SetAcceptedLanguages gets a reference to the given []PreferenceLanguage and assigns it to the AcceptedLanguages field.
func (o *ClientInfo) SetAcceptedLanguages(v []PreferenceLanguage) {
	o.AcceptedLanguages = v
}

// GetAcceptedMediaTypes returns the AcceptedMediaTypes field value if set, zero value otherwise.
func (o *ClientInfo) GetAcceptedMediaTypes() []PreferenceMediaType {
	if o == nil || IsNil(o.AcceptedMediaTypes) {
		var ret []PreferenceMediaType
		return ret
	}
	return o.AcceptedMediaTypes
}

// GetAcceptedMediaTypesOk returns a tuple with the AcceptedMediaTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetAcceptedMediaTypesOk() ([]PreferenceMediaType, bool) {
	if o == nil || IsNil(o.AcceptedMediaTypes) {
		return nil, false
	}
	return o.AcceptedMediaTypes, true
}

// HasAcceptedMediaTypes returns a boolean if a field has been set.
func (o *ClientInfo) HasAcceptedMediaTypes() bool {
	if o != nil && !IsNil(o.AcceptedMediaTypes) {
		return true
	}

	return false
}

// SetAcceptedMediaTypes gets a reference to the given []PreferenceMediaType and assigns it to the AcceptedMediaTypes field.
func (o *ClientInfo) SetAcceptedMediaTypes(v []PreferenceMediaType) {
	o.AcceptedMediaTypes = v
}

// GetAcceptedPatches returns the AcceptedPatches field value if set, zero value otherwise.
func (o *ClientInfo) GetAcceptedPatches() []PreferenceMediaType {
	if o == nil || IsNil(o.AcceptedPatches) {
		var ret []PreferenceMediaType
		return ret
	}
	return o.AcceptedPatches
}

// GetAcceptedPatchesOk returns a tuple with the AcceptedPatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetAcceptedPatchesOk() ([]PreferenceMediaType, bool) {
	if o == nil || IsNil(o.AcceptedPatches) {
		return nil, false
	}
	return o.AcceptedPatches, true
}

// HasAcceptedPatches returns a boolean if a field has been set.
func (o *ClientInfo) HasAcceptedPatches() bool {
	if o != nil && !IsNil(o.AcceptedPatches) {
		return true
	}

	return false
}

// SetAcceptedPatches gets a reference to the given []PreferenceMediaType and assigns it to the AcceptedPatches field.
func (o *ClientInfo) SetAcceptedPatches(v []PreferenceMediaType) {
	o.AcceptedPatches = v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ClientInfo) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ClientInfo) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *ClientInfo) SetAddress(v string) {
	o.Address = &v
}

// GetAgent returns the Agent field value if set, zero value otherwise.
func (o *ClientInfo) GetAgent() string {
	if o == nil || IsNil(o.Agent) {
		var ret string
		return ret
	}
	return *o.Agent
}

// GetAgentOk returns a tuple with the Agent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetAgentOk() (*string, bool) {
	if o == nil || IsNil(o.Agent) {
		return nil, false
	}
	return o.Agent, true
}

// HasAgent returns a boolean if a field has been set.
func (o *ClientInfo) HasAgent() bool {
	if o != nil && !IsNil(o.Agent) {
		return true
	}

	return false
}

// SetAgent gets a reference to the given string and assigns it to the Agent field.
func (o *ClientInfo) SetAgent(v string) {
	o.Agent = &v
}

// GetAgentAttributes returns the AgentAttributes field value if set, zero value otherwise.
func (o *ClientInfo) GetAgentAttributes() map[string]string {
	if o == nil || IsNil(o.AgentAttributes) {
		var ret map[string]string
		return ret
	}
	return *o.AgentAttributes
}

// GetAgentAttributesOk returns a tuple with the AgentAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetAgentAttributesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.AgentAttributes) {
		return nil, false
	}
	return o.AgentAttributes, true
}

// HasAgentAttributes returns a boolean if a field has been set.
func (o *ClientInfo) HasAgentAttributes() bool {
	if o != nil && !IsNil(o.AgentAttributes) {
		return true
	}

	return false
}

// SetAgentAttributes gets a reference to the given map[string]string and assigns it to the AgentAttributes field.
func (o *ClientInfo) SetAgentAttributes(v map[string]string) {
	o.AgentAttributes = &v
}

// GetAgentProducts returns the AgentProducts field value if set, zero value otherwise.
func (o *ClientInfo) GetAgentProducts() []Product {
	if o == nil || IsNil(o.AgentProducts) {
		var ret []Product
		return ret
	}
	return o.AgentProducts
}

// GetAgentProductsOk returns a tuple with the AgentProducts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetAgentProductsOk() ([]Product, bool) {
	if o == nil || IsNil(o.AgentProducts) {
		return nil, false
	}
	return o.AgentProducts, true
}

// HasAgentProducts returns a boolean if a field has been set.
func (o *ClientInfo) HasAgentProducts() bool {
	if o != nil && !IsNil(o.AgentProducts) {
		return true
	}

	return false
}

// SetAgentProducts gets a reference to the given []Product and assigns it to the AgentProducts field.
func (o *ClientInfo) SetAgentProducts(v []Product) {
	o.AgentProducts = v
}

// GetAuthenticated returns the Authenticated field value if set, zero value otherwise.
func (o *ClientInfo) GetAuthenticated() bool {
	if o == nil || IsNil(o.Authenticated) {
		var ret bool
		return ret
	}
	return *o.Authenticated
}

// GetAuthenticatedOk returns a tuple with the Authenticated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetAuthenticatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Authenticated) {
		return nil, false
	}
	return o.Authenticated, true
}

// HasAuthenticated returns a boolean if a field has been set.
func (o *ClientInfo) HasAuthenticated() bool {
	if o != nil && !IsNil(o.Authenticated) {
		return true
	}

	return false
}

// SetAuthenticated gets a reference to the given bool and assigns it to the Authenticated field.
func (o *ClientInfo) SetAuthenticated(v bool) {
	o.Authenticated = &v
}

// GetCertificates returns the Certificates field value if set, zero value otherwise.
func (o *ClientInfo) GetCertificates() []Certificate {
	if o == nil || IsNil(o.Certificates) {
		var ret []Certificate
		return ret
	}
	return o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetCertificatesOk() ([]Certificate, bool) {
	if o == nil || IsNil(o.Certificates) {
		return nil, false
	}
	return o.Certificates, true
}

// HasCertificates returns a boolean if a field has been set.
func (o *ClientInfo) HasCertificates() bool {
	if o != nil && !IsNil(o.Certificates) {
		return true
	}

	return false
}

// SetCertificates gets a reference to the given []Certificate and assigns it to the Certificates field.
func (o *ClientInfo) SetCertificates(v []Certificate) {
	o.Certificates = v
}

// GetCipherSuite returns the CipherSuite field value if set, zero value otherwise.
func (o *ClientInfo) GetCipherSuite() string {
	if o == nil || IsNil(o.CipherSuite) {
		var ret string
		return ret
	}
	return *o.CipherSuite
}

// GetCipherSuiteOk returns a tuple with the CipherSuite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetCipherSuiteOk() (*string, bool) {
	if o == nil || IsNil(o.CipherSuite) {
		return nil, false
	}
	return o.CipherSuite, true
}

// HasCipherSuite returns a boolean if a field has been set.
func (o *ClientInfo) HasCipherSuite() bool {
	if o != nil && !IsNil(o.CipherSuite) {
		return true
	}

	return false
}

// SetCipherSuite gets a reference to the given string and assigns it to the CipherSuite field.
func (o *ClientInfo) SetCipherSuite(v string) {
	o.CipherSuite = &v
}

// GetExpectations returns the Expectations field value if set, zero value otherwise.
func (o *ClientInfo) GetExpectations() []Expectation {
	if o == nil || IsNil(o.Expectations) {
		var ret []Expectation
		return ret
	}
	return o.Expectations
}

// GetExpectationsOk returns a tuple with the Expectations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetExpectationsOk() ([]Expectation, bool) {
	if o == nil || IsNil(o.Expectations) {
		return nil, false
	}
	return o.Expectations, true
}

// HasExpectations returns a boolean if a field has been set.
func (o *ClientInfo) HasExpectations() bool {
	if o != nil && !IsNil(o.Expectations) {
		return true
	}

	return false
}

// SetExpectations gets a reference to the given []Expectation and assigns it to the Expectations field.
func (o *ClientInfo) SetExpectations(v []Expectation) {
	o.Expectations = v
}

// GetForwardedAddresses returns the ForwardedAddresses field value if set, zero value otherwise.
func (o *ClientInfo) GetForwardedAddresses() []string {
	if o == nil || IsNil(o.ForwardedAddresses) {
		var ret []string
		return ret
	}
	return o.ForwardedAddresses
}

// GetForwardedAddressesOk returns a tuple with the ForwardedAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetForwardedAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.ForwardedAddresses) {
		return nil, false
	}
	return o.ForwardedAddresses, true
}

// HasForwardedAddresses returns a boolean if a field has been set.
func (o *ClientInfo) HasForwardedAddresses() bool {
	if o != nil && !IsNil(o.ForwardedAddresses) {
		return true
	}

	return false
}

// SetForwardedAddresses gets a reference to the given []string and assigns it to the ForwardedAddresses field.
func (o *ClientInfo) SetForwardedAddresses(v []string) {
	o.ForwardedAddresses = v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *ClientInfo) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *ClientInfo) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *ClientInfo) SetFrom(v string) {
	o.From = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ClientInfo) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ClientInfo) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *ClientInfo) SetPort(v int32) {
	o.Port = &v
}

// GetPrincipals returns the Principals field value if set, zero value otherwise.
func (o *ClientInfo) GetPrincipals() []Principal {
	if o == nil || IsNil(o.Principals) {
		var ret []Principal
		return ret
	}
	return o.Principals
}

// GetPrincipalsOk returns a tuple with the Principals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetPrincipalsOk() ([]Principal, bool) {
	if o == nil || IsNil(o.Principals) {
		return nil, false
	}
	return o.Principals, true
}

// HasPrincipals returns a boolean if a field has been set.
func (o *ClientInfo) HasPrincipals() bool {
	if o != nil && !IsNil(o.Principals) {
		return true
	}

	return false
}

// SetPrincipals gets a reference to the given []Principal and assigns it to the Principals field.
func (o *ClientInfo) SetPrincipals(v []Principal) {
	o.Principals = v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *ClientInfo) GetRoles() []Role {
	if o == nil || IsNil(o.Roles) {
		var ret []Role
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetRolesOk() ([]Role, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *ClientInfo) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []Role and assigns it to the Roles field.
func (o *ClientInfo) SetRoles(v []Role) {
	o.Roles = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ClientInfo) GetUser() User {
	if o == nil || IsNil(o.User) {
		var ret User
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetUserOk() (*User, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ClientInfo) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given User and assigns it to the User field.
func (o *ClientInfo) SetUser(v User) {
	o.User = &v
}

// GetUpstreamAddress returns the UpstreamAddress field value if set, zero value otherwise.
func (o *ClientInfo) GetUpstreamAddress() string {
	if o == nil || IsNil(o.UpstreamAddress) {
		var ret string
		return ret
	}
	return *o.UpstreamAddress
}

// GetUpstreamAddressOk returns a tuple with the UpstreamAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetUpstreamAddressOk() (*string, bool) {
	if o == nil || IsNil(o.UpstreamAddress) {
		return nil, false
	}
	return o.UpstreamAddress, true
}

// HasUpstreamAddress returns a boolean if a field has been set.
func (o *ClientInfo) HasUpstreamAddress() bool {
	if o != nil && !IsNil(o.UpstreamAddress) {
		return true
	}

	return false
}

// SetUpstreamAddress gets a reference to the given string and assigns it to the UpstreamAddress field.
func (o *ClientInfo) SetUpstreamAddress(v string) {
	o.UpstreamAddress = &v
}

// GetAgentName returns the AgentName field value if set, zero value otherwise.
func (o *ClientInfo) GetAgentName() string {
	if o == nil || IsNil(o.AgentName) {
		var ret string
		return ret
	}
	return *o.AgentName
}

// GetAgentNameOk returns a tuple with the AgentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetAgentNameOk() (*string, bool) {
	if o == nil || IsNil(o.AgentName) {
		return nil, false
	}
	return o.AgentName, true
}

// HasAgentName returns a boolean if a field has been set.
func (o *ClientInfo) HasAgentName() bool {
	if o != nil && !IsNil(o.AgentName) {
		return true
	}

	return false
}

// SetAgentName gets a reference to the given string and assigns it to the AgentName field.
func (o *ClientInfo) SetAgentName(v string) {
	o.AgentName = &v
}

// GetAgentVersion returns the AgentVersion field value if set, zero value otherwise.
func (o *ClientInfo) GetAgentVersion() string {
	if o == nil || IsNil(o.AgentVersion) {
		var ret string
		return ret
	}
	return *o.AgentVersion
}

// GetAgentVersionOk returns a tuple with the AgentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetAgentVersionOk() (*string, bool) {
	if o == nil || IsNil(o.AgentVersion) {
		return nil, false
	}
	return o.AgentVersion, true
}

// HasAgentVersion returns a boolean if a field has been set.
func (o *ClientInfo) HasAgentVersion() bool {
	if o != nil && !IsNil(o.AgentVersion) {
		return true
	}

	return false
}

// SetAgentVersion gets a reference to the given string and assigns it to the AgentVersion field.
func (o *ClientInfo) SetAgentVersion(v string) {
	o.AgentVersion = &v
}

// GetMainAgentProduct returns the MainAgentProduct field value if set, zero value otherwise.
func (o *ClientInfo) GetMainAgentProduct() Product {
	if o == nil || IsNil(o.MainAgentProduct) {
		var ret Product
		return ret
	}
	return *o.MainAgentProduct
}

// GetMainAgentProductOk returns a tuple with the MainAgentProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInfo) GetMainAgentProductOk() (*Product, bool) {
	if o == nil || IsNil(o.MainAgentProduct) {
		return nil, false
	}
	return o.MainAgentProduct, true
}

// HasMainAgentProduct returns a boolean if a field has been set.
func (o *ClientInfo) HasMainAgentProduct() bool {
	if o != nil && !IsNil(o.MainAgentProduct) {
		return true
	}

	return false
}

// SetMainAgentProduct gets a reference to the given Product and assigns it to the MainAgentProduct field.
func (o *ClientInfo) SetMainAgentProduct(v Product) {
	o.MainAgentProduct = &v
}

func (o ClientInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcceptedCharacterSets) {
		toSerialize["acceptedCharacterSets"] = o.AcceptedCharacterSets
	}
	if !IsNil(o.AcceptedEncodings) {
		toSerialize["acceptedEncodings"] = o.AcceptedEncodings
	}
	if !IsNil(o.AcceptedLanguages) {
		toSerialize["acceptedLanguages"] = o.AcceptedLanguages
	}
	if !IsNil(o.AcceptedMediaTypes) {
		toSerialize["acceptedMediaTypes"] = o.AcceptedMediaTypes
	}
	if !IsNil(o.AcceptedPatches) {
		toSerialize["acceptedPatches"] = o.AcceptedPatches
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Agent) {
		toSerialize["agent"] = o.Agent
	}
	if !IsNil(o.AgentAttributes) {
		toSerialize["agentAttributes"] = o.AgentAttributes
	}
	if !IsNil(o.AgentProducts) {
		toSerialize["agentProducts"] = o.AgentProducts
	}
	if !IsNil(o.Authenticated) {
		toSerialize["authenticated"] = o.Authenticated
	}
	if !IsNil(o.Certificates) {
		toSerialize["certificates"] = o.Certificates
	}
	if !IsNil(o.CipherSuite) {
		toSerialize["cipherSuite"] = o.CipherSuite
	}
	if !IsNil(o.Expectations) {
		toSerialize["expectations"] = o.Expectations
	}
	if !IsNil(o.ForwardedAddresses) {
		toSerialize["forwardedAddresses"] = o.ForwardedAddresses
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Principals) {
		toSerialize["principals"] = o.Principals
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.UpstreamAddress) {
		toSerialize["upstreamAddress"] = o.UpstreamAddress
	}
	if !IsNil(o.AgentName) {
		toSerialize["agentName"] = o.AgentName
	}
	if !IsNil(o.AgentVersion) {
		toSerialize["agentVersion"] = o.AgentVersion
	}
	if !IsNil(o.MainAgentProduct) {
		toSerialize["mainAgentProduct"] = o.MainAgentProduct
	}
	return toSerialize, nil
}

type NullableClientInfo struct {
	value *ClientInfo
	isSet bool
}

func (v NullableClientInfo) Get() *ClientInfo {
	return v.value
}

func (v *NullableClientInfo) Set(val *ClientInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableClientInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableClientInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientInfo(val *ClientInfo) *NullableClientInfo {
	return &NullableClientInfo{value: val, isSet: true}
}

func (v NullableClientInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


