/*
Nuki API

The Nuki Web Api

API version: 3.9.0
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the ShsSubscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShsSubscription{}

// ShsSubscription struct for ShsSubscription
type ShsSubscription struct {
	Type *string `json:"type,omitempty"`
	State *string `json:"state,omitempty"`
	ShsSubscriptionType *string `json:"shsSubscriptionType,omitempty"`
	UpdateDate *time.Time `json:"updateDate,omitempty"`
	CreationDate *time.Time `json:"creationDate,omitempty"`
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`
	IsInGracePeriod *bool `json:"isInGracePeriod,omitempty"`
	IsGracePeriodWarningDismissed *bool `json:"isGracePeriodWarningDismissed,omitempty"`
	GracePeriodWarningEmailSent *bool `json:"gracePeriodWarningEmailSent,omitempty"`
}

// NewShsSubscription instantiates a new ShsSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShsSubscription() *ShsSubscription {
	this := ShsSubscription{}
	return &this
}

// NewShsSubscriptionWithDefaults instantiates a new ShsSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShsSubscriptionWithDefaults() *ShsSubscription {
	this := ShsSubscription{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ShsSubscription) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShsSubscription) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ShsSubscription) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ShsSubscription) SetType(v string) {
	o.Type = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ShsSubscription) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShsSubscription) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ShsSubscription) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ShsSubscription) SetState(v string) {
	o.State = &v
}

// GetShsSubscriptionType returns the ShsSubscriptionType field value if set, zero value otherwise.
func (o *ShsSubscription) GetShsSubscriptionType() string {
	if o == nil || IsNil(o.ShsSubscriptionType) {
		var ret string
		return ret
	}
	return *o.ShsSubscriptionType
}

// GetShsSubscriptionTypeOk returns a tuple with the ShsSubscriptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShsSubscription) GetShsSubscriptionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ShsSubscriptionType) {
		return nil, false
	}
	return o.ShsSubscriptionType, true
}

// HasShsSubscriptionType returns a boolean if a field has been set.
func (o *ShsSubscription) HasShsSubscriptionType() bool {
	if o != nil && !IsNil(o.ShsSubscriptionType) {
		return true
	}

	return false
}

// SetShsSubscriptionType gets a reference to the given string and assigns it to the ShsSubscriptionType field.
func (o *ShsSubscription) SetShsSubscriptionType(v string) {
	o.ShsSubscriptionType = &v
}

// GetUpdateDate returns the UpdateDate field value if set, zero value otherwise.
func (o *ShsSubscription) GetUpdateDate() time.Time {
	if o == nil || IsNil(o.UpdateDate) {
		var ret time.Time
		return ret
	}
	return *o.UpdateDate
}

// GetUpdateDateOk returns a tuple with the UpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShsSubscription) GetUpdateDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdateDate) {
		return nil, false
	}
	return o.UpdateDate, true
}

// HasUpdateDate returns a boolean if a field has been set.
func (o *ShsSubscription) HasUpdateDate() bool {
	if o != nil && !IsNil(o.UpdateDate) {
		return true
	}

	return false
}

// SetUpdateDate gets a reference to the given time.Time and assigns it to the UpdateDate field.
func (o *ShsSubscription) SetUpdateDate(v time.Time) {
	o.UpdateDate = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *ShsSubscription) GetCreationDate() time.Time {
	if o == nil || IsNil(o.CreationDate) {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShsSubscription) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *ShsSubscription) HasCreationDate() bool {
	if o != nil && !IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *ShsSubscription) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *ShsSubscription) GetExpirationDate() time.Time {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShsSubscription) GetExpirationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *ShsSubscription) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given time.Time and assigns it to the ExpirationDate field.
func (o *ShsSubscription) SetExpirationDate(v time.Time) {
	o.ExpirationDate = &v
}

// GetIsInGracePeriod returns the IsInGracePeriod field value if set, zero value otherwise.
func (o *ShsSubscription) GetIsInGracePeriod() bool {
	if o == nil || IsNil(o.IsInGracePeriod) {
		var ret bool
		return ret
	}
	return *o.IsInGracePeriod
}

// GetIsInGracePeriodOk returns a tuple with the IsInGracePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShsSubscription) GetIsInGracePeriodOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInGracePeriod) {
		return nil, false
	}
	return o.IsInGracePeriod, true
}

// HasIsInGracePeriod returns a boolean if a field has been set.
func (o *ShsSubscription) HasIsInGracePeriod() bool {
	if o != nil && !IsNil(o.IsInGracePeriod) {
		return true
	}

	return false
}

// SetIsInGracePeriod gets a reference to the given bool and assigns it to the IsInGracePeriod field.
func (o *ShsSubscription) SetIsInGracePeriod(v bool) {
	o.IsInGracePeriod = &v
}

// GetIsGracePeriodWarningDismissed returns the IsGracePeriodWarningDismissed field value if set, zero value otherwise.
func (o *ShsSubscription) GetIsGracePeriodWarningDismissed() bool {
	if o == nil || IsNil(o.IsGracePeriodWarningDismissed) {
		var ret bool
		return ret
	}
	return *o.IsGracePeriodWarningDismissed
}

// GetIsGracePeriodWarningDismissedOk returns a tuple with the IsGracePeriodWarningDismissed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShsSubscription) GetIsGracePeriodWarningDismissedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsGracePeriodWarningDismissed) {
		return nil, false
	}
	return o.IsGracePeriodWarningDismissed, true
}

// HasIsGracePeriodWarningDismissed returns a boolean if a field has been set.
func (o *ShsSubscription) HasIsGracePeriodWarningDismissed() bool {
	if o != nil && !IsNil(o.IsGracePeriodWarningDismissed) {
		return true
	}

	return false
}

// SetIsGracePeriodWarningDismissed gets a reference to the given bool and assigns it to the IsGracePeriodWarningDismissed field.
func (o *ShsSubscription) SetIsGracePeriodWarningDismissed(v bool) {
	o.IsGracePeriodWarningDismissed = &v
}

// GetGracePeriodWarningEmailSent returns the GracePeriodWarningEmailSent field value if set, zero value otherwise.
func (o *ShsSubscription) GetGracePeriodWarningEmailSent() bool {
	if o == nil || IsNil(o.GracePeriodWarningEmailSent) {
		var ret bool
		return ret
	}
	return *o.GracePeriodWarningEmailSent
}

// GetGracePeriodWarningEmailSentOk returns a tuple with the GracePeriodWarningEmailSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShsSubscription) GetGracePeriodWarningEmailSentOk() (*bool, bool) {
	if o == nil || IsNil(o.GracePeriodWarningEmailSent) {
		return nil, false
	}
	return o.GracePeriodWarningEmailSent, true
}

// HasGracePeriodWarningEmailSent returns a boolean if a field has been set.
func (o *ShsSubscription) HasGracePeriodWarningEmailSent() bool {
	if o != nil && !IsNil(o.GracePeriodWarningEmailSent) {
		return true
	}

	return false
}

// SetGracePeriodWarningEmailSent gets a reference to the given bool and assigns it to the GracePeriodWarningEmailSent field.
func (o *ShsSubscription) SetGracePeriodWarningEmailSent(v bool) {
	o.GracePeriodWarningEmailSent = &v
}

func (o ShsSubscription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShsSubscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.ShsSubscriptionType) {
		toSerialize["shsSubscriptionType"] = o.ShsSubscriptionType
	}
	if !IsNil(o.UpdateDate) {
		toSerialize["updateDate"] = o.UpdateDate
	}
	if !IsNil(o.CreationDate) {
		toSerialize["creationDate"] = o.CreationDate
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if !IsNil(o.IsInGracePeriod) {
		toSerialize["isInGracePeriod"] = o.IsInGracePeriod
	}
	if !IsNil(o.IsGracePeriodWarningDismissed) {
		toSerialize["isGracePeriodWarningDismissed"] = o.IsGracePeriodWarningDismissed
	}
	if !IsNil(o.GracePeriodWarningEmailSent) {
		toSerialize["gracePeriodWarningEmailSent"] = o.GracePeriodWarningEmailSent
	}
	return toSerialize, nil
}

type NullableShsSubscription struct {
	value *ShsSubscription
	isSet bool
}

func (v NullableShsSubscription) Get() *ShsSubscription {
	return v.value
}

func (v *NullableShsSubscription) Set(val *ShsSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableShsSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableShsSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShsSubscription(val *ShsSubscription) *NullableShsSubscription {
	return &NullableShsSubscription{value: val, isSet: true}
}

func (v NullableShsSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShsSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


