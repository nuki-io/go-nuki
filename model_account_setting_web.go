/*
Nuki API

The Nuki Web Api

API version: 3.10.1
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AccountSettingWeb type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountSettingWeb{}

// AccountSettingWeb struct for AccountSettingWeb
type AccountSettingWeb struct {
	// The initial view type of the device page
	DeviceViewType *string `json:"deviceViewType,omitempty"`
	// The initial sort type of the device page
	DeviceSortType *string `json:"deviceSortType,omitempty"`
	// If true, Nuki Club info is dismissed and no banner is shown
	NukiClubDismissed *bool `json:"nukiClubDismissed,omitempty"`
	// List of removed staled devices
	RemovedStaledDevices []StaleDevice `json:"removedStaledDevices,omitempty"`
	// List of marked staled devices
	MarkedStaledDevices []StaleDevice `json:"markedStaledDevices,omitempty"`
}

// NewAccountSettingWeb instantiates a new AccountSettingWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountSettingWeb() *AccountSettingWeb {
	this := AccountSettingWeb{}
	return &this
}

// NewAccountSettingWebWithDefaults instantiates a new AccountSettingWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountSettingWebWithDefaults() *AccountSettingWeb {
	this := AccountSettingWeb{}
	return &this
}

// GetDeviceViewType returns the DeviceViewType field value if set, zero value otherwise.
func (o *AccountSettingWeb) GetDeviceViewType() string {
	if o == nil || IsNil(o.DeviceViewType) {
		var ret string
		return ret
	}
	return *o.DeviceViewType
}

// GetDeviceViewTypeOk returns a tuple with the DeviceViewType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingWeb) GetDeviceViewTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceViewType) {
		return nil, false
	}
	return o.DeviceViewType, true
}

// HasDeviceViewType returns a boolean if a field has been set.
func (o *AccountSettingWeb) HasDeviceViewType() bool {
	if o != nil && !IsNil(o.DeviceViewType) {
		return true
	}

	return false
}

// SetDeviceViewType gets a reference to the given string and assigns it to the DeviceViewType field.
func (o *AccountSettingWeb) SetDeviceViewType(v string) {
	o.DeviceViewType = &v
}

// GetDeviceSortType returns the DeviceSortType field value if set, zero value otherwise.
func (o *AccountSettingWeb) GetDeviceSortType() string {
	if o == nil || IsNil(o.DeviceSortType) {
		var ret string
		return ret
	}
	return *o.DeviceSortType
}

// GetDeviceSortTypeOk returns a tuple with the DeviceSortType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingWeb) GetDeviceSortTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceSortType) {
		return nil, false
	}
	return o.DeviceSortType, true
}

// HasDeviceSortType returns a boolean if a field has been set.
func (o *AccountSettingWeb) HasDeviceSortType() bool {
	if o != nil && !IsNil(o.DeviceSortType) {
		return true
	}

	return false
}

// SetDeviceSortType gets a reference to the given string and assigns it to the DeviceSortType field.
func (o *AccountSettingWeb) SetDeviceSortType(v string) {
	o.DeviceSortType = &v
}

// GetNukiClubDismissed returns the NukiClubDismissed field value if set, zero value otherwise.
func (o *AccountSettingWeb) GetNukiClubDismissed() bool {
	if o == nil || IsNil(o.NukiClubDismissed) {
		var ret bool
		return ret
	}
	return *o.NukiClubDismissed
}

// GetNukiClubDismissedOk returns a tuple with the NukiClubDismissed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingWeb) GetNukiClubDismissedOk() (*bool, bool) {
	if o == nil || IsNil(o.NukiClubDismissed) {
		return nil, false
	}
	return o.NukiClubDismissed, true
}

// HasNukiClubDismissed returns a boolean if a field has been set.
func (o *AccountSettingWeb) HasNukiClubDismissed() bool {
	if o != nil && !IsNil(o.NukiClubDismissed) {
		return true
	}

	return false
}

// SetNukiClubDismissed gets a reference to the given bool and assigns it to the NukiClubDismissed field.
func (o *AccountSettingWeb) SetNukiClubDismissed(v bool) {
	o.NukiClubDismissed = &v
}

// GetRemovedStaledDevices returns the RemovedStaledDevices field value if set, zero value otherwise.
func (o *AccountSettingWeb) GetRemovedStaledDevices() []StaleDevice {
	if o == nil || IsNil(o.RemovedStaledDevices) {
		var ret []StaleDevice
		return ret
	}
	return o.RemovedStaledDevices
}

// GetRemovedStaledDevicesOk returns a tuple with the RemovedStaledDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingWeb) GetRemovedStaledDevicesOk() ([]StaleDevice, bool) {
	if o == nil || IsNil(o.RemovedStaledDevices) {
		return nil, false
	}
	return o.RemovedStaledDevices, true
}

// HasRemovedStaledDevices returns a boolean if a field has been set.
func (o *AccountSettingWeb) HasRemovedStaledDevices() bool {
	if o != nil && !IsNil(o.RemovedStaledDevices) {
		return true
	}

	return false
}

// SetRemovedStaledDevices gets a reference to the given []StaleDevice and assigns it to the RemovedStaledDevices field.
func (o *AccountSettingWeb) SetRemovedStaledDevices(v []StaleDevice) {
	o.RemovedStaledDevices = v
}

// GetMarkedStaledDevices returns the MarkedStaledDevices field value if set, zero value otherwise.
func (o *AccountSettingWeb) GetMarkedStaledDevices() []StaleDevice {
	if o == nil || IsNil(o.MarkedStaledDevices) {
		var ret []StaleDevice
		return ret
	}
	return o.MarkedStaledDevices
}

// GetMarkedStaledDevicesOk returns a tuple with the MarkedStaledDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingWeb) GetMarkedStaledDevicesOk() ([]StaleDevice, bool) {
	if o == nil || IsNil(o.MarkedStaledDevices) {
		return nil, false
	}
	return o.MarkedStaledDevices, true
}

// HasMarkedStaledDevices returns a boolean if a field has been set.
func (o *AccountSettingWeb) HasMarkedStaledDevices() bool {
	if o != nil && !IsNil(o.MarkedStaledDevices) {
		return true
	}

	return false
}

// SetMarkedStaledDevices gets a reference to the given []StaleDevice and assigns it to the MarkedStaledDevices field.
func (o *AccountSettingWeb) SetMarkedStaledDevices(v []StaleDevice) {
	o.MarkedStaledDevices = v
}

func (o AccountSettingWeb) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountSettingWeb) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceViewType) {
		toSerialize["deviceViewType"] = o.DeviceViewType
	}
	if !IsNil(o.DeviceSortType) {
		toSerialize["deviceSortType"] = o.DeviceSortType
	}
	if !IsNil(o.NukiClubDismissed) {
		toSerialize["nukiClubDismissed"] = o.NukiClubDismissed
	}
	if !IsNil(o.RemovedStaledDevices) {
		toSerialize["removedStaledDevices"] = o.RemovedStaledDevices
	}
	if !IsNil(o.MarkedStaledDevices) {
		toSerialize["markedStaledDevices"] = o.MarkedStaledDevices
	}
	return toSerialize, nil
}

type NullableAccountSettingWeb struct {
	value *AccountSettingWeb
	isSet bool
}

func (v NullableAccountSettingWeb) Get() *AccountSettingWeb {
	return v.value
}

func (v *NullableAccountSettingWeb) Set(val *AccountSettingWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountSettingWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountSettingWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountSettingWeb(val *AccountSettingWeb) *NullableAccountSettingWeb {
	return &NullableAccountSettingWeb{value: val, isSet: true}
}

func (v NullableAccountSettingWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountSettingWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


