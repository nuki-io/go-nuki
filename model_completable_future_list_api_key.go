/*
Nuki API

The Nuki Web Api

API version: 3.9.0
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the CompletableFutureListApiKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompletableFutureListApiKey{}

// CompletableFutureListApiKey struct for CompletableFutureListApiKey
type CompletableFutureListApiKey struct {
	Done *bool `json:"done,omitempty"`
	Cancelled *bool `json:"cancelled,omitempty"`
	CompletedExceptionally *bool `json:"completedExceptionally,omitempty"`
	NumberOfDependents *int32 `json:"numberOfDependents,omitempty"`
}

// NewCompletableFutureListApiKey instantiates a new CompletableFutureListApiKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompletableFutureListApiKey() *CompletableFutureListApiKey {
	this := CompletableFutureListApiKey{}
	return &this
}

// NewCompletableFutureListApiKeyWithDefaults instantiates a new CompletableFutureListApiKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompletableFutureListApiKeyWithDefaults() *CompletableFutureListApiKey {
	this := CompletableFutureListApiKey{}
	return &this
}

// GetDone returns the Done field value if set, zero value otherwise.
func (o *CompletableFutureListApiKey) GetDone() bool {
	if o == nil || IsNil(o.Done) {
		var ret bool
		return ret
	}
	return *o.Done
}

// GetDoneOk returns a tuple with the Done field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompletableFutureListApiKey) GetDoneOk() (*bool, bool) {
	if o == nil || IsNil(o.Done) {
		return nil, false
	}
	return o.Done, true
}

// HasDone returns a boolean if a field has been set.
func (o *CompletableFutureListApiKey) HasDone() bool {
	if o != nil && !IsNil(o.Done) {
		return true
	}

	return false
}

// SetDone gets a reference to the given bool and assigns it to the Done field.
func (o *CompletableFutureListApiKey) SetDone(v bool) {
	o.Done = &v
}

// GetCancelled returns the Cancelled field value if set, zero value otherwise.
func (o *CompletableFutureListApiKey) GetCancelled() bool {
	if o == nil || IsNil(o.Cancelled) {
		var ret bool
		return ret
	}
	return *o.Cancelled
}

// GetCancelledOk returns a tuple with the Cancelled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompletableFutureListApiKey) GetCancelledOk() (*bool, bool) {
	if o == nil || IsNil(o.Cancelled) {
		return nil, false
	}
	return o.Cancelled, true
}

// HasCancelled returns a boolean if a field has been set.
func (o *CompletableFutureListApiKey) HasCancelled() bool {
	if o != nil && !IsNil(o.Cancelled) {
		return true
	}

	return false
}

// SetCancelled gets a reference to the given bool and assigns it to the Cancelled field.
func (o *CompletableFutureListApiKey) SetCancelled(v bool) {
	o.Cancelled = &v
}

// GetCompletedExceptionally returns the CompletedExceptionally field value if set, zero value otherwise.
func (o *CompletableFutureListApiKey) GetCompletedExceptionally() bool {
	if o == nil || IsNil(o.CompletedExceptionally) {
		var ret bool
		return ret
	}
	return *o.CompletedExceptionally
}

// GetCompletedExceptionallyOk returns a tuple with the CompletedExceptionally field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompletableFutureListApiKey) GetCompletedExceptionallyOk() (*bool, bool) {
	if o == nil || IsNil(o.CompletedExceptionally) {
		return nil, false
	}
	return o.CompletedExceptionally, true
}

// HasCompletedExceptionally returns a boolean if a field has been set.
func (o *CompletableFutureListApiKey) HasCompletedExceptionally() bool {
	if o != nil && !IsNil(o.CompletedExceptionally) {
		return true
	}

	return false
}

// SetCompletedExceptionally gets a reference to the given bool and assigns it to the CompletedExceptionally field.
func (o *CompletableFutureListApiKey) SetCompletedExceptionally(v bool) {
	o.CompletedExceptionally = &v
}

// GetNumberOfDependents returns the NumberOfDependents field value if set, zero value otherwise.
func (o *CompletableFutureListApiKey) GetNumberOfDependents() int32 {
	if o == nil || IsNil(o.NumberOfDependents) {
		var ret int32
		return ret
	}
	return *o.NumberOfDependents
}

// GetNumberOfDependentsOk returns a tuple with the NumberOfDependents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompletableFutureListApiKey) GetNumberOfDependentsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfDependents) {
		return nil, false
	}
	return o.NumberOfDependents, true
}

// HasNumberOfDependents returns a boolean if a field has been set.
func (o *CompletableFutureListApiKey) HasNumberOfDependents() bool {
	if o != nil && !IsNil(o.NumberOfDependents) {
		return true
	}

	return false
}

// SetNumberOfDependents gets a reference to the given int32 and assigns it to the NumberOfDependents field.
func (o *CompletableFutureListApiKey) SetNumberOfDependents(v int32) {
	o.NumberOfDependents = &v
}

func (o CompletableFutureListApiKey) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompletableFutureListApiKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Done) {
		toSerialize["done"] = o.Done
	}
	if !IsNil(o.Cancelled) {
		toSerialize["cancelled"] = o.Cancelled
	}
	if !IsNil(o.CompletedExceptionally) {
		toSerialize["completedExceptionally"] = o.CompletedExceptionally
	}
	if !IsNil(o.NumberOfDependents) {
		toSerialize["numberOfDependents"] = o.NumberOfDependents
	}
	return toSerialize, nil
}

type NullableCompletableFutureListApiKey struct {
	value *CompletableFutureListApiKey
	isSet bool
}

func (v NullableCompletableFutureListApiKey) Get() *CompletableFutureListApiKey {
	return v.value
}

func (v *NullableCompletableFutureListApiKey) Set(val *CompletableFutureListApiKey) {
	v.value = val
	v.isSet = true
}

func (v NullableCompletableFutureListApiKey) IsSet() bool {
	return v.isSet
}

func (v *NullableCompletableFutureListApiKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompletableFutureListApiKey(val *CompletableFutureListApiKey) *NullableCompletableFutureListApiKey {
	return &NullableCompletableFutureListApiKey{value: val, isSet: true}
}

func (v NullableCompletableFutureListApiKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompletableFutureListApiKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


