/*
Nuki API

The Nuki Web Api

API version: 3.13.1
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AccountOtpEnable type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountOtpEnable{}

// AccountOtpEnable struct for AccountOtpEnable
type AccountOtpEnable struct {
	// The one time password (otp)
	Otp string `json:"otp"`
}

type _AccountOtpEnable AccountOtpEnable

// NewAccountOtpEnable instantiates a new AccountOtpEnable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountOtpEnable(otp string) *AccountOtpEnable {
	this := AccountOtpEnable{}
	this.Otp = otp
	return &this
}

// NewAccountOtpEnableWithDefaults instantiates a new AccountOtpEnable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountOtpEnableWithDefaults() *AccountOtpEnable {
	this := AccountOtpEnable{}
	return &this
}

// GetOtp returns the Otp field value
func (o *AccountOtpEnable) GetOtp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Otp
}

// GetOtpOk returns a tuple with the Otp field value
// and a boolean to check if the value has been set.
func (o *AccountOtpEnable) GetOtpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Otp, true
}

// SetOtp sets field value
func (o *AccountOtpEnable) SetOtp(v string) {
	o.Otp = v
}

func (o AccountOtpEnable) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountOtpEnable) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["otp"] = o.Otp
	return toSerialize, nil
}

func (o *AccountOtpEnable) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"otp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountOtpEnable := _AccountOtpEnable{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountOtpEnable)

	if err != nil {
		return err
	}

	*o = AccountOtpEnable(varAccountOtpEnable)

	return err
}

type NullableAccountOtpEnable struct {
	value *AccountOtpEnable
	isSet bool
}

func (v NullableAccountOtpEnable) Get() *AccountOtpEnable {
	return v.value
}

func (v *NullableAccountOtpEnable) Set(val *AccountOtpEnable) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountOtpEnable) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountOtpEnable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountOtpEnable(val *AccountOtpEnable) *NullableAccountOtpEnable {
	return &NullableAccountOtpEnable{value: val, isSet: true}
}

func (v NullableAccountOtpEnable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountOtpEnable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


