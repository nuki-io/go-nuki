/*
Nuki API

The Nuki Web Api

API version: 3.10.2
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the SmartlockWebConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmartlockWebConfig{}

// SmartlockWebConfig struct for SmartlockWebConfig
type SmartlockWebConfig struct {
	// True if a battery warning is send via email, if null/not send, the value is not being updated
	BatteryWarningPerMailEnabled *bool `json:"batteryWarningPerMailEnabled,omitempty"`
	// Contains the account ids which have dismissed the lift up handle warning, if null/not send, the value is not being updated. To clear send a empty array []
	DismissedLiftUpHandleWarning []int32 `json:"dismissedLiftUpHandleWarning,omitempty"`
}

// NewSmartlockWebConfig instantiates a new SmartlockWebConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmartlockWebConfig() *SmartlockWebConfig {
	this := SmartlockWebConfig{}
	return &this
}

// NewSmartlockWebConfigWithDefaults instantiates a new SmartlockWebConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmartlockWebConfigWithDefaults() *SmartlockWebConfig {
	this := SmartlockWebConfig{}
	return &this
}

// GetBatteryWarningPerMailEnabled returns the BatteryWarningPerMailEnabled field value if set, zero value otherwise.
func (o *SmartlockWebConfig) GetBatteryWarningPerMailEnabled() bool {
	if o == nil || IsNil(o.BatteryWarningPerMailEnabled) {
		var ret bool
		return ret
	}
	return *o.BatteryWarningPerMailEnabled
}

// GetBatteryWarningPerMailEnabledOk returns a tuple with the BatteryWarningPerMailEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartlockWebConfig) GetBatteryWarningPerMailEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.BatteryWarningPerMailEnabled) {
		return nil, false
	}
	return o.BatteryWarningPerMailEnabled, true
}

// HasBatteryWarningPerMailEnabled returns a boolean if a field has been set.
func (o *SmartlockWebConfig) HasBatteryWarningPerMailEnabled() bool {
	if o != nil && !IsNil(o.BatteryWarningPerMailEnabled) {
		return true
	}

	return false
}

// SetBatteryWarningPerMailEnabled gets a reference to the given bool and assigns it to the BatteryWarningPerMailEnabled field.
func (o *SmartlockWebConfig) SetBatteryWarningPerMailEnabled(v bool) {
	o.BatteryWarningPerMailEnabled = &v
}

// GetDismissedLiftUpHandleWarning returns the DismissedLiftUpHandleWarning field value if set, zero value otherwise.
func (o *SmartlockWebConfig) GetDismissedLiftUpHandleWarning() []int32 {
	if o == nil || IsNil(o.DismissedLiftUpHandleWarning) {
		var ret []int32
		return ret
	}
	return o.DismissedLiftUpHandleWarning
}

// GetDismissedLiftUpHandleWarningOk returns a tuple with the DismissedLiftUpHandleWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartlockWebConfig) GetDismissedLiftUpHandleWarningOk() ([]int32, bool) {
	if o == nil || IsNil(o.DismissedLiftUpHandleWarning) {
		return nil, false
	}
	return o.DismissedLiftUpHandleWarning, true
}

// HasDismissedLiftUpHandleWarning returns a boolean if a field has been set.
func (o *SmartlockWebConfig) HasDismissedLiftUpHandleWarning() bool {
	if o != nil && !IsNil(o.DismissedLiftUpHandleWarning) {
		return true
	}

	return false
}

// SetDismissedLiftUpHandleWarning gets a reference to the given []int32 and assigns it to the DismissedLiftUpHandleWarning field.
func (o *SmartlockWebConfig) SetDismissedLiftUpHandleWarning(v []int32) {
	o.DismissedLiftUpHandleWarning = v
}

func (o SmartlockWebConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmartlockWebConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BatteryWarningPerMailEnabled) {
		toSerialize["batteryWarningPerMailEnabled"] = o.BatteryWarningPerMailEnabled
	}
	if !IsNil(o.DismissedLiftUpHandleWarning) {
		toSerialize["dismissedLiftUpHandleWarning"] = o.DismissedLiftUpHandleWarning
	}
	return toSerialize, nil
}

type NullableSmartlockWebConfig struct {
	value *SmartlockWebConfig
	isSet bool
}

func (v NullableSmartlockWebConfig) Get() *SmartlockWebConfig {
	return v.value
}

func (v *NullableSmartlockWebConfig) Set(val *SmartlockWebConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSmartlockWebConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSmartlockWebConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmartlockWebConfig(val *SmartlockWebConfig) *NullableSmartlockWebConfig {
	return &NullableSmartlockWebConfig{value: val, isSet: true}
}

func (v NullableSmartlockWebConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmartlockWebConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


