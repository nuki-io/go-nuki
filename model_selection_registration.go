/*
Nuki API

The Nuki Web Api

API version: 3.8.1
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the SelectionRegistration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SelectionRegistration{}

// SelectionRegistration struct for SelectionRegistration
type SelectionRegistration struct {
	Canceling *bool `json:"canceling,omitempty"`
	InterestOperations *int32 `json:"interestOperations,omitempty"`
	SelectionListener map[string]interface{} `json:"selectionListener,omitempty"`
	ReadyOperations *int32 `json:"readyOperations,omitempty"`
	SelectableChannel *SelectableChannel `json:"selectableChannel,omitempty"`
	WakeupListener map[string]interface{} `json:"wakeupListener,omitempty"`
	Readable *bool `json:"readable,omitempty"`
	Writable *bool `json:"writable,omitempty"`
	Connectable *bool `json:"connectable,omitempty"`
	InterestReady *bool `json:"interestReady,omitempty"`
}

// NewSelectionRegistration instantiates a new SelectionRegistration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSelectionRegistration() *SelectionRegistration {
	this := SelectionRegistration{}
	return &this
}

// NewSelectionRegistrationWithDefaults instantiates a new SelectionRegistration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSelectionRegistrationWithDefaults() *SelectionRegistration {
	this := SelectionRegistration{}
	return &this
}

// GetCanceling returns the Canceling field value if set, zero value otherwise.
func (o *SelectionRegistration) GetCanceling() bool {
	if o == nil || IsNil(o.Canceling) {
		var ret bool
		return ret
	}
	return *o.Canceling
}

// GetCancelingOk returns a tuple with the Canceling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelectionRegistration) GetCancelingOk() (*bool, bool) {
	if o == nil || IsNil(o.Canceling) {
		return nil, false
	}
	return o.Canceling, true
}

// HasCanceling returns a boolean if a field has been set.
func (o *SelectionRegistration) HasCanceling() bool {
	if o != nil && !IsNil(o.Canceling) {
		return true
	}

	return false
}

// SetCanceling gets a reference to the given bool and assigns it to the Canceling field.
func (o *SelectionRegistration) SetCanceling(v bool) {
	o.Canceling = &v
}

// GetInterestOperations returns the InterestOperations field value if set, zero value otherwise.
func (o *SelectionRegistration) GetInterestOperations() int32 {
	if o == nil || IsNil(o.InterestOperations) {
		var ret int32
		return ret
	}
	return *o.InterestOperations
}

// GetInterestOperationsOk returns a tuple with the InterestOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelectionRegistration) GetInterestOperationsOk() (*int32, bool) {
	if o == nil || IsNil(o.InterestOperations) {
		return nil, false
	}
	return o.InterestOperations, true
}

// HasInterestOperations returns a boolean if a field has been set.
func (o *SelectionRegistration) HasInterestOperations() bool {
	if o != nil && !IsNil(o.InterestOperations) {
		return true
	}

	return false
}

// SetInterestOperations gets a reference to the given int32 and assigns it to the InterestOperations field.
func (o *SelectionRegistration) SetInterestOperations(v int32) {
	o.InterestOperations = &v
}

// GetSelectionListener returns the SelectionListener field value if set, zero value otherwise.
func (o *SelectionRegistration) GetSelectionListener() map[string]interface{} {
	if o == nil || IsNil(o.SelectionListener) {
		var ret map[string]interface{}
		return ret
	}
	return o.SelectionListener
}

// GetSelectionListenerOk returns a tuple with the SelectionListener field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelectionRegistration) GetSelectionListenerOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.SelectionListener) {
		return map[string]interface{}{}, false
	}
	return o.SelectionListener, true
}

// HasSelectionListener returns a boolean if a field has been set.
func (o *SelectionRegistration) HasSelectionListener() bool {
	if o != nil && !IsNil(o.SelectionListener) {
		return true
	}

	return false
}

// SetSelectionListener gets a reference to the given map[string]interface{} and assigns it to the SelectionListener field.
func (o *SelectionRegistration) SetSelectionListener(v map[string]interface{}) {
	o.SelectionListener = v
}

// GetReadyOperations returns the ReadyOperations field value if set, zero value otherwise.
func (o *SelectionRegistration) GetReadyOperations() int32 {
	if o == nil || IsNil(o.ReadyOperations) {
		var ret int32
		return ret
	}
	return *o.ReadyOperations
}

// GetReadyOperationsOk returns a tuple with the ReadyOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelectionRegistration) GetReadyOperationsOk() (*int32, bool) {
	if o == nil || IsNil(o.ReadyOperations) {
		return nil, false
	}
	return o.ReadyOperations, true
}

// HasReadyOperations returns a boolean if a field has been set.
func (o *SelectionRegistration) HasReadyOperations() bool {
	if o != nil && !IsNil(o.ReadyOperations) {
		return true
	}

	return false
}

// SetReadyOperations gets a reference to the given int32 and assigns it to the ReadyOperations field.
func (o *SelectionRegistration) SetReadyOperations(v int32) {
	o.ReadyOperations = &v
}

// GetSelectableChannel returns the SelectableChannel field value if set, zero value otherwise.
func (o *SelectionRegistration) GetSelectableChannel() SelectableChannel {
	if o == nil || IsNil(o.SelectableChannel) {
		var ret SelectableChannel
		return ret
	}
	return *o.SelectableChannel
}

// GetSelectableChannelOk returns a tuple with the SelectableChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelectionRegistration) GetSelectableChannelOk() (*SelectableChannel, bool) {
	if o == nil || IsNil(o.SelectableChannel) {
		return nil, false
	}
	return o.SelectableChannel, true
}

// HasSelectableChannel returns a boolean if a field has been set.
func (o *SelectionRegistration) HasSelectableChannel() bool {
	if o != nil && !IsNil(o.SelectableChannel) {
		return true
	}

	return false
}

// SetSelectableChannel gets a reference to the given SelectableChannel and assigns it to the SelectableChannel field.
func (o *SelectionRegistration) SetSelectableChannel(v SelectableChannel) {
	o.SelectableChannel = &v
}

// GetWakeupListener returns the WakeupListener field value if set, zero value otherwise.
func (o *SelectionRegistration) GetWakeupListener() map[string]interface{} {
	if o == nil || IsNil(o.WakeupListener) {
		var ret map[string]interface{}
		return ret
	}
	return o.WakeupListener
}

// GetWakeupListenerOk returns a tuple with the WakeupListener field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelectionRegistration) GetWakeupListenerOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.WakeupListener) {
		return map[string]interface{}{}, false
	}
	return o.WakeupListener, true
}

// HasWakeupListener returns a boolean if a field has been set.
func (o *SelectionRegistration) HasWakeupListener() bool {
	if o != nil && !IsNil(o.WakeupListener) {
		return true
	}

	return false
}

// SetWakeupListener gets a reference to the given map[string]interface{} and assigns it to the WakeupListener field.
func (o *SelectionRegistration) SetWakeupListener(v map[string]interface{}) {
	o.WakeupListener = v
}

// GetReadable returns the Readable field value if set, zero value otherwise.
func (o *SelectionRegistration) GetReadable() bool {
	if o == nil || IsNil(o.Readable) {
		var ret bool
		return ret
	}
	return *o.Readable
}

// GetReadableOk returns a tuple with the Readable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelectionRegistration) GetReadableOk() (*bool, bool) {
	if o == nil || IsNil(o.Readable) {
		return nil, false
	}
	return o.Readable, true
}

// HasReadable returns a boolean if a field has been set.
func (o *SelectionRegistration) HasReadable() bool {
	if o != nil && !IsNil(o.Readable) {
		return true
	}

	return false
}

// SetReadable gets a reference to the given bool and assigns it to the Readable field.
func (o *SelectionRegistration) SetReadable(v bool) {
	o.Readable = &v
}

// GetWritable returns the Writable field value if set, zero value otherwise.
func (o *SelectionRegistration) GetWritable() bool {
	if o == nil || IsNil(o.Writable) {
		var ret bool
		return ret
	}
	return *o.Writable
}

// GetWritableOk returns a tuple with the Writable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelectionRegistration) GetWritableOk() (*bool, bool) {
	if o == nil || IsNil(o.Writable) {
		return nil, false
	}
	return o.Writable, true
}

// HasWritable returns a boolean if a field has been set.
func (o *SelectionRegistration) HasWritable() bool {
	if o != nil && !IsNil(o.Writable) {
		return true
	}

	return false
}

// SetWritable gets a reference to the given bool and assigns it to the Writable field.
func (o *SelectionRegistration) SetWritable(v bool) {
	o.Writable = &v
}

// GetConnectable returns the Connectable field value if set, zero value otherwise.
func (o *SelectionRegistration) GetConnectable() bool {
	if o == nil || IsNil(o.Connectable) {
		var ret bool
		return ret
	}
	return *o.Connectable
}

// GetConnectableOk returns a tuple with the Connectable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelectionRegistration) GetConnectableOk() (*bool, bool) {
	if o == nil || IsNil(o.Connectable) {
		return nil, false
	}
	return o.Connectable, true
}

// HasConnectable returns a boolean if a field has been set.
func (o *SelectionRegistration) HasConnectable() bool {
	if o != nil && !IsNil(o.Connectable) {
		return true
	}

	return false
}

// SetConnectable gets a reference to the given bool and assigns it to the Connectable field.
func (o *SelectionRegistration) SetConnectable(v bool) {
	o.Connectable = &v
}

// GetInterestReady returns the InterestReady field value if set, zero value otherwise.
func (o *SelectionRegistration) GetInterestReady() bool {
	if o == nil || IsNil(o.InterestReady) {
		var ret bool
		return ret
	}
	return *o.InterestReady
}

// GetInterestReadyOk returns a tuple with the InterestReady field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelectionRegistration) GetInterestReadyOk() (*bool, bool) {
	if o == nil || IsNil(o.InterestReady) {
		return nil, false
	}
	return o.InterestReady, true
}

// HasInterestReady returns a boolean if a field has been set.
func (o *SelectionRegistration) HasInterestReady() bool {
	if o != nil && !IsNil(o.InterestReady) {
		return true
	}

	return false
}

// SetInterestReady gets a reference to the given bool and assigns it to the InterestReady field.
func (o *SelectionRegistration) SetInterestReady(v bool) {
	o.InterestReady = &v
}

func (o SelectionRegistration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SelectionRegistration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Canceling) {
		toSerialize["canceling"] = o.Canceling
	}
	if !IsNil(o.InterestOperations) {
		toSerialize["interestOperations"] = o.InterestOperations
	}
	if !IsNil(o.SelectionListener) {
		toSerialize["selectionListener"] = o.SelectionListener
	}
	if !IsNil(o.ReadyOperations) {
		toSerialize["readyOperations"] = o.ReadyOperations
	}
	if !IsNil(o.SelectableChannel) {
		toSerialize["selectableChannel"] = o.SelectableChannel
	}
	if !IsNil(o.WakeupListener) {
		toSerialize["wakeupListener"] = o.WakeupListener
	}
	if !IsNil(o.Readable) {
		toSerialize["readable"] = o.Readable
	}
	if !IsNil(o.Writable) {
		toSerialize["writable"] = o.Writable
	}
	if !IsNil(o.Connectable) {
		toSerialize["connectable"] = o.Connectable
	}
	if !IsNil(o.InterestReady) {
		toSerialize["interestReady"] = o.InterestReady
	}
	return toSerialize, nil
}

type NullableSelectionRegistration struct {
	value *SelectionRegistration
	isSet bool
}

func (v NullableSelectionRegistration) Get() *SelectionRegistration {
	return v.value
}

func (v *NullableSelectionRegistration) Set(val *SelectionRegistration) {
	v.value = val
	v.isSet = true
}

func (v NullableSelectionRegistration) IsSet() bool {
	return v.isSet
}

func (v *NullableSelectionRegistration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSelectionRegistration(val *SelectionRegistration) *NullableSelectionRegistration {
	return &NullableSelectionRegistration{value: val, isSet: true}
}

func (v NullableSelectionRegistration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSelectionRegistration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


