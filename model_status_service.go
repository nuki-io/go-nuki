/*
Nuki API

The Nuki Web Api

API version: 0.0
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the StatusService type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatusService{}

// StatusService struct for StatusService
type StatusService struct {
	Context *Context `json:"context,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Started *bool `json:"started,omitempty"`
	ConnegService *ConnegService `json:"connegService,omitempty"`
	ContactEmail *string `json:"contactEmail,omitempty"`
	ConverterService *ConverterService `json:"converterService,omitempty"`
	HomeRef *Reference `json:"homeRef,omitempty"`
	MetadataService *MetadataService `json:"metadataService,omitempty"`
	Overwriting *bool `json:"overwriting,omitempty"`
	Stopped *bool `json:"stopped,omitempty"`
}

// NewStatusService instantiates a new StatusService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusService() *StatusService {
	this := StatusService{}
	return &this
}

// NewStatusServiceWithDefaults instantiates a new StatusService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusServiceWithDefaults() *StatusService {
	this := StatusService{}
	return &this
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *StatusService) GetContext() Context {
	if o == nil || IsNil(o.Context) {
		var ret Context
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusService) GetContextOk() (*Context, bool) {
	if o == nil || IsNil(o.Context) {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *StatusService) HasContext() bool {
	if o != nil && !IsNil(o.Context) {
		return true
	}

	return false
}

// SetContext gets a reference to the given Context and assigns it to the Context field.
func (o *StatusService) SetContext(v Context) {
	o.Context = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *StatusService) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusService) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *StatusService) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *StatusService) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetStarted returns the Started field value if set, zero value otherwise.
func (o *StatusService) GetStarted() bool {
	if o == nil || IsNil(o.Started) {
		var ret bool
		return ret
	}
	return *o.Started
}

// GetStartedOk returns a tuple with the Started field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusService) GetStartedOk() (*bool, bool) {
	if o == nil || IsNil(o.Started) {
		return nil, false
	}
	return o.Started, true
}

// HasStarted returns a boolean if a field has been set.
func (o *StatusService) HasStarted() bool {
	if o != nil && !IsNil(o.Started) {
		return true
	}

	return false
}

// SetStarted gets a reference to the given bool and assigns it to the Started field.
func (o *StatusService) SetStarted(v bool) {
	o.Started = &v
}

// GetConnegService returns the ConnegService field value if set, zero value otherwise.
func (o *StatusService) GetConnegService() ConnegService {
	if o == nil || IsNil(o.ConnegService) {
		var ret ConnegService
		return ret
	}
	return *o.ConnegService
}

// GetConnegServiceOk returns a tuple with the ConnegService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusService) GetConnegServiceOk() (*ConnegService, bool) {
	if o == nil || IsNil(o.ConnegService) {
		return nil, false
	}
	return o.ConnegService, true
}

// HasConnegService returns a boolean if a field has been set.
func (o *StatusService) HasConnegService() bool {
	if o != nil && !IsNil(o.ConnegService) {
		return true
	}

	return false
}

// SetConnegService gets a reference to the given ConnegService and assigns it to the ConnegService field.
func (o *StatusService) SetConnegService(v ConnegService) {
	o.ConnegService = &v
}

// GetContactEmail returns the ContactEmail field value if set, zero value otherwise.
func (o *StatusService) GetContactEmail() string {
	if o == nil || IsNil(o.ContactEmail) {
		var ret string
		return ret
	}
	return *o.ContactEmail
}

// GetContactEmailOk returns a tuple with the ContactEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusService) GetContactEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ContactEmail) {
		return nil, false
	}
	return o.ContactEmail, true
}

// HasContactEmail returns a boolean if a field has been set.
func (o *StatusService) HasContactEmail() bool {
	if o != nil && !IsNil(o.ContactEmail) {
		return true
	}

	return false
}

// SetContactEmail gets a reference to the given string and assigns it to the ContactEmail field.
func (o *StatusService) SetContactEmail(v string) {
	o.ContactEmail = &v
}

// GetConverterService returns the ConverterService field value if set, zero value otherwise.
func (o *StatusService) GetConverterService() ConverterService {
	if o == nil || IsNil(o.ConverterService) {
		var ret ConverterService
		return ret
	}
	return *o.ConverterService
}

// GetConverterServiceOk returns a tuple with the ConverterService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusService) GetConverterServiceOk() (*ConverterService, bool) {
	if o == nil || IsNil(o.ConverterService) {
		return nil, false
	}
	return o.ConverterService, true
}

// HasConverterService returns a boolean if a field has been set.
func (o *StatusService) HasConverterService() bool {
	if o != nil && !IsNil(o.ConverterService) {
		return true
	}

	return false
}

// SetConverterService gets a reference to the given ConverterService and assigns it to the ConverterService field.
func (o *StatusService) SetConverterService(v ConverterService) {
	o.ConverterService = &v
}

// GetHomeRef returns the HomeRef field value if set, zero value otherwise.
func (o *StatusService) GetHomeRef() Reference {
	if o == nil || IsNil(o.HomeRef) {
		var ret Reference
		return ret
	}
	return *o.HomeRef
}

// GetHomeRefOk returns a tuple with the HomeRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusService) GetHomeRefOk() (*Reference, bool) {
	if o == nil || IsNil(o.HomeRef) {
		return nil, false
	}
	return o.HomeRef, true
}

// HasHomeRef returns a boolean if a field has been set.
func (o *StatusService) HasHomeRef() bool {
	if o != nil && !IsNil(o.HomeRef) {
		return true
	}

	return false
}

// SetHomeRef gets a reference to the given Reference and assigns it to the HomeRef field.
func (o *StatusService) SetHomeRef(v Reference) {
	o.HomeRef = &v
}

// GetMetadataService returns the MetadataService field value if set, zero value otherwise.
func (o *StatusService) GetMetadataService() MetadataService {
	if o == nil || IsNil(o.MetadataService) {
		var ret MetadataService
		return ret
	}
	return *o.MetadataService
}

// GetMetadataServiceOk returns a tuple with the MetadataService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusService) GetMetadataServiceOk() (*MetadataService, bool) {
	if o == nil || IsNil(o.MetadataService) {
		return nil, false
	}
	return o.MetadataService, true
}

// HasMetadataService returns a boolean if a field has been set.
func (o *StatusService) HasMetadataService() bool {
	if o != nil && !IsNil(o.MetadataService) {
		return true
	}

	return false
}

// SetMetadataService gets a reference to the given MetadataService and assigns it to the MetadataService field.
func (o *StatusService) SetMetadataService(v MetadataService) {
	o.MetadataService = &v
}

// GetOverwriting returns the Overwriting field value if set, zero value otherwise.
func (o *StatusService) GetOverwriting() bool {
	if o == nil || IsNil(o.Overwriting) {
		var ret bool
		return ret
	}
	return *o.Overwriting
}

// GetOverwritingOk returns a tuple with the Overwriting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusService) GetOverwritingOk() (*bool, bool) {
	if o == nil || IsNil(o.Overwriting) {
		return nil, false
	}
	return o.Overwriting, true
}

// HasOverwriting returns a boolean if a field has been set.
func (o *StatusService) HasOverwriting() bool {
	if o != nil && !IsNil(o.Overwriting) {
		return true
	}

	return false
}

// SetOverwriting gets a reference to the given bool and assigns it to the Overwriting field.
func (o *StatusService) SetOverwriting(v bool) {
	o.Overwriting = &v
}

// GetStopped returns the Stopped field value if set, zero value otherwise.
func (o *StatusService) GetStopped() bool {
	if o == nil || IsNil(o.Stopped) {
		var ret bool
		return ret
	}
	return *o.Stopped
}

// GetStoppedOk returns a tuple with the Stopped field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusService) GetStoppedOk() (*bool, bool) {
	if o == nil || IsNil(o.Stopped) {
		return nil, false
	}
	return o.Stopped, true
}

// HasStopped returns a boolean if a field has been set.
func (o *StatusService) HasStopped() bool {
	if o != nil && !IsNil(o.Stopped) {
		return true
	}

	return false
}

// SetStopped gets a reference to the given bool and assigns it to the Stopped field.
func (o *StatusService) SetStopped(v bool) {
	o.Stopped = &v
}

func (o StatusService) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatusService) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Context) {
		toSerialize["context"] = o.Context
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Started) {
		toSerialize["started"] = o.Started
	}
	if !IsNil(o.ConnegService) {
		toSerialize["connegService"] = o.ConnegService
	}
	if !IsNil(o.ContactEmail) {
		toSerialize["contactEmail"] = o.ContactEmail
	}
	if !IsNil(o.ConverterService) {
		toSerialize["converterService"] = o.ConverterService
	}
	if !IsNil(o.HomeRef) {
		toSerialize["homeRef"] = o.HomeRef
	}
	if !IsNil(o.MetadataService) {
		toSerialize["metadataService"] = o.MetadataService
	}
	if !IsNil(o.Overwriting) {
		toSerialize["overwriting"] = o.Overwriting
	}
	if !IsNil(o.Stopped) {
		toSerialize["stopped"] = o.Stopped
	}
	return toSerialize, nil
}

type NullableStatusService struct {
	value *StatusService
	isSet bool
}

func (v NullableStatusService) Get() *StatusService {
	return v.value
}

func (v *NullableStatusService) Set(val *StatusService) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusService) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusService(val *StatusService) *NullableStatusService {
	return &NullableStatusService{value: val, isSet: true}
}

func (v NullableStatusService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


