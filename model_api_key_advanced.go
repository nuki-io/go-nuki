/*
Nuki API

The Nuki Web Api

API version: 3.10.2
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the ApiKeyAdvanced type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiKeyAdvanced{}

// ApiKeyAdvanced struct for ApiKeyAdvanced
type ApiKeyAdvanced struct {
	Name *string `json:"name,omitempty"`
	Country *string `json:"country,omitempty"`
	Description *string `json:"description,omitempty"`
	Type *string `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
	Email *string `json:"email,omitempty"`
	WebhookFeatures []string `json:"webhookFeatures,omitempty"`
	WebhookUrl *string `json:"webhookUrl,omitempty"`
	WebhookSentSuccessfully *int32 `json:"webhookSentSuccessfully,omitempty"`
	WebhookSentErroneous *int32 `json:"webhookSentErroneous,omitempty"`
	LastSuccessfulPost *time.Time `json:"lastSuccessfulPost,omitempty"`
	LastPostDuration *int64 `json:"lastPostDuration,omitempty"`
	LastPostSuccesful *bool `json:"lastPostSuccesful,omitempty"`
	Status *string `json:"status,omitempty"`
	WebhookStatus *string `json:"webhookStatus,omitempty"`
	CreationDate *time.Time `json:"creationDate,omitempty"`
	UpdateDate *time.Time `json:"updateDate,omitempty"`
	Restricted *bool `json:"restricted,omitempty"`
}

// NewApiKeyAdvanced instantiates a new ApiKeyAdvanced object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKeyAdvanced() *ApiKeyAdvanced {
	this := ApiKeyAdvanced{}
	return &this
}

// NewApiKeyAdvancedWithDefaults instantiates a new ApiKeyAdvanced object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeyAdvancedWithDefaults() *ApiKeyAdvanced {
	this := ApiKeyAdvanced{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiKeyAdvanced) SetName(v string) {
	o.Name = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *ApiKeyAdvanced) SetCountry(v string) {
	o.Country = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiKeyAdvanced) SetDescription(v string) {
	o.Description = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ApiKeyAdvanced) SetType(v string) {
	o.Type = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ApiKeyAdvanced) SetUrl(v string) {
	o.Url = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ApiKeyAdvanced) SetEmail(v string) {
	o.Email = &v
}

// GetWebhookFeatures returns the WebhookFeatures field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetWebhookFeatures() []string {
	if o == nil || IsNil(o.WebhookFeatures) {
		var ret []string
		return ret
	}
	return o.WebhookFeatures
}

// GetWebhookFeaturesOk returns a tuple with the WebhookFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetWebhookFeaturesOk() ([]string, bool) {
	if o == nil || IsNil(o.WebhookFeatures) {
		return nil, false
	}
	return o.WebhookFeatures, true
}

// HasWebhookFeatures returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasWebhookFeatures() bool {
	if o != nil && !IsNil(o.WebhookFeatures) {
		return true
	}

	return false
}

// SetWebhookFeatures gets a reference to the given []string and assigns it to the WebhookFeatures field.
func (o *ApiKeyAdvanced) SetWebhookFeatures(v []string) {
	o.WebhookFeatures = v
}

// GetWebhookUrl returns the WebhookUrl field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetWebhookUrl() string {
	if o == nil || IsNil(o.WebhookUrl) {
		var ret string
		return ret
	}
	return *o.WebhookUrl
}

// GetWebhookUrlOk returns a tuple with the WebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetWebhookUrlOk() (*string, bool) {
	if o == nil || IsNil(o.WebhookUrl) {
		return nil, false
	}
	return o.WebhookUrl, true
}

// HasWebhookUrl returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasWebhookUrl() bool {
	if o != nil && !IsNil(o.WebhookUrl) {
		return true
	}

	return false
}

// SetWebhookUrl gets a reference to the given string and assigns it to the WebhookUrl field.
func (o *ApiKeyAdvanced) SetWebhookUrl(v string) {
	o.WebhookUrl = &v
}

// GetWebhookSentSuccessfully returns the WebhookSentSuccessfully field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetWebhookSentSuccessfully() int32 {
	if o == nil || IsNil(o.WebhookSentSuccessfully) {
		var ret int32
		return ret
	}
	return *o.WebhookSentSuccessfully
}

// GetWebhookSentSuccessfullyOk returns a tuple with the WebhookSentSuccessfully field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetWebhookSentSuccessfullyOk() (*int32, bool) {
	if o == nil || IsNil(o.WebhookSentSuccessfully) {
		return nil, false
	}
	return o.WebhookSentSuccessfully, true
}

// HasWebhookSentSuccessfully returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasWebhookSentSuccessfully() bool {
	if o != nil && !IsNil(o.WebhookSentSuccessfully) {
		return true
	}

	return false
}

// SetWebhookSentSuccessfully gets a reference to the given int32 and assigns it to the WebhookSentSuccessfully field.
func (o *ApiKeyAdvanced) SetWebhookSentSuccessfully(v int32) {
	o.WebhookSentSuccessfully = &v
}

// GetWebhookSentErroneous returns the WebhookSentErroneous field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetWebhookSentErroneous() int32 {
	if o == nil || IsNil(o.WebhookSentErroneous) {
		var ret int32
		return ret
	}
	return *o.WebhookSentErroneous
}

// GetWebhookSentErroneousOk returns a tuple with the WebhookSentErroneous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetWebhookSentErroneousOk() (*int32, bool) {
	if o == nil || IsNil(o.WebhookSentErroneous) {
		return nil, false
	}
	return o.WebhookSentErroneous, true
}

// HasWebhookSentErroneous returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasWebhookSentErroneous() bool {
	if o != nil && !IsNil(o.WebhookSentErroneous) {
		return true
	}

	return false
}

// SetWebhookSentErroneous gets a reference to the given int32 and assigns it to the WebhookSentErroneous field.
func (o *ApiKeyAdvanced) SetWebhookSentErroneous(v int32) {
	o.WebhookSentErroneous = &v
}

// GetLastSuccessfulPost returns the LastSuccessfulPost field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetLastSuccessfulPost() time.Time {
	if o == nil || IsNil(o.LastSuccessfulPost) {
		var ret time.Time
		return ret
	}
	return *o.LastSuccessfulPost
}

// GetLastSuccessfulPostOk returns a tuple with the LastSuccessfulPost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetLastSuccessfulPostOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSuccessfulPost) {
		return nil, false
	}
	return o.LastSuccessfulPost, true
}

// HasLastSuccessfulPost returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasLastSuccessfulPost() bool {
	if o != nil && !IsNil(o.LastSuccessfulPost) {
		return true
	}

	return false
}

// SetLastSuccessfulPost gets a reference to the given time.Time and assigns it to the LastSuccessfulPost field.
func (o *ApiKeyAdvanced) SetLastSuccessfulPost(v time.Time) {
	o.LastSuccessfulPost = &v
}

// GetLastPostDuration returns the LastPostDuration field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetLastPostDuration() int64 {
	if o == nil || IsNil(o.LastPostDuration) {
		var ret int64
		return ret
	}
	return *o.LastPostDuration
}

// GetLastPostDurationOk returns a tuple with the LastPostDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetLastPostDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.LastPostDuration) {
		return nil, false
	}
	return o.LastPostDuration, true
}

// HasLastPostDuration returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasLastPostDuration() bool {
	if o != nil && !IsNil(o.LastPostDuration) {
		return true
	}

	return false
}

// SetLastPostDuration gets a reference to the given int64 and assigns it to the LastPostDuration field.
func (o *ApiKeyAdvanced) SetLastPostDuration(v int64) {
	o.LastPostDuration = &v
}

// GetLastPostSuccesful returns the LastPostSuccesful field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetLastPostSuccesful() bool {
	if o == nil || IsNil(o.LastPostSuccesful) {
		var ret bool
		return ret
	}
	return *o.LastPostSuccesful
}

// GetLastPostSuccesfulOk returns a tuple with the LastPostSuccesful field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetLastPostSuccesfulOk() (*bool, bool) {
	if o == nil || IsNil(o.LastPostSuccesful) {
		return nil, false
	}
	return o.LastPostSuccesful, true
}

// HasLastPostSuccesful returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasLastPostSuccesful() bool {
	if o != nil && !IsNil(o.LastPostSuccesful) {
		return true
	}

	return false
}

// SetLastPostSuccesful gets a reference to the given bool and assigns it to the LastPostSuccesful field.
func (o *ApiKeyAdvanced) SetLastPostSuccesful(v bool) {
	o.LastPostSuccesful = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApiKeyAdvanced) SetStatus(v string) {
	o.Status = &v
}

// GetWebhookStatus returns the WebhookStatus field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetWebhookStatus() string {
	if o == nil || IsNil(o.WebhookStatus) {
		var ret string
		return ret
	}
	return *o.WebhookStatus
}

// GetWebhookStatusOk returns a tuple with the WebhookStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetWebhookStatusOk() (*string, bool) {
	if o == nil || IsNil(o.WebhookStatus) {
		return nil, false
	}
	return o.WebhookStatus, true
}

// HasWebhookStatus returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasWebhookStatus() bool {
	if o != nil && !IsNil(o.WebhookStatus) {
		return true
	}

	return false
}

// SetWebhookStatus gets a reference to the given string and assigns it to the WebhookStatus field.
func (o *ApiKeyAdvanced) SetWebhookStatus(v string) {
	o.WebhookStatus = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetCreationDate() time.Time {
	if o == nil || IsNil(o.CreationDate) {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasCreationDate() bool {
	if o != nil && !IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *ApiKeyAdvanced) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetUpdateDate returns the UpdateDate field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetUpdateDate() time.Time {
	if o == nil || IsNil(o.UpdateDate) {
		var ret time.Time
		return ret
	}
	return *o.UpdateDate
}

// GetUpdateDateOk returns a tuple with the UpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetUpdateDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdateDate) {
		return nil, false
	}
	return o.UpdateDate, true
}

// HasUpdateDate returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasUpdateDate() bool {
	if o != nil && !IsNil(o.UpdateDate) {
		return true
	}

	return false
}

// SetUpdateDate gets a reference to the given time.Time and assigns it to the UpdateDate field.
func (o *ApiKeyAdvanced) SetUpdateDate(v time.Time) {
	o.UpdateDate = &v
}

// GetRestricted returns the Restricted field value if set, zero value otherwise.
func (o *ApiKeyAdvanced) GetRestricted() bool {
	if o == nil || IsNil(o.Restricted) {
		var ret bool
		return ret
	}
	return *o.Restricted
}

// GetRestrictedOk returns a tuple with the Restricted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyAdvanced) GetRestrictedOk() (*bool, bool) {
	if o == nil || IsNil(o.Restricted) {
		return nil, false
	}
	return o.Restricted, true
}

// HasRestricted returns a boolean if a field has been set.
func (o *ApiKeyAdvanced) HasRestricted() bool {
	if o != nil && !IsNil(o.Restricted) {
		return true
	}

	return false
}

// SetRestricted gets a reference to the given bool and assigns it to the Restricted field.
func (o *ApiKeyAdvanced) SetRestricted(v bool) {
	o.Restricted = &v
}

func (o ApiKeyAdvanced) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiKeyAdvanced) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.WebhookFeatures) {
		toSerialize["webhookFeatures"] = o.WebhookFeatures
	}
	if !IsNil(o.WebhookUrl) {
		toSerialize["webhookUrl"] = o.WebhookUrl
	}
	if !IsNil(o.WebhookSentSuccessfully) {
		toSerialize["webhookSentSuccessfully"] = o.WebhookSentSuccessfully
	}
	if !IsNil(o.WebhookSentErroneous) {
		toSerialize["webhookSentErroneous"] = o.WebhookSentErroneous
	}
	if !IsNil(o.LastSuccessfulPost) {
		toSerialize["lastSuccessfulPost"] = o.LastSuccessfulPost
	}
	if !IsNil(o.LastPostDuration) {
		toSerialize["lastPostDuration"] = o.LastPostDuration
	}
	if !IsNil(o.LastPostSuccesful) {
		toSerialize["lastPostSuccesful"] = o.LastPostSuccesful
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.WebhookStatus) {
		toSerialize["webhookStatus"] = o.WebhookStatus
	}
	if !IsNil(o.CreationDate) {
		toSerialize["creationDate"] = o.CreationDate
	}
	if !IsNil(o.UpdateDate) {
		toSerialize["updateDate"] = o.UpdateDate
	}
	if !IsNil(o.Restricted) {
		toSerialize["restricted"] = o.Restricted
	}
	return toSerialize, nil
}

type NullableApiKeyAdvanced struct {
	value *ApiKeyAdvanced
	isSet bool
}

func (v NullableApiKeyAdvanced) Get() *ApiKeyAdvanced {
	return v.value
}

func (v *NullableApiKeyAdvanced) Set(val *ApiKeyAdvanced) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKeyAdvanced) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKeyAdvanced) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKeyAdvanced(val *ApiKeyAdvanced) *NullableApiKeyAdvanced {
	return &NullableApiKeyAdvanced{value: val, isSet: true}
}

func (v NullableApiKeyAdvanced) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKeyAdvanced) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


