/*
Nuki API

The Nuki Web Api

API version: 3.9.0
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the TunnelService type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TunnelService{}

// TunnelService struct for TunnelService
type TunnelService struct {
	Context *Context `json:"context,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Started *bool `json:"started,omitempty"`
	CharacterSetParameter *string `json:"characterSetParameter,omitempty"`
	EncodingParameter *string `json:"encodingParameter,omitempty"`
	ExtensionsTunnel *bool `json:"extensionsTunnel,omitempty"`
	HeadersTunnel *bool `json:"headersTunnel,omitempty"`
	LanguageParameter *string `json:"languageParameter,omitempty"`
	MediaTypeParameter *string `json:"mediaTypeParameter,omitempty"`
	MethodHeader *string `json:"methodHeader,omitempty"`
	MethodParameter *string `json:"methodParameter,omitempty"`
	MethodTunnel *bool `json:"methodTunnel,omitempty"`
	PreferencesTunnel *bool `json:"preferencesTunnel,omitempty"`
	QueryTunnel *bool `json:"queryTunnel,omitempty"`
	UserAgentTunnel *bool `json:"userAgentTunnel,omitempty"`
	Stopped *bool `json:"stopped,omitempty"`
}

// NewTunnelService instantiates a new TunnelService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTunnelService() *TunnelService {
	this := TunnelService{}
	return &this
}

// NewTunnelServiceWithDefaults instantiates a new TunnelService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTunnelServiceWithDefaults() *TunnelService {
	this := TunnelService{}
	return &this
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *TunnelService) GetContext() Context {
	if o == nil || IsNil(o.Context) {
		var ret Context
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelService) GetContextOk() (*Context, bool) {
	if o == nil || IsNil(o.Context) {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *TunnelService) HasContext() bool {
	if o != nil && !IsNil(o.Context) {
		return true
	}

	return false
}

// SetContext gets a reference to the given Context and assigns it to the Context field.
func (o *TunnelService) SetContext(v Context) {
	o.Context = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *TunnelService) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelService) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *TunnelService) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *TunnelService) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetStarted returns the Started field value if set, zero value otherwise.
func (o *TunnelService) GetStarted() bool {
	if o == nil || IsNil(o.Started) {
		var ret bool
		return ret
	}
	return *o.Started
}

// GetStartedOk returns a tuple with the Started field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelService) GetStartedOk() (*bool, bool) {
	if o == nil || IsNil(o.Started) {
		return nil, false
	}
	return o.Started, true
}

// HasStarted returns a boolean if a field has been set.
func (o *TunnelService) HasStarted() bool {
	if o != nil && !IsNil(o.Started) {
		return true
	}

	return false
}

// SetStarted gets a reference to the given bool and assigns it to the Started field.
func (o *TunnelService) SetStarted(v bool) {
	o.Started = &v
}

// GetCharacterSetParameter returns the CharacterSetParameter field value if set, zero value otherwise.
func (o *TunnelService) GetCharacterSetParameter() string {
	if o == nil || IsNil(o.CharacterSetParameter) {
		var ret string
		return ret
	}
	return *o.CharacterSetParameter
}

// GetCharacterSetParameterOk returns a tuple with the CharacterSetParameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelService) GetCharacterSetParameterOk() (*string, bool) {
	if o == nil || IsNil(o.CharacterSetParameter) {
		return nil, false
	}
	return o.CharacterSetParameter, true
}

// HasCharacterSetParameter returns a boolean if a field has been set.
func (o *TunnelService) HasCharacterSetParameter() bool {
	if o != nil && !IsNil(o.CharacterSetParameter) {
		return true
	}

	return false
}

// SetCharacterSetParameter gets a reference to the given string and assigns it to the CharacterSetParameter field.
func (o *TunnelService) SetCharacterSetParameter(v string) {
	o.CharacterSetParameter = &v
}

// GetEncodingParameter returns the EncodingParameter field value if set, zero value otherwise.
func (o *TunnelService) GetEncodingParameter() string {
	if o == nil || IsNil(o.EncodingParameter) {
		var ret string
		return ret
	}
	return *o.EncodingParameter
}

// GetEncodingParameterOk returns a tuple with the EncodingParameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelService) GetEncodingParameterOk() (*string, bool) {
	if o == nil || IsNil(o.EncodingParameter) {
		return nil, false
	}
	return o.EncodingParameter, true
}

// HasEncodingParameter returns a boolean if a field has been set.
func (o *TunnelService) HasEncodingParameter() bool {
	if o != nil && !IsNil(o.EncodingParameter) {
		return true
	}

	return false
}

// SetEncodingParameter gets a reference to the given string and assigns it to the EncodingParameter field.
func (o *TunnelService) SetEncodingParameter(v string) {
	o.EncodingParameter = &v
}

// GetExtensionsTunnel returns the ExtensionsTunnel field value if set, zero value otherwise.
func (o *TunnelService) GetExtensionsTunnel() bool {
	if o == nil || IsNil(o.ExtensionsTunnel) {
		var ret bool
		return ret
	}
	return *o.ExtensionsTunnel
}

// GetExtensionsTunnelOk returns a tuple with the ExtensionsTunnel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelService) GetExtensionsTunnelOk() (*bool, bool) {
	if o == nil || IsNil(o.ExtensionsTunnel) {
		return nil, false
	}
	return o.ExtensionsTunnel, true
}

// HasExtensionsTunnel returns a boolean if a field has been set.
func (o *TunnelService) HasExtensionsTunnel() bool {
	if o != nil && !IsNil(o.ExtensionsTunnel) {
		return true
	}

	return false
}

// SetExtensionsTunnel gets a reference to the given bool and assigns it to the ExtensionsTunnel field.
func (o *TunnelService) SetExtensionsTunnel(v bool) {
	o.ExtensionsTunnel = &v
}

// GetHeadersTunnel returns the HeadersTunnel field value if set, zero value otherwise.
func (o *TunnelService) GetHeadersTunnel() bool {
	if o == nil || IsNil(o.HeadersTunnel) {
		var ret bool
		return ret
	}
	return *o.HeadersTunnel
}

// GetHeadersTunnelOk returns a tuple with the HeadersTunnel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelService) GetHeadersTunnelOk() (*bool, bool) {
	if o == nil || IsNil(o.HeadersTunnel) {
		return nil, false
	}
	return o.HeadersTunnel, true
}

// HasHeadersTunnel returns a boolean if a field has been set.
func (o *TunnelService) HasHeadersTunnel() bool {
	if o != nil && !IsNil(o.HeadersTunnel) {
		return true
	}

	return false
}

// SetHeadersTunnel gets a reference to the given bool and assigns it to the HeadersTunnel field.
func (o *TunnelService) SetHeadersTunnel(v bool) {
	o.HeadersTunnel = &v
}

// GetLanguageParameter returns the LanguageParameter field value if set, zero value otherwise.
func (o *TunnelService) GetLanguageParameter() string {
	if o == nil || IsNil(o.LanguageParameter) {
		var ret string
		return ret
	}
	return *o.LanguageParameter
}

// GetLanguageParameterOk returns a tuple with the LanguageParameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelService) GetLanguageParameterOk() (*string, bool) {
	if o == nil || IsNil(o.LanguageParameter) {
		return nil, false
	}
	return o.LanguageParameter, true
}

// HasLanguageParameter returns a boolean if a field has been set.
func (o *TunnelService) HasLanguageParameter() bool {
	if o != nil && !IsNil(o.LanguageParameter) {
		return true
	}

	return false
}

// SetLanguageParameter gets a reference to the given string and assigns it to the LanguageParameter field.
func (o *TunnelService) SetLanguageParameter(v string) {
	o.LanguageParameter = &v
}

// GetMediaTypeParameter returns the MediaTypeParameter field value if set, zero value otherwise.
func (o *TunnelService) GetMediaTypeParameter() string {
	if o == nil || IsNil(o.MediaTypeParameter) {
		var ret string
		return ret
	}
	return *o.MediaTypeParameter
}

// GetMediaTypeParameterOk returns a tuple with the MediaTypeParameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelService) GetMediaTypeParameterOk() (*string, bool) {
	if o == nil || IsNil(o.MediaTypeParameter) {
		return nil, false
	}
	return o.MediaTypeParameter, true
}

// HasMediaTypeParameter returns a boolean if a field has been set.
func (o *TunnelService) HasMediaTypeParameter() bool {
	if o != nil && !IsNil(o.MediaTypeParameter) {
		return true
	}

	return false
}

// SetMediaTypeParameter gets a reference to the given string and assigns it to the MediaTypeParameter field.
func (o *TunnelService) SetMediaTypeParameter(v string) {
	o.MediaTypeParameter = &v
}

// GetMethodHeader returns the MethodHeader field value if set, zero value otherwise.
func (o *TunnelService) GetMethodHeader() string {
	if o == nil || IsNil(o.MethodHeader) {
		var ret string
		return ret
	}
	return *o.MethodHeader
}

// GetMethodHeaderOk returns a tuple with the MethodHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelService) GetMethodHeaderOk() (*string, bool) {
	if o == nil || IsNil(o.MethodHeader) {
		return nil, false
	}
	return o.MethodHeader, true
}

// HasMethodHeader returns a boolean if a field has been set.
func (o *TunnelService) HasMethodHeader() bool {
	if o != nil && !IsNil(o.MethodHeader) {
		return true
	}

	return false
}

// SetMethodHeader gets a reference to the given string and assigns it to the MethodHeader field.
func (o *TunnelService) SetMethodHeader(v string) {
	o.MethodHeader = &v
}

// GetMethodParameter returns the MethodParameter field value if set, zero value otherwise.
func (o *TunnelService) GetMethodParameter() string {
	if o == nil || IsNil(o.MethodParameter) {
		var ret string
		return ret
	}
	return *o.MethodParameter
}

// GetMethodParameterOk returns a tuple with the MethodParameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelService) GetMethodParameterOk() (*string, bool) {
	if o == nil || IsNil(o.MethodParameter) {
		return nil, false
	}
	return o.MethodParameter, true
}

// HasMethodParameter returns a boolean if a field has been set.
func (o *TunnelService) HasMethodParameter() bool {
	if o != nil && !IsNil(o.MethodParameter) {
		return true
	}

	return false
}

// SetMethodParameter gets a reference to the given string and assigns it to the MethodParameter field.
func (o *TunnelService) SetMethodParameter(v string) {
	o.MethodParameter = &v
}

// GetMethodTunnel returns the MethodTunnel field value if set, zero value otherwise.
func (o *TunnelService) GetMethodTunnel() bool {
	if o == nil || IsNil(o.MethodTunnel) {
		var ret bool
		return ret
	}
	return *o.MethodTunnel
}

// GetMethodTunnelOk returns a tuple with the MethodTunnel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelService) GetMethodTunnelOk() (*bool, bool) {
	if o == nil || IsNil(o.MethodTunnel) {
		return nil, false
	}
	return o.MethodTunnel, true
}

// HasMethodTunnel returns a boolean if a field has been set.
func (o *TunnelService) HasMethodTunnel() bool {
	if o != nil && !IsNil(o.MethodTunnel) {
		return true
	}

	return false
}

// SetMethodTunnel gets a reference to the given bool and assigns it to the MethodTunnel field.
func (o *TunnelService) SetMethodTunnel(v bool) {
	o.MethodTunnel = &v
}

// GetPreferencesTunnel returns the PreferencesTunnel field value if set, zero value otherwise.
func (o *TunnelService) GetPreferencesTunnel() bool {
	if o == nil || IsNil(o.PreferencesTunnel) {
		var ret bool
		return ret
	}
	return *o.PreferencesTunnel
}

// GetPreferencesTunnelOk returns a tuple with the PreferencesTunnel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelService) GetPreferencesTunnelOk() (*bool, bool) {
	if o == nil || IsNil(o.PreferencesTunnel) {
		return nil, false
	}
	return o.PreferencesTunnel, true
}

// HasPreferencesTunnel returns a boolean if a field has been set.
func (o *TunnelService) HasPreferencesTunnel() bool {
	if o != nil && !IsNil(o.PreferencesTunnel) {
		return true
	}

	return false
}

// SetPreferencesTunnel gets a reference to the given bool and assigns it to the PreferencesTunnel field.
func (o *TunnelService) SetPreferencesTunnel(v bool) {
	o.PreferencesTunnel = &v
}

// GetQueryTunnel returns the QueryTunnel field value if set, zero value otherwise.
func (o *TunnelService) GetQueryTunnel() bool {
	if o == nil || IsNil(o.QueryTunnel) {
		var ret bool
		return ret
	}
	return *o.QueryTunnel
}

// GetQueryTunnelOk returns a tuple with the QueryTunnel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelService) GetQueryTunnelOk() (*bool, bool) {
	if o == nil || IsNil(o.QueryTunnel) {
		return nil, false
	}
	return o.QueryTunnel, true
}

// HasQueryTunnel returns a boolean if a field has been set.
func (o *TunnelService) HasQueryTunnel() bool {
	if o != nil && !IsNil(o.QueryTunnel) {
		return true
	}

	return false
}

// SetQueryTunnel gets a reference to the given bool and assigns it to the QueryTunnel field.
func (o *TunnelService) SetQueryTunnel(v bool) {
	o.QueryTunnel = &v
}

// GetUserAgentTunnel returns the UserAgentTunnel field value if set, zero value otherwise.
func (o *TunnelService) GetUserAgentTunnel() bool {
	if o == nil || IsNil(o.UserAgentTunnel) {
		var ret bool
		return ret
	}
	return *o.UserAgentTunnel
}

// GetUserAgentTunnelOk returns a tuple with the UserAgentTunnel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelService) GetUserAgentTunnelOk() (*bool, bool) {
	if o == nil || IsNil(o.UserAgentTunnel) {
		return nil, false
	}
	return o.UserAgentTunnel, true
}

// HasUserAgentTunnel returns a boolean if a field has been set.
func (o *TunnelService) HasUserAgentTunnel() bool {
	if o != nil && !IsNil(o.UserAgentTunnel) {
		return true
	}

	return false
}

// SetUserAgentTunnel gets a reference to the given bool and assigns it to the UserAgentTunnel field.
func (o *TunnelService) SetUserAgentTunnel(v bool) {
	o.UserAgentTunnel = &v
}

// GetStopped returns the Stopped field value if set, zero value otherwise.
func (o *TunnelService) GetStopped() bool {
	if o == nil || IsNil(o.Stopped) {
		var ret bool
		return ret
	}
	return *o.Stopped
}

// GetStoppedOk returns a tuple with the Stopped field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelService) GetStoppedOk() (*bool, bool) {
	if o == nil || IsNil(o.Stopped) {
		return nil, false
	}
	return o.Stopped, true
}

// HasStopped returns a boolean if a field has been set.
func (o *TunnelService) HasStopped() bool {
	if o != nil && !IsNil(o.Stopped) {
		return true
	}

	return false
}

// SetStopped gets a reference to the given bool and assigns it to the Stopped field.
func (o *TunnelService) SetStopped(v bool) {
	o.Stopped = &v
}

func (o TunnelService) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TunnelService) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Context) {
		toSerialize["context"] = o.Context
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Started) {
		toSerialize["started"] = o.Started
	}
	if !IsNil(o.CharacterSetParameter) {
		toSerialize["characterSetParameter"] = o.CharacterSetParameter
	}
	if !IsNil(o.EncodingParameter) {
		toSerialize["encodingParameter"] = o.EncodingParameter
	}
	if !IsNil(o.ExtensionsTunnel) {
		toSerialize["extensionsTunnel"] = o.ExtensionsTunnel
	}
	if !IsNil(o.HeadersTunnel) {
		toSerialize["headersTunnel"] = o.HeadersTunnel
	}
	if !IsNil(o.LanguageParameter) {
		toSerialize["languageParameter"] = o.LanguageParameter
	}
	if !IsNil(o.MediaTypeParameter) {
		toSerialize["mediaTypeParameter"] = o.MediaTypeParameter
	}
	if !IsNil(o.MethodHeader) {
		toSerialize["methodHeader"] = o.MethodHeader
	}
	if !IsNil(o.MethodParameter) {
		toSerialize["methodParameter"] = o.MethodParameter
	}
	if !IsNil(o.MethodTunnel) {
		toSerialize["methodTunnel"] = o.MethodTunnel
	}
	if !IsNil(o.PreferencesTunnel) {
		toSerialize["preferencesTunnel"] = o.PreferencesTunnel
	}
	if !IsNil(o.QueryTunnel) {
		toSerialize["queryTunnel"] = o.QueryTunnel
	}
	if !IsNil(o.UserAgentTunnel) {
		toSerialize["userAgentTunnel"] = o.UserAgentTunnel
	}
	if !IsNil(o.Stopped) {
		toSerialize["stopped"] = o.Stopped
	}
	return toSerialize, nil
}

type NullableTunnelService struct {
	value *TunnelService
	isSet bool
}

func (v NullableTunnelService) Get() *TunnelService {
	return v.value
}

func (v *NullableTunnelService) Set(val *TunnelService) {
	v.value = val
	v.isSet = true
}

func (v NullableTunnelService) IsSet() bool {
	return v.isSet
}

func (v *NullableTunnelService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTunnelService(val *TunnelService) *NullableTunnelService {
	return &NullableTunnelService{value: val, isSet: true}
}

func (v NullableTunnelService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTunnelService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


