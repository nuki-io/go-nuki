/*
Nuki API

The Nuki Web Api

API version: 0.0
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AddressReservation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddressReservation{}

// AddressReservation struct for AddressReservation
type AddressReservation struct {
	// The id
	Id string `json:"id"`
	// The address id
	AddressId int32 `json:"addressId"`
	// The account id
	AccountId int32 `json:"accountId"`
	// The email of the guest
	Email string `json:"email"`
	// The name of the guest
	Name string `json:"name"`
	// The number of guests
	Guests int32 `json:"guests"`
	// The number of guests issued
	GuestsIssued int32 `json:"guestsIssued"`
	// True if a keypad authorization was issued
	KeypadIssued bool `json:"keypadIssued"`
	// The state
	State string `json:"state"`
	// The optional service id if the address is from an partner service
	ServiceId *string `json:"serviceId,omitempty"`
	// The reference (booking code)
	Reference *string `json:"reference,omitempty"`
	// The automation state
	Automation int32 `json:"automation"`
	// True if the user has checked in, false if the check in is pending, null if it isn't monitored
	CheckedIn *bool `json:"checkedIn,omitempty"`
	// The start date
	StartDate time.Time `json:"startDate"`
	// The end date
	EndDate time.Time `json:"endDate"`
	// The update date
	UpdateDate time.Time `json:"updateDate"`
	IsCurrentlyIssuingAuth bool `json:"isCurrentlyIssuingAuth"`
	IsCurrentlyRevokingAuth bool `json:"isCurrentlyRevokingAuth"`
	HasCustomAccessTimes bool `json:"hasCustomAccessTimes"`
	CurrentlyIssuingAuth *bool `json:"currentlyIssuingAuth,omitempty"`
	CurrentlyRevokingAuth *bool `json:"currentlyRevokingAuth,omitempty"`
}

type _AddressReservation AddressReservation

// NewAddressReservation instantiates a new AddressReservation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressReservation(id string, addressId int32, accountId int32, email string, name string, guests int32, guestsIssued int32, keypadIssued bool, state string, automation int32, startDate time.Time, endDate time.Time, updateDate time.Time, isCurrentlyIssuingAuth bool, isCurrentlyRevokingAuth bool, hasCustomAccessTimes bool) *AddressReservation {
	this := AddressReservation{}
	this.Id = id
	this.AddressId = addressId
	this.AccountId = accountId
	this.Email = email
	this.Name = name
	this.Guests = guests
	this.GuestsIssued = guestsIssued
	this.KeypadIssued = keypadIssued
	this.State = state
	this.Automation = automation
	this.StartDate = startDate
	this.EndDate = endDate
	this.UpdateDate = updateDate
	this.IsCurrentlyIssuingAuth = isCurrentlyIssuingAuth
	this.IsCurrentlyRevokingAuth = isCurrentlyRevokingAuth
	this.HasCustomAccessTimes = hasCustomAccessTimes
	return &this
}

// NewAddressReservationWithDefaults instantiates a new AddressReservation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressReservationWithDefaults() *AddressReservation {
	this := AddressReservation{}
	return &this
}

// GetId returns the Id field value
func (o *AddressReservation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AddressReservation) SetId(v string) {
	o.Id = v
}

// GetAddressId returns the AddressId field value
func (o *AddressReservation) GetAddressId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AddressId
}

// GetAddressIdOk returns a tuple with the AddressId field value
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetAddressIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddressId, true
}

// SetAddressId sets field value
func (o *AddressReservation) SetAddressId(v int32) {
	o.AddressId = v
}

// GetAccountId returns the AccountId field value
func (o *AddressReservation) GetAccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetAccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *AddressReservation) SetAccountId(v int32) {
	o.AccountId = v
}

// GetEmail returns the Email field value
func (o *AddressReservation) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *AddressReservation) SetEmail(v string) {
	o.Email = v
}

// GetName returns the Name field value
func (o *AddressReservation) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddressReservation) SetName(v string) {
	o.Name = v
}

// GetGuests returns the Guests field value
func (o *AddressReservation) GetGuests() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Guests
}

// GetGuestsOk returns a tuple with the Guests field value
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetGuestsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Guests, true
}

// SetGuests sets field value
func (o *AddressReservation) SetGuests(v int32) {
	o.Guests = v
}

// GetGuestsIssued returns the GuestsIssued field value
func (o *AddressReservation) GetGuestsIssued() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.GuestsIssued
}

// GetGuestsIssuedOk returns a tuple with the GuestsIssued field value
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetGuestsIssuedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GuestsIssued, true
}

// SetGuestsIssued sets field value
func (o *AddressReservation) SetGuestsIssued(v int32) {
	o.GuestsIssued = v
}

// GetKeypadIssued returns the KeypadIssued field value
func (o *AddressReservation) GetKeypadIssued() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.KeypadIssued
}

// GetKeypadIssuedOk returns a tuple with the KeypadIssued field value
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetKeypadIssuedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeypadIssued, true
}

// SetKeypadIssued sets field value
func (o *AddressReservation) SetKeypadIssued(v bool) {
	o.KeypadIssued = v
}

// GetState returns the State field value
func (o *AddressReservation) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *AddressReservation) SetState(v string) {
	o.State = v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *AddressReservation) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *AddressReservation) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *AddressReservation) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *AddressReservation) GetReference() string {
	if o == nil || IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *AddressReservation) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *AddressReservation) SetReference(v string) {
	o.Reference = &v
}

// GetAutomation returns the Automation field value
func (o *AddressReservation) GetAutomation() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Automation
}

// GetAutomationOk returns a tuple with the Automation field value
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetAutomationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Automation, true
}

// SetAutomation sets field value
func (o *AddressReservation) SetAutomation(v int32) {
	o.Automation = v
}

// GetCheckedIn returns the CheckedIn field value if set, zero value otherwise.
func (o *AddressReservation) GetCheckedIn() bool {
	if o == nil || IsNil(o.CheckedIn) {
		var ret bool
		return ret
	}
	return *o.CheckedIn
}

// GetCheckedInOk returns a tuple with the CheckedIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetCheckedInOk() (*bool, bool) {
	if o == nil || IsNil(o.CheckedIn) {
		return nil, false
	}
	return o.CheckedIn, true
}

// HasCheckedIn returns a boolean if a field has been set.
func (o *AddressReservation) HasCheckedIn() bool {
	if o != nil && !IsNil(o.CheckedIn) {
		return true
	}

	return false
}

// SetCheckedIn gets a reference to the given bool and assigns it to the CheckedIn field.
func (o *AddressReservation) SetCheckedIn(v bool) {
	o.CheckedIn = &v
}

// GetStartDate returns the StartDate field value
func (o *AddressReservation) GetStartDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *AddressReservation) SetStartDate(v time.Time) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *AddressReservation) GetEndDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *AddressReservation) SetEndDate(v time.Time) {
	o.EndDate = v
}

// GetUpdateDate returns the UpdateDate field value
func (o *AddressReservation) GetUpdateDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdateDate
}

// GetUpdateDateOk returns a tuple with the UpdateDate field value
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetUpdateDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdateDate, true
}

// SetUpdateDate sets field value
func (o *AddressReservation) SetUpdateDate(v time.Time) {
	o.UpdateDate = v
}

// GetIsCurrentlyIssuingAuth returns the IsCurrentlyIssuingAuth field value
func (o *AddressReservation) GetIsCurrentlyIssuingAuth() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsCurrentlyIssuingAuth
}

// GetIsCurrentlyIssuingAuthOk returns a tuple with the IsCurrentlyIssuingAuth field value
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetIsCurrentlyIssuingAuthOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsCurrentlyIssuingAuth, true
}

// SetIsCurrentlyIssuingAuth sets field value
func (o *AddressReservation) SetIsCurrentlyIssuingAuth(v bool) {
	o.IsCurrentlyIssuingAuth = v
}

// GetIsCurrentlyRevokingAuth returns the IsCurrentlyRevokingAuth field value
func (o *AddressReservation) GetIsCurrentlyRevokingAuth() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsCurrentlyRevokingAuth
}

// GetIsCurrentlyRevokingAuthOk returns a tuple with the IsCurrentlyRevokingAuth field value
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetIsCurrentlyRevokingAuthOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsCurrentlyRevokingAuth, true
}

// SetIsCurrentlyRevokingAuth sets field value
func (o *AddressReservation) SetIsCurrentlyRevokingAuth(v bool) {
	o.IsCurrentlyRevokingAuth = v
}

// GetHasCustomAccessTimes returns the HasCustomAccessTimes field value
func (o *AddressReservation) GetHasCustomAccessTimes() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasCustomAccessTimes
}

// GetHasCustomAccessTimesOk returns a tuple with the HasCustomAccessTimes field value
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetHasCustomAccessTimesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasCustomAccessTimes, true
}

// SetHasCustomAccessTimes sets field value
func (o *AddressReservation) SetHasCustomAccessTimes(v bool) {
	o.HasCustomAccessTimes = v
}

// GetCurrentlyIssuingAuth returns the CurrentlyIssuingAuth field value if set, zero value otherwise.
func (o *AddressReservation) GetCurrentlyIssuingAuth() bool {
	if o == nil || IsNil(o.CurrentlyIssuingAuth) {
		var ret bool
		return ret
	}
	return *o.CurrentlyIssuingAuth
}

// GetCurrentlyIssuingAuthOk returns a tuple with the CurrentlyIssuingAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetCurrentlyIssuingAuthOk() (*bool, bool) {
	if o == nil || IsNil(o.CurrentlyIssuingAuth) {
		return nil, false
	}
	return o.CurrentlyIssuingAuth, true
}

// HasCurrentlyIssuingAuth returns a boolean if a field has been set.
func (o *AddressReservation) HasCurrentlyIssuingAuth() bool {
	if o != nil && !IsNil(o.CurrentlyIssuingAuth) {
		return true
	}

	return false
}

// SetCurrentlyIssuingAuth gets a reference to the given bool and assigns it to the CurrentlyIssuingAuth field.
func (o *AddressReservation) SetCurrentlyIssuingAuth(v bool) {
	o.CurrentlyIssuingAuth = &v
}

// GetCurrentlyRevokingAuth returns the CurrentlyRevokingAuth field value if set, zero value otherwise.
func (o *AddressReservation) GetCurrentlyRevokingAuth() bool {
	if o == nil || IsNil(o.CurrentlyRevokingAuth) {
		var ret bool
		return ret
	}
	return *o.CurrentlyRevokingAuth
}

// GetCurrentlyRevokingAuthOk returns a tuple with the CurrentlyRevokingAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressReservation) GetCurrentlyRevokingAuthOk() (*bool, bool) {
	if o == nil || IsNil(o.CurrentlyRevokingAuth) {
		return nil, false
	}
	return o.CurrentlyRevokingAuth, true
}

// HasCurrentlyRevokingAuth returns a boolean if a field has been set.
func (o *AddressReservation) HasCurrentlyRevokingAuth() bool {
	if o != nil && !IsNil(o.CurrentlyRevokingAuth) {
		return true
	}

	return false
}

// SetCurrentlyRevokingAuth gets a reference to the given bool and assigns it to the CurrentlyRevokingAuth field.
func (o *AddressReservation) SetCurrentlyRevokingAuth(v bool) {
	o.CurrentlyRevokingAuth = &v
}

func (o AddressReservation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressReservation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["addressId"] = o.AddressId
	toSerialize["accountId"] = o.AccountId
	toSerialize["email"] = o.Email
	toSerialize["name"] = o.Name
	toSerialize["guests"] = o.Guests
	toSerialize["guestsIssued"] = o.GuestsIssued
	toSerialize["keypadIssued"] = o.KeypadIssued
	toSerialize["state"] = o.State
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	toSerialize["automation"] = o.Automation
	if !IsNil(o.CheckedIn) {
		toSerialize["checkedIn"] = o.CheckedIn
	}
	toSerialize["startDate"] = o.StartDate
	toSerialize["endDate"] = o.EndDate
	toSerialize["updateDate"] = o.UpdateDate
	toSerialize["isCurrentlyIssuingAuth"] = o.IsCurrentlyIssuingAuth
	toSerialize["isCurrentlyRevokingAuth"] = o.IsCurrentlyRevokingAuth
	toSerialize["hasCustomAccessTimes"] = o.HasCustomAccessTimes
	if !IsNil(o.CurrentlyIssuingAuth) {
		toSerialize["currentlyIssuingAuth"] = o.CurrentlyIssuingAuth
	}
	if !IsNil(o.CurrentlyRevokingAuth) {
		toSerialize["currentlyRevokingAuth"] = o.CurrentlyRevokingAuth
	}
	return toSerialize, nil
}

func (o *AddressReservation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"addressId",
		"accountId",
		"email",
		"name",
		"guests",
		"guestsIssued",
		"keypadIssued",
		"state",
		"automation",
		"startDate",
		"endDate",
		"updateDate",
		"isCurrentlyIssuingAuth",
		"isCurrentlyRevokingAuth",
		"hasCustomAccessTimes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddressReservation := _AddressReservation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddressReservation)

	if err != nil {
		return err
	}

	*o = AddressReservation(varAddressReservation)

	return err
}

type NullableAddressReservation struct {
	value *AddressReservation
	isSet bool
}

func (v NullableAddressReservation) Get() *AddressReservation {
	return v.value
}

func (v *NullableAddressReservation) Set(val *AddressReservation) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressReservation) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressReservation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressReservation(val *AddressReservation) *NullableAddressReservation {
	return &NullableAddressReservation{value: val, isSet: true}
}

func (v NullableAddressReservation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressReservation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


