/*
Nuki API

The Nuki Web Api

API version: 3.13.0
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the Digest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Digest{}

// Digest struct for Digest
type Digest struct {
	Algorithm *string `json:"algorithm,omitempty"`
	Value []string `json:"value,omitempty"`
}

// NewDigest instantiates a new Digest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDigest() *Digest {
	this := Digest{}
	return &this
}

// NewDigestWithDefaults instantiates a new Digest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDigestWithDefaults() *Digest {
	this := Digest{}
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *Digest) GetAlgorithm() string {
	if o == nil || IsNil(o.Algorithm) {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Digest) GetAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.Algorithm) {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *Digest) HasAlgorithm() bool {
	if o != nil && !IsNil(o.Algorithm) {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *Digest) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *Digest) GetValue() []string {
	if o == nil || IsNil(o.Value) {
		var ret []string
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Digest) GetValueOk() ([]string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *Digest) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given []string and assigns it to the Value field.
func (o *Digest) SetValue(v []string) {
	o.Value = v
}

func (o Digest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Digest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Algorithm) {
		toSerialize["algorithm"] = o.Algorithm
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableDigest struct {
	value *Digest
	isSet bool
}

func (v NullableDigest) Get() *Digest {
	return v.value
}

func (v *NullableDigest) Set(val *Digest) {
	v.value = val
	v.isSet = true
}

func (v NullableDigest) IsSet() bool {
	return v.isSet
}

func (v *NullableDigest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDigest(val *Digest) *NullableDigest {
	return &NullableDigest{value: val, isSet: true}
}

func (v NullableDigest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDigest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


