/*
Nuki API

The Nuki Web Api

API version: 3.10.2
Contact: contact@nuki.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the WebhookLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookLog{}

// WebhookLog struct for WebhookLog
type WebhookLog struct {
	// The WebhookLog id
	Id string `json:"id"`
	// Request id, set when api-triggered request otherwise empty
	RequestId *string `json:"requestId,omitempty"`
	// If the webhooks sends the data successfully
	Succeeded *bool `json:"succeeded,omitempty"`
	// Http Status code of the webhook response
	ResponseStatus *int32 `json:"responseStatus,omitempty"`
	// The duration of the webhook in milli seconds
	Duration *int64 `json:"duration,omitempty"`
	// The account id
	AccountId int32 `json:"accountId"`
	Request *WebhookMessage `json:"request,omitempty"`
	Response *WebhookMessage `json:"response,omitempty"`
	// Used Api Key for the webhook
	ApiKeyId int32 `json:"apiKeyId"`
	// last updated time
	Updated time.Time `json:"updated"`
	// Creation Date
	Created time.Time `json:"created"`
}

type _WebhookLog WebhookLog

// NewWebhookLog instantiates a new WebhookLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookLog(id string, accountId int32, apiKeyId int32, updated time.Time, created time.Time) *WebhookLog {
	this := WebhookLog{}
	this.Id = id
	this.AccountId = accountId
	this.ApiKeyId = apiKeyId
	this.Updated = updated
	this.Created = created
	return &this
}

// NewWebhookLogWithDefaults instantiates a new WebhookLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookLogWithDefaults() *WebhookLog {
	this := WebhookLog{}
	return &this
}

// GetId returns the Id field value
func (o *WebhookLog) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WebhookLog) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WebhookLog) SetId(v string) {
	o.Id = v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *WebhookLog) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLog) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *WebhookLog) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *WebhookLog) SetRequestId(v string) {
	o.RequestId = &v
}

// GetSucceeded returns the Succeeded field value if set, zero value otherwise.
func (o *WebhookLog) GetSucceeded() bool {
	if o == nil || IsNil(o.Succeeded) {
		var ret bool
		return ret
	}
	return *o.Succeeded
}

// GetSucceededOk returns a tuple with the Succeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLog) GetSucceededOk() (*bool, bool) {
	if o == nil || IsNil(o.Succeeded) {
		return nil, false
	}
	return o.Succeeded, true
}

// HasSucceeded returns a boolean if a field has been set.
func (o *WebhookLog) HasSucceeded() bool {
	if o != nil && !IsNil(o.Succeeded) {
		return true
	}

	return false
}

// SetSucceeded gets a reference to the given bool and assigns it to the Succeeded field.
func (o *WebhookLog) SetSucceeded(v bool) {
	o.Succeeded = &v
}

// GetResponseStatus returns the ResponseStatus field value if set, zero value otherwise.
func (o *WebhookLog) GetResponseStatus() int32 {
	if o == nil || IsNil(o.ResponseStatus) {
		var ret int32
		return ret
	}
	return *o.ResponseStatus
}

// GetResponseStatusOk returns a tuple with the ResponseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLog) GetResponseStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.ResponseStatus) {
		return nil, false
	}
	return o.ResponseStatus, true
}

// HasResponseStatus returns a boolean if a field has been set.
func (o *WebhookLog) HasResponseStatus() bool {
	if o != nil && !IsNil(o.ResponseStatus) {
		return true
	}

	return false
}

// SetResponseStatus gets a reference to the given int32 and assigns it to the ResponseStatus field.
func (o *WebhookLog) SetResponseStatus(v int32) {
	o.ResponseStatus = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *WebhookLog) GetDuration() int64 {
	if o == nil || IsNil(o.Duration) {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLog) GetDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *WebhookLog) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *WebhookLog) SetDuration(v int64) {
	o.Duration = &v
}

// GetAccountId returns the AccountId field value
func (o *WebhookLog) GetAccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *WebhookLog) GetAccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *WebhookLog) SetAccountId(v int32) {
	o.AccountId = v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *WebhookLog) GetRequest() WebhookMessage {
	if o == nil || IsNil(o.Request) {
		var ret WebhookMessage
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLog) GetRequestOk() (*WebhookMessage, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *WebhookLog) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given WebhookMessage and assigns it to the Request field.
func (o *WebhookLog) SetRequest(v WebhookMessage) {
	o.Request = &v
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *WebhookLog) GetResponse() WebhookMessage {
	if o == nil || IsNil(o.Response) {
		var ret WebhookMessage
		return ret
	}
	return *o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLog) GetResponseOk() (*WebhookMessage, bool) {
	if o == nil || IsNil(o.Response) {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *WebhookLog) HasResponse() bool {
	if o != nil && !IsNil(o.Response) {
		return true
	}

	return false
}

// SetResponse gets a reference to the given WebhookMessage and assigns it to the Response field.
func (o *WebhookLog) SetResponse(v WebhookMessage) {
	o.Response = &v
}

// GetApiKeyId returns the ApiKeyId field value
func (o *WebhookLog) GetApiKeyId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApiKeyId
}

// GetApiKeyIdOk returns a tuple with the ApiKeyId field value
// and a boolean to check if the value has been set.
func (o *WebhookLog) GetApiKeyIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKeyId, true
}

// SetApiKeyId sets field value
func (o *WebhookLog) SetApiKeyId(v int32) {
	o.ApiKeyId = v
}

// GetUpdated returns the Updated field value
func (o *WebhookLog) GetUpdated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value
// and a boolean to check if the value has been set.
func (o *WebhookLog) GetUpdatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Updated, true
}

// SetUpdated sets field value
func (o *WebhookLog) SetUpdated(v time.Time) {
	o.Updated = v
}

// GetCreated returns the Created field value
func (o *WebhookLog) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *WebhookLog) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *WebhookLog) SetCreated(v time.Time) {
	o.Created = v
}

func (o WebhookLog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.RequestId) {
		toSerialize["requestId"] = o.RequestId
	}
	if !IsNil(o.Succeeded) {
		toSerialize["succeeded"] = o.Succeeded
	}
	if !IsNil(o.ResponseStatus) {
		toSerialize["responseStatus"] = o.ResponseStatus
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	toSerialize["accountId"] = o.AccountId
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !IsNil(o.Response) {
		toSerialize["response"] = o.Response
	}
	toSerialize["apiKeyId"] = o.ApiKeyId
	toSerialize["updated"] = o.Updated
	toSerialize["created"] = o.Created
	return toSerialize, nil
}

func (o *WebhookLog) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"accountId",
		"apiKeyId",
		"updated",
		"created",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookLog := _WebhookLog{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookLog)

	if err != nil {
		return err
	}

	*o = WebhookLog(varWebhookLog)

	return err
}

type NullableWebhookLog struct {
	value *WebhookLog
	isSet bool
}

func (v NullableWebhookLog) Get() *WebhookLog {
	return v.value
}

func (v *NullableWebhookLog) Set(val *WebhookLog) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookLog) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookLog(val *WebhookLog) *NullableWebhookLog {
	return &NullableWebhookLog{value: val, isSet: true}
}

func (v NullableWebhookLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


